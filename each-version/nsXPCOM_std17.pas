unit nsXPCOM_std17;

{$MACRO on}

{$IFDEF Windows}
  {$DEFINE extdecl:=stdcall}
{$ELSE Windows}
  {$DEFINE extdecl:=cdecl}
{$ENDIF}

{$IFNDEF FPC_HAS_CONSTREF}
  {$DEFINE constref:=const}
{$ENDIF}

interface

uses
  nsConsts, nsGeckoStrings, nsTypes;

const
  NS_ISUPPORTS_STD17_IID: TGUID = '{00000000-0000-0000-c000-000000000046}';

  MOZIJSSUBSCRIPTLOADER_STD17_IID: TGUID = '{8792d77e-1dd2-11b2-ac7f-9bc9be4f2916}';

  NS_IARRAY_STD17_IID: TGUID = '{114744d9-c369-456e-b55a-52fe52880d2d}';

  NS_IMUTABLEARRAY_STD17_IID: TGUID = '{2cd0b2f8-d4dd-48b8-87ba-b0200501f079}';

  NS_IASN1OBJECT_STD17_IID: TGUID = '{ba8bf582-1dd1-11b2-898c-f40246bc9a63}';
  NS_IASN1OBJECT_STD17_ASN1_END_CONTENTS = 0;
  NS_IASN1OBJECT_STD17_ASN1_BOOLEAN = 1;
  NS_IASN1OBJECT_STD17_ASN1_INTEGER = 2;
  NS_IASN1OBJECT_STD17_ASN1_BIT_STRING = 3;
  NS_IASN1OBJECT_STD17_ASN1_OCTET_STRING = 4;
  NS_IASN1OBJECT_STD17_ASN1_NULL = 5;
  NS_IASN1OBJECT_STD17_ASN1_OBJECT_ID = 6;
  NS_IASN1OBJECT_STD17_ASN1_ENUMERATED = 10;
  NS_IASN1OBJECT_STD17_ASN1_UTF8_STRING = 12;
  NS_IASN1OBJECT_STD17_ASN1_SEQUENCE = 16;
  NS_IASN1OBJECT_STD17_ASN1_SET = 17;
  NS_IASN1OBJECT_STD17_ASN1_PRINTABLE_STRING = 19;
  NS_IASN1OBJECT_STD17_ASN1_T61_STRING = 20;
  NS_IASN1OBJECT_STD17_ASN1_IA5_STRING = 22;
  NS_IASN1OBJECT_STD17_ASN1_UTC_TIME = 23;
  NS_IASN1OBJECT_STD17_ASN1_GEN_TIME = 24;
  NS_IASN1OBJECT_STD17_ASN1_VISIBLE_STRING = 26;
  NS_IASN1OBJECT_STD17_ASN1_UNIVERSAL_STRING = 28;
  NS_IASN1OBJECT_STD17_ASN1_BMP_STRING = 30;
  NS_IASN1OBJECT_STD17_ASN1_HIGH_TAG_NUMBER = 31;
  NS_IASN1OBJECT_STD17_ASN1_CONTEXT_SPECIFIC = 32;
  NS_IASN1OBJECT_STD17_ASN1_APPLICATION = 33;
  NS_IASN1OBJECT_STD17_ASN1_PRIVATE = 34;

  NS_IASN1SEQUENCE_STD17_IID: TGUID = '{b6b957e6-1dd1-11b2-89d7-e30624f50b00}';

  NS_IAUTHPROMPT_STD17_IID: TGUID = '{2f977d45-5485-11d4-87e2-0010a4e75ef2}';
  NS_IAUTHPROMPT_STD17_SAVE_PASSWORD_NEVER = 0;
  NS_IAUTHPROMPT_STD17_SAVE_PASSWORD_FOR_SESSION = 1;
  NS_IAUTHPROMPT_STD17_SAVE_PASSWORD_PERMANENTLY = 2;

  NS_IBADCERTLISTENER_STD17_IID: TGUID = '{86960956-edb0-11d4-998b-00b0d02354a0}';
  NS_IBADCERTLISTENER_STD17_UNINIT_ADD_FLAG = -1;
  NS_IBADCERTLISTENER_STD17_ADD_TRUSTED_FOR_SESSION = 1;
  NS_IBADCERTLISTENER_STD17_ADD_TRUSTED_PERMANENTLY = 2;

  NS_ISIMPLEENUMERATOR_STD17_IID: TGUID = '{d1899240-f9d2-11d2-bdd6-000064657374}';

  NS_ICATEGORYMANAGER_STD17_IID: TGUID = '{3275b2cd-af6d-429a-80d7-f0c5120342ac}';

  NS_ICERTIFICATEDIALOGS_STD17_IID: TGUID = '{a03ca940-09be-11d5-ac5d-000064657374}';

  NS_IREQUEST_STD17_IID: TGUID = '{ef6bfbd2-fd46-48d8-96b7-9f8f0fd387fe}';
  NS_IREQUEST_STD17_LOAD_NORMAL = 0;
  NS_IREQUEST_STD17_LOAD_BACKGROUND = 1;
  NS_IREQUEST_STD17_INHIBIT_CACHING = 128;
  NS_IREQUEST_STD17_INHIBIT_PERSISTENT_CACHING = 256;
  NS_IREQUEST_STD17_LOAD_BYPASS_CACHE = 512;
  NS_IREQUEST_STD17_LOAD_FROM_CACHE = 1024;
  NS_IREQUEST_STD17_VALIDATE_ALWAYS = 2048;
  NS_IREQUEST_STD17_VALIDATE_NEVER = 4096;
  NS_IREQUEST_STD17_VALIDATE_ONCE_PER_SESSION = 8192;

  NS_ICHANNEL_STD17_IID: TGUID = '{c63a055a-a676-4e71-bf3c-6cfa11082018}';
  NS_ICHANNEL_STD17_LOAD_DOCUMENT_URI = 65536;
  NS_ICHANNEL_STD17_LOAD_RETARGETED_DOCUMENT_URI = 131072;
  NS_ICHANNEL_STD17_LOAD_REPLACE = 262144;
  NS_ICHANNEL_STD17_LOAD_INITIAL_DOCUMENT_URI = 524288;
  NS_ICHANNEL_STD17_LOAD_TARGETED = 1048576;

  NS_IPROGRAMMINGLANGUAGE_STD17_IID: TGUID = '{ea604e90-40ba-11d5-90bb-0010a4e73d9a}';
  NS_IPROGRAMMINGLANGUAGE_STD17_UNKNOWN = 0;
  NS_IPROGRAMMINGLANGUAGE_STD17_CPLUSPLUS = 1;
  NS_IPROGRAMMINGLANGUAGE_STD17_JAVASCRIPT = 2;
  NS_IPROGRAMMINGLANGUAGE_STD17_PYTHON = 3;
  NS_IPROGRAMMINGLANGUAGE_STD17_PERL = 4;
  NS_IPROGRAMMINGLANGUAGE_STD17_JAVA = 5;
  NS_IPROGRAMMINGLANGUAGE_STD17_ZX81_BASIC = 6;
  NS_IPROGRAMMINGLANGUAGE_STD17_JAVASCRIPT2 = 7;

  NS_ICLASSINFO_STD17_IID: TGUID = '{986c11d0-f340-11d4-9075-0010a4e73d9a}';
  NS_ICLASSINFO_STD17_SINGLETON = 1;
  NS_ICLASSINFO_STD17_THREADSAFE = 2;
  NS_ICLASSINFO_STD17_MAIN_THREAD_ONLY = 4;
  NS_ICLASSINFO_STD17_DOM_OBJECT = 8;
  NS_ICLASSINFO_STD17_PLUGIN_OBJECT = 16;
  NS_ICLASSINFO_STD17_EAGER_CLASSINFO = 32;
  NS_ICLASSINFO_STD17_CONTENT_NODE = 64;
  NS_ICLASSINFO_STD17_RESERVED = 2147483648;

  NS_ICLIPBOARDCOMMANDS_STD17_IID: TGUID = '{b8100c90-73be-11d2-92a5-00105a1b0d64}';

  NS_ICOMPONENTMANAGER_STD17_IID: TGUID = '{a88e5a60-205a-4bb1-94e1-2628daf51eae}';

  NS_ICOMPONENTREGISTRAR_STD17_IID: TGUID = '{2417cbfe-65ad-48a6-b4b6-eb84db174392}';

  NS_ICONTEXTMENULISTENER_STD17_IID: TGUID = '{3478b6b0-3875-11d4-94ef-0020183bf181}';
  NS_ICONTEXTMENULISTENER_STD17_CONTEXT_NONE = 0;
  NS_ICONTEXTMENULISTENER_STD17_CONTEXT_LINK = 1;
  NS_ICONTEXTMENULISTENER_STD17_CONTEXT_IMAGE = 2;
  NS_ICONTEXTMENULISTENER_STD17_CONTEXT_DOCUMENT = 4;
  NS_ICONTEXTMENULISTENER_STD17_CONTEXT_TEXT = 8;
  NS_ICONTEXTMENULISTENER_STD17_CONTEXT_INPUT = 16;

  NS_ICOOKIE_STD17_IID: TGUID = '{e9fcb9a4-d376-458f-b720-e65e7df593bc}';
  NS_ICOOKIE_STD17_STATUS_UNKNOWN = 0;
  NS_ICOOKIE_STD17_STATUS_ACCEPTED = 1;
  NS_ICOOKIE_STD17_STATUS_DOWNGRADED = 2;
  NS_ICOOKIE_STD17_STATUS_FLAGGED = 3;
  NS_ICOOKIE_STD17_STATUS_REJECTED = 4;
  NS_ICOOKIE_STD17_POLICY_UNKNOWN = 0;
  NS_ICOOKIE_STD17_POLICY_NONE = 1;
  NS_ICOOKIE_STD17_POLICY_NO_CONSENT = 2;
  NS_ICOOKIE_STD17_POLICY_IMPLICIT_CONSENT = 3;
  NS_ICOOKIE_STD17_POLICY_EXPLICIT_CONSENT = 4;
  NS_ICOOKIE_STD17_POLICY_NO_II = 5;

  NS_ICOOKIEMANAGER_STD17_IID: TGUID = '{aaab6710-0f2c-11d5-a53b-0010a401eb10}';

  NS_ICRLINFO_STD17_IID: TGUID = '{c185d920-4a3e-11d5-ba27-00108303b117}';

  NS_IDEBUG_STD17_IID: TGUID = '{3bf0c3d7-3bd9-4cf2-a971-33572c503e1e}';

  NS_IFILE_STD17_IID: TGUID = '{c8c0a080-0868-11d3-915f-d9d889d48e3c}';
  NS_IFILE_STD17_NORMAL_FILE_TYPE = 0;
  NS_IFILE_STD17_DIRECTORY_TYPE = 1;

  NS_IDIRECTORYSERVICEPROVIDER_STD17_IID: TGUID = '{bbf8cab0-d43a-11d3-8cc2-00609792278c}';

  NS_IDIRECTORYSERVICEPROVIDER2_STD17_IID: TGUID = '{2f977d4b-5485-11d4-87e2-0010a4e75ef2}';

  NS_IDIRECTORYSERVICE_STD17_IID: TGUID = '{57a66a60-d43a-11d3-8cc2-00609792278c}';

  NS_IDOM3DOCUMENTEVENT_STD17_IID: TGUID = '{090ecc19-b7cb-4f47-ae47-ed68d4926249}';

  NS_IDOM3EVENTTARGET_STD17_IID: TGUID = '{3e9c01a7-de97-4c3b-8294-b4bd9d7056d1}';

  NS_IDOMABSTRACTVIEW_STD17_IID: TGUID = '{f51ebade-8b1a-11d3-aae7-0010830123b4}';

  NS_IDOMNODE_STD17_IID: TGUID = '{a6cf907c-15b3-11d2-932e-00805f8add32}';
  NS_IDOMNODE_STD17_ELEMENT_NODE = 1;
  NS_IDOMNODE_STD17_ATTRIBUTE_NODE = 2;
  NS_IDOMNODE_STD17_TEXT_NODE = 3;
  NS_IDOMNODE_STD17_CDATA_SECTION_NODE = 4;
  NS_IDOMNODE_STD17_ENTITY_REFERENCE_NODE = 5;
  NS_IDOMNODE_STD17_ENTITY_NODE = 6;
  NS_IDOMNODE_STD17_PROCESSING_INSTRUCTION_NODE = 7;
  NS_IDOMNODE_STD17_COMMENT_NODE = 8;
  NS_IDOMNODE_STD17_DOCUMENT_NODE = 9;
  NS_IDOMNODE_STD17_DOCUMENT_TYPE_NODE = 10;
  NS_IDOMNODE_STD17_DOCUMENT_FRAGMENT_NODE = 11;
  NS_IDOMNODE_STD17_NOTATION_NODE = 12;

  NS_IDOMATTR_STD17_IID: TGUID = '{a6cf9070-15b3-11d2-932e-00805f8add32}';

  NS_IDOMBARPROP_STD17_IID: TGUID = '{9eb2c150-1d56-11d3-8221-0060083a0bcf}';

  NS_IDOMCHARACTERDATA_STD17_IID: TGUID = '{a6cf9072-15b3-11d2-932e-00805f8add32}';

  NS_IDOMTEXT_STD17_IID: TGUID = '{a6cf9082-15b3-11d2-932e-00805f8add32}';

  NS_IDOMCDATASECTION_STD17_IID: TGUID = '{a6cf9071-15b3-11d2-932e-00805f8add32}';

  NS_IDOMCOMMENT_STD17_IID: TGUID = '{a6cf9073-15b3-11d2-932e-00805f8add32}';

  NS_IDOMCOUNTER_STD17_IID: TGUID = '{31adb439-0055-402d-9b1d-d5ca94f3f55b}';

  NS_IDOMCSSVALUE_STD17_IID: TGUID = '{009f7ea5-9e80-41be-b008-db62f10823f2}';
  NS_IDOMCSSVALUE_STD17_CSS_INHERIT = 0;
  NS_IDOMCSSVALUE_STD17_CSS_PRIMITIVE_VALUE = 1;
  NS_IDOMCSSVALUE_STD17_CSS_VALUE_LIST = 2;
  NS_IDOMCSSVALUE_STD17_CSS_CUSTOM = 3;

  NS_IDOMCSSPRIMITIVEVALUE_STD17_IID: TGUID = '{e249031f-8df9-4e7a-b644-18946dce0019}';
  NS_IDOMCSSPRIMITIVEVALUE_STD17_CSS_UNKNOWN = 0;
  NS_IDOMCSSPRIMITIVEVALUE_STD17_CSS_NUMBER = 1;
  NS_IDOMCSSPRIMITIVEVALUE_STD17_CSS_PERCENTAGE = 2;
  NS_IDOMCSSPRIMITIVEVALUE_STD17_CSS_EMS = 3;
  NS_IDOMCSSPRIMITIVEVALUE_STD17_CSS_EXS = 4;
  NS_IDOMCSSPRIMITIVEVALUE_STD17_CSS_PX = 5;
  NS_IDOMCSSPRIMITIVEVALUE_STD17_CSS_CM = 6;
  NS_IDOMCSSPRIMITIVEVALUE_STD17_CSS_MM = 7;
  NS_IDOMCSSPRIMITIVEVALUE_STD17_CSS_IN = 8;
  NS_IDOMCSSPRIMITIVEVALUE_STD17_CSS_PT = 9;
  NS_IDOMCSSPRIMITIVEVALUE_STD17_CSS_PC = 10;
  NS_IDOMCSSPRIMITIVEVALUE_STD17_CSS_DEG = 11;
  NS_IDOMCSSPRIMITIVEVALUE_STD17_CSS_RAD = 12;
  NS_IDOMCSSPRIMITIVEVALUE_STD17_CSS_GRAD = 13;
  NS_IDOMCSSPRIMITIVEVALUE_STD17_CSS_MS = 14;
  NS_IDOMCSSPRIMITIVEVALUE_STD17_CSS_S = 15;
  NS_IDOMCSSPRIMITIVEVALUE_STD17_CSS_HZ = 16;
  NS_IDOMCSSPRIMITIVEVALUE_STD17_CSS_KHZ = 17;
  NS_IDOMCSSPRIMITIVEVALUE_STD17_CSS_DIMENSION = 18;
  NS_IDOMCSSPRIMITIVEVALUE_STD17_CSS_STRING = 19;
  NS_IDOMCSSPRIMITIVEVALUE_STD17_CSS_URI = 20;
  NS_IDOMCSSPRIMITIVEVALUE_STD17_CSS_IDENT = 21;
  NS_IDOMCSSPRIMITIVEVALUE_STD17_CSS_ATTR = 22;
  NS_IDOMCSSPRIMITIVEVALUE_STD17_CSS_COUNTER = 23;
  NS_IDOMCSSPRIMITIVEVALUE_STD17_CSS_RECT = 24;
  NS_IDOMCSSPRIMITIVEVALUE_STD17_CSS_RGBCOLOR = 25;

  NS_IDOMCSSRULE_STD17_IID: TGUID = '{a6cf90c1-15b3-11d2-932e-00805f8add32}';
  NS_IDOMCSSRULE_STD17_UNKNOWN_RULE = 0;
  NS_IDOMCSSRULE_STD17_STYLE_RULE = 1;
  NS_IDOMCSSRULE_STD17_CHARSET_RULE = 2;
  NS_IDOMCSSRULE_STD17_IMPORT_RULE = 3;
  NS_IDOMCSSRULE_STD17_MEDIA_RULE = 4;
  NS_IDOMCSSRULE_STD17_FONT_FACE_RULE = 5;
  NS_IDOMCSSRULE_STD17_PAGE_RULE = 6;

  NS_IDOMCSSRULELIST_STD17_IID: TGUID = '{a6cf90c0-15b3-11d2-932e-00805f8add32}';

  NS_IDOMCSSSTYLEDECLARATION_STD17_IID: TGUID = '{a6cf90be-15b3-11d2-932e-00805f8add32}';

  NS_IDOMSTYLESHEET_STD17_IID: TGUID = '{a6cf9080-15b3-11d2-932e-00805f8add32}';

  NS_IDOMCSSSTYLESHEET_STD17_IID: TGUID = '{a6cf90c2-15b3-11d2-932e-00805f8add32}';

  NS_IDOMCSSVALUELIST_STD17_IID: TGUID = '{8f09fa84-39b9-4dca-9b2f-db0eeb186286}';

  NS_IDOMEVENT_STD17_IID: TGUID = '{a66b7b80-ff46-bd97-0080-5f8ae38add32}';
  NS_IDOMEVENT_STD17_CAPTURING_PHASE = 1;
  NS_IDOMEVENT_STD17_AT_TARGET = 2;
  NS_IDOMEVENT_STD17_BUBBLING_PHASE = 3;

  NS_IDOMCUSTOMEVENT_STD17_IID: TGUID = '{55c7af7b-1a64-40bf-87eb-2c2cbee0491b}';

  NS_IDOMDOCUMENT_STD17_IID: TGUID = '{a6cf9075-15b3-11d2-932e-00805f8add32}';

  NS_IDOMDOCUMENTEVENT_STD17_IID: TGUID = '{46b91d66-28e2-11d4-ab1e-0010830123b4}';

  NS_IDOMDOCUMENTFRAGMENT_STD17_IID: TGUID = '{a6cf9076-15b3-11d2-932e-00805f8add32}';

  NS_IDOMDOCUMENTRANGE_STD17_IID: TGUID = '{7b9badc6-c9bc-447a-8670-dbd195aed24b}';

  NS_IDOMDOCUMENTSTYLE_STD17_IID: TGUID = '{3d9f4973-dd2e-48f5-b5f7-2634e09eadd9}';

  NS_IDOMDOCUMENTTYPE_STD17_IID: TGUID = '{a6cf9077-15b3-11d2-932e-00805f8add32}';

  NS_IDOMDOCUMENTVIEW_STD17_IID: TGUID = '{1acdb2ba-1dd2-11b2-95bc-9542495d2569}';

  NS_IDOMDOMEXCEPTION_STD17_IID: TGUID = '{a6cf910a-15b3-11d2-932e-00805f8add32}';
  NS_IDOMDOMEXCEPTION_STD17_INDEX_SIZE_ERR = 1;
  NS_IDOMDOMEXCEPTION_STD17_DOMSTRING_SIZE_ERR = 2;
  NS_IDOMDOMEXCEPTION_STD17_HIERARCHY_REQUEST_ERR = 3;
  NS_IDOMDOMEXCEPTION_STD17_WRONG_DOCUMENT_ERR = 4;
  NS_IDOMDOMEXCEPTION_STD17_INVALID_CHARACTER_ERR = 5;
  NS_IDOMDOMEXCEPTION_STD17_NO_DATA_ALLOWED_ERR = 6;
  NS_IDOMDOMEXCEPTION_STD17_NO_MODIFICATION_ALLOWED_ERR = 7;
  NS_IDOMDOMEXCEPTION_STD17_NOT_FOUND_ERR = 8;
  NS_IDOMDOMEXCEPTION_STD17_NOT_SUPPORTED_ERR = 9;
  NS_IDOMDOMEXCEPTION_STD17_INUSE_ATTRIBUTE_ERR = 10;
  NS_IDOMDOMEXCEPTION_STD17_INVALID_STATE_ERR = 11;
  NS_IDOMDOMEXCEPTION_STD17_SYNTAX_ERR = 12;
  NS_IDOMDOMEXCEPTION_STD17_INVALID_MODIFICATION_ERR = 13;
  NS_IDOMDOMEXCEPTION_STD17_NAMESPACE_ERR = 14;
  NS_IDOMDOMEXCEPTION_STD17_INVALID_ACCESS_ERR = 15;

  NS_IDOMDOMIMPLEMENTATION_STD17_IID: TGUID = '{a6cf9074-15b3-11d2-932e-00805f8add32}';

  NS_IDOMELEMENT_STD17_IID: TGUID = '{a6cf9078-15b3-11d2-932e-00805f8add32}';

  NS_IDOMENTITY_STD17_IID: TGUID = '{a6cf9079-15b3-11d2-932e-00805f8add32}';

  NS_IDOMENTITYREFERENCE_STD17_IID: TGUID = '{a6cf907a-15b3-11d2-932e-00805f8add32}';

  NS_IDOMEVENTGROUP_STD17_IID: TGUID = '{33347bee-6620-4841-8152-36091ae80c7e}';

  NS_IDOMEVENTLISTENER_STD17_IID: TGUID = '{df31c120-ded6-11d1-bd85-00805f8ae3f4}';

  NS_IDOMEVENTTARGET_STD17_IID: TGUID = '{1c773b30-d1cf-11d2-bd95-00805f8ae3f4}';

  NS_IDOMHTMLELEMENT_STD17_IID: TGUID = '{a6cf9085-15b3-11d2-932e-00805f8add32}';

  NS_IDOMHTMLANCHORELEMENT_STD17_IID: TGUID = '{a6cf90aa-15b3-11d2-932e-00805f8add32}';

  NS_IDOMHTMLAPPLETELEMENT_STD17_IID: TGUID = '{a6cf90ae-15b3-11d2-932e-00805f8add32}';

  NS_IDOMHTMLAREAELEMENT_STD17_IID: TGUID = '{a6cf90b0-15b3-11d2-932e-00805f8add32}';

  NS_IDOMHTMLBASEELEMENT_STD17_IID: TGUID = '{a6cf908b-15b3-11d2-932e-00805f8add32}';

  NS_IDOMHTMLBASEFONTELEMENT_STD17_IID: TGUID = '{a6cf90a6-15b3-11d2-932e-00805f8add32}';

  NS_IDOMHTMLBODYELEMENT_STD17_IID: TGUID = '{a6cf908e-15b3-11d2-932e-00805f8add32}';

  NS_IDOMHTMLBRELEMENT_STD17_IID: TGUID = '{a6cf90a5-15b3-11d2-932e-00805f8add32}';

  NS_IDOMHTMLBUTTONELEMENT_STD17_IID: TGUID = '{a6cf9095-15b3-11d2-932e-00805f8add32}';

  NS_IDOMHTMLCOLLECTION_STD17_IID: TGUID = '{a6cf9083-15b3-11d2-932e-00805f8add32}';

  NS_IDOMHTMLDIRECTORYELEMENT_STD17_IID: TGUID = '{a6cf909c-15b3-11d2-932e-00805f8add32}';

  NS_IDOMHTMLDIVELEMENT_STD17_IID: TGUID = '{a6cf90a0-15b3-11d2-932e-00805f8add32}';

  NS_IDOMHTMLDLISTELEMENT_STD17_IID: TGUID = '{a6cf909b-15b3-11d2-932e-00805f8add32}';

  NS_IDOMHTMLDOCUMENT_STD17_IID: TGUID = '{a6cf9084-15b3-11d2-932e-00805f8add32}';

  NS_IDOMHTMLEMBEDELEMENT_STD17_IID: TGUID = '{123f90ab-15b3-11d2-456e-00805f8add32}';

  NS_IDOMHTMLFIELDSETELEMENT_STD17_IID: TGUID = '{a6cf9097-15b3-11d2-932e-00805f8add32}';

  NS_IDOMHTMLFONTELEMENT_STD17_IID: TGUID = '{a6cf90a7-15b3-11d2-932e-00805f8add32}';

  NS_IDOMHTMLFORMELEMENT_STD17_IID: TGUID = '{a6cf908f-15b3-11d2-932e-00805f8add32}';

  NS_IDOMHTMLFRAMEELEMENT_STD17_IID: TGUID = '{a6cf90b9-15b3-11d2-932e-00805f8add32}';

  NS_IDOMHTMLFRAMESETELEMENT_STD17_IID: TGUID = '{a6cf90b8-15b3-11d2-932e-00805f8add32}';

  NS_IDOMHTMLHEADELEMENT_STD17_IID: TGUID = '{a6cf9087-15b3-11d2-932e-00805f8add32}';

  NS_IDOMHTMLHEADINGELEMENT_STD17_IID: TGUID = '{a6cf90a2-15b3-11d2-932e-00805f8add32}';

  NS_IDOMHTMLHRELEMENT_STD17_IID: TGUID = '{a6cf90a8-15b3-11d2-932e-00805f8add32}';

  NS_IDOMHTMLHTMLELEMENT_STD17_IID: TGUID = '{a6cf9086-15b3-11d2-932e-00805f8add32}';

  NS_IDOMHTMLIFRAMEELEMENT_STD17_IID: TGUID = '{a6cf90ba-15b3-11d2-932e-00805f8add32}';

  NS_IDOMHTMLIMAGEELEMENT_STD17_IID: TGUID = '{a6cf90ab-15b3-11d2-932e-00805f8add32}';

  NS_IDOMHTMLINPUTELEMENT_STD17_IID: TGUID = '{a6cf9093-15b3-11d2-932e-00805f8add32}';

  NS_IDOMHTMLISINDEXELEMENT_STD17_IID: TGUID = '{a6cf908c-15b3-11d2-932e-00805f8add32}';

  NS_IDOMHTMLLABELELEMENT_STD17_IID: TGUID = '{a6cf9096-15b3-11d2-932e-00805f8add32}';

  NS_IDOMHTMLLEGENDELEMENT_STD17_IID: TGUID = '{a6cf9098-15b3-11d2-932e-00805f8add32}';

  NS_IDOMHTMLLIELEMENT_STD17_IID: TGUID = '{a6cf909e-15b3-11d2-932e-00805f8add32}';

  NS_IDOMHTMLLINKELEMENT_STD17_IID: TGUID = '{a6cf9088-15b3-11d2-932e-00805f8add32}';

  NS_IDOMHTMLMAPELEMENT_STD17_IID: TGUID = '{a6cf90af-15b3-11d2-932e-00805f8add32}';

  NS_IDOMHTMLMENUELEMENT_STD17_IID: TGUID = '{a6cf909d-15b3-11d2-932e-00805f8add32}';

  NS_IDOMHTMLMETAELEMENT_STD17_IID: TGUID = '{a6cf908a-15b3-11d2-932e-00805f8add32}';

  NS_IDOMHTMLMODELEMENT_STD17_IID: TGUID = '{a6cf90a9-15b3-11d2-932e-00805f8add32}';

  NS_IDOMHTMLOBJECTELEMENT_STD17_IID: TGUID = '{a6cf90ac-15b3-11d2-932e-00805f8add32}';

  NS_IDOMHTMLOLISTELEMENT_STD17_IID: TGUID = '{a6cf909a-15b3-11d2-932e-00805f8add32}';

  NS_IDOMHTMLOPTGROUPELEMENT_STD17_IID: TGUID = '{a6cf9091-15b3-11d2-932e-00805f8add32}';

  NS_IDOMHTMLOPTIONELEMENT_STD17_IID: TGUID = '{a6cf9092-15b3-11d2-932e-00805f8add32}';

  NS_IDOMHTMLOPTIONSCOLLECTION_STD17_IID: TGUID = '{bce0213c-f70f-488f-b93f-688acca55d63}';

  NS_IDOMHTMLPARAGRAPHELEMENT_STD17_IID: TGUID = '{a6cf90a1-15b3-11d2-932e-00805f8add32}';

  NS_IDOMHTMLPARAMELEMENT_STD17_IID: TGUID = '{a6cf90ad-15b3-11d2-932e-00805f8add32}';

  NS_IDOMHTMLPREELEMENT_STD17_IID: TGUID = '{a6cf90a4-15b3-11d2-932e-00805f8add32}';

  NS_IDOMHTMLQUOTEELEMENT_STD17_IID: TGUID = '{a6cf90a3-15b3-11d2-932e-00805f8add32}';

  NS_IDOMHTMLSCRIPTELEMENT_STD17_IID: TGUID = '{a6cf90b1-15b3-11d2-932e-00805f8add32}';

  NS_IDOMHTMLSELECTELEMENT_STD17_IID: TGUID = '{a6cf9090-15b3-11d2-932e-00805f8add32}';

  NS_IDOMHTMLSTYLEELEMENT_STD17_IID: TGUID = '{a6cf908d-15b3-11d2-932e-00805f8add32}';

  NS_IDOMHTMLTABLECAPTIONELEMENT_STD17_IID: TGUID = '{a6cf90b3-15b3-11d2-932e-00805f8add32}';

  NS_IDOMHTMLTABLECELLELEMENT_STD17_IID: TGUID = '{a6cf90b7-15b3-11d2-932e-00805f8add32}';

  NS_IDOMHTMLTABLECOLELEMENT_STD17_IID: TGUID = '{a6cf90b4-15b3-11d2-932e-00805f8add32}';

  NS_IDOMHTMLTABLEELEMENT_STD17_IID: TGUID = '{a6cf90b2-15b3-11d2-932e-00805f8add32}';

  NS_IDOMHTMLTABLEROWELEMENT_STD17_IID: TGUID = '{a6cf90b6-15b3-11d2-932e-00805f8add32}';

  NS_IDOMHTMLTABLESECTIONELEMENT_STD17_IID: TGUID = '{a6cf90b5-15b3-11d2-932e-00805f8add32}';

  NS_IDOMHTMLTEXTAREAELEMENT_STD17_IID: TGUID = '{a6cf9094-15b3-11d2-932e-00805f8add32}';

  NS_IDOMHTMLTITLEELEMENT_STD17_IID: TGUID = '{a6cf9089-15b3-11d2-932e-00805f8add32}';

  NS_IDOMHTMLULISTELEMENT_STD17_IID: TGUID = '{a6cf9099-15b3-11d2-932e-00805f8add32}';

  NS_IDOMMEDIALIST_STD17_IID: TGUID = '{9b0c2ed7-111c-4824-adf9-ef0da6dad371}';

  NS_IDOMUIEVENT_STD17_IID: TGUID = '{a6cf90c3-15b3-11d2-932e-00805f8add32}';

  NS_IDOMMOUSEEVENT_STD17_IID: TGUID = '{ff751edc-8b02-aae7-0010-8301838a3123}';

  NS_IDOMNAMEDNODEMAP_STD17_IID: TGUID = '{a6cf907b-15b3-11d2-932e-00805f8add32}';

  NS_IDOMNODELIST_STD17_IID: TGUID = '{a6cf907d-15b3-11d2-932e-00805f8add32}';

  NS_IDOMNOTATION_STD17_IID: TGUID = '{a6cf907e-15b3-11d2-932e-00805f8add32}';

  NS_IDOMPROCESSINGINSTRUCTION_STD17_IID: TGUID = '{a6cf907f-15b3-11d2-932e-00805f8add32}';

  NS_IDOMRANGE_STD17_IID: TGUID = '{a6cf90ce-15b3-11d2-932e-00805f8add32}';
  NS_IDOMRANGE_STD17_START_TO_START = 0;
  NS_IDOMRANGE_STD17_START_TO_END = 1;
  NS_IDOMRANGE_STD17_END_TO_END = 2;
  NS_IDOMRANGE_STD17_END_TO_START = 3;

  NS_IDOMRECT_STD17_IID: TGUID = '{71735f62-ac5c-4236-9a1f-5ffb280d531c}';

  NS_IDOMRGBCOLOR_STD17_IID: TGUID = '{6aff3102-320d-4986-9790-12316bb87cf9}';

  NS_IDOMSTYLESHEETLIST_STD17_IID: TGUID = '{a6cf9081-15b3-11d2-932e-00805f8add32}';

  NS_IDOMWINDOW_STD17_IID: TGUID = '{a6cf906b-15b3-11d2-932e-00805f8add32}';

  NS_IDOMWINDOW2_STD17_IID: TGUID = '{65455132-b96a-40ec-adea-52fa22b1028c}';

  NS_IDOMWINDOWCOLLECTION_STD17_IID: TGUID = '{a6cf906f-15b3-11d2-932e-00805f8add32}';

  NS_IEMBEDDINGSITEWINDOW_STD17_IID: TGUID = '{3e5432cd-9568-4bd1-8cbe-d50aba110743}';
  NS_IEMBEDDINGSITEWINDOW_STD17_DIM_FLAGS_POSITION = 1;
  NS_IEMBEDDINGSITEWINDOW_STD17_DIM_FLAGS_SIZE_INNER = 2;
  NS_IEMBEDDINGSITEWINDOW_STD17_DIM_FLAGS_SIZE_OUTER = 4;

  NS_IFACTORY_STD17_IID: TGUID = '{00000001-0000-0000-c000-000000000046}';

  NS_IURI_STD17_IID: TGUID = '{07a22cc0-0ce5-11d3-9331-00104ba0fd40}';

  NS_IURL_STD17_IID: TGUID = '{d6116970-8034-11d3-9399-00104ba0fd40}';

  NS_IFILEURL_STD17_IID: TGUID = '{d26b2e2e-1dd1-11b2-88f3-8545a7ba7949}';

  NS_IGLOBALHISTORY_STD17_IID: TGUID = '{9491c383-e3c4-11d2-bdbe-0050040a9b44}';

  NS_IHISTORYENTRY_STD17_IID: TGUID = '{a41661d4-1417-11d5-9882-00c04fa02f40}';

  NS_IHTTPCHANNEL_STD17_IID: TGUID = '{9277fe09-f0cc-4cd9-bbce-581dd94b0260}';

  NS_IHTTPHEADERVISITOR_STD17_IID: TGUID = '{0cf40717-d7c1-4a94-8c1e-d6c9734101bb}';

  NS_IINPUTSTREAM_STD17_IID: TGUID = '{fa9c7f6c-61b3-11d4-9877-00c04fa0cf4a}';

  NS_IINTERFACEREQUESTOR_STD17_IID: TGUID = '{033a1470-8b2a-11d3-af88-00a024ffc08c}';

  NS_IIOSERVICE_STD17_IID: TGUID = '{bddeda3f-9020-4d12-8c70-984ee9f7935e}';

  NS_ILOADGROUP_STD17_IID: TGUID = '{3de0a31c-feaf-400f-9f1e-4ef71f8b20cc}';

  NS_ILOCALFILE_STD17_IID: TGUID = '{aa610f20-a889-11d3-8c81-000064657374}';

  NS_IMEMORY_STD17_IID: TGUID = '{59e7e77a-38e4-11d4-8cf5-0060b0fc14a3}';

  NS_IMODULE_STD17_IID: TGUID = '{7392d032-5371-11d3-994e-00805fd26fee}';

  NS_IOBSERVER_STD17_IID: TGUID = '{db242e01-e4d9-11d2-9dde-000064657374}';

  NS_IOBSERVERSERVICE_STD17_IID: TGUID = '{d07f5192-e3d1-11d2-8acd-00105a1b8860}';

  NS_IOUTPUTSTREAM_STD17_IID: TGUID = '{0d0acd2a-61b4-11d4-9877-00c04fa0cf4a}';

  NS_IPASSWORD_STD17_IID: TGUID = '{cf39c2b0-1e4b-11d5-a549-0010a401eb10}';

  NS_IPREFBRANCH_STD17_IID: TGUID = '{56c35506-f14b-11d3-99d3-ddbfac2ccf65}';
  NS_IPREFBRANCH_STD17_PREF_INVALID = 0;
  NS_IPREFBRANCH_STD17_PREF_STRING = 32;
  NS_IPREFBRANCH_STD17_PREF_INT = 64;
  NS_IPREFBRANCH_STD17_PREF_BOOL = 128;

  NS_IPREFLOCALIZEDSTRING_STD17_IID: TGUID = '{ae419e24-1dd1-11b2-b39a-d3e5e7073802}';

  NS_IPREFSERVICE_STD17_IID: TGUID = '{decb9cc7-c08f-4ea5-be91-a8fc637ce2d2}';

  NS_IPRINTSESSION_STD17_IID: TGUID = '{2f977d52-5485-11d4-87e2-0010a4e75ef2}';

  NS_IPRINTSETTINGS_STD17_IID: TGUID = '{83427530-f790-11d4-a869-00105a183419}';
  NS_IPRINTSETTINGS_STD17_kInitSaveOddEvenPages = 1;
  NS_IPRINTSETTINGS_STD17_kInitSaveHeaderLeft = 2;
  NS_IPRINTSETTINGS_STD17_kInitSaveHeaderCenter = 4;
  NS_IPRINTSETTINGS_STD17_kInitSaveHeaderRight = 8;
  NS_IPRINTSETTINGS_STD17_kInitSaveFooterLeft = 16;
  NS_IPRINTSETTINGS_STD17_kInitSaveFooterCenter = 32;
  NS_IPRINTSETTINGS_STD17_kInitSaveFooterRight = 64;
  NS_IPRINTSETTINGS_STD17_kInitSaveBGColors = 128;
  NS_IPRINTSETTINGS_STD17_kInitSaveBGImages = 256;
  NS_IPRINTSETTINGS_STD17_kInitSavePaperSize = 512;
  NS_IPRINTSETTINGS_STD17_kInitSavePaperName = 1024;
  NS_IPRINTSETTINGS_STD17_kInitSavePaperSizeUnit = 2048;
  NS_IPRINTSETTINGS_STD17_kInitSavePaperSizeType = 4096;
  NS_IPRINTSETTINGS_STD17_kInitSavePaperData = 8192;
  NS_IPRINTSETTINGS_STD17_kInitSavePaperWidth = 16384;
  NS_IPRINTSETTINGS_STD17_kInitSavePaperHeight = 32768;
  NS_IPRINTSETTINGS_STD17_kInitSaveReversed = 65536;
  NS_IPRINTSETTINGS_STD17_kInitSaveInColor = 131072;
  NS_IPRINTSETTINGS_STD17_kInitSaveOrientation = 262144;
  NS_IPRINTSETTINGS_STD17_kInitSavePrintCommand = 524288;
  NS_IPRINTSETTINGS_STD17_kInitSavePrinterName = 1048576;
  NS_IPRINTSETTINGS_STD17_kInitSavePrintToFile = 2097152;
  NS_IPRINTSETTINGS_STD17_kInitSaveToFileName = 4194304;
  NS_IPRINTSETTINGS_STD17_kInitSavePageDelay = 8388608;
  NS_IPRINTSETTINGS_STD17_kInitSaveMargins = 16777216;
  NS_IPRINTSETTINGS_STD17_kInitSaveNativeData = 33554432;
  NS_IPRINTSETTINGS_STD17_kInitSavePlexName = 67108864;
  NS_IPRINTSETTINGS_STD17_kInitSaveShrinkToFit = 134217728;
  NS_IPRINTSETTINGS_STD17_kInitSaveScaling = 268435456;
  NS_IPRINTSETTINGS_STD17_kInitSaveAll = 4294967295;
  NS_IPRINTSETTINGS_STD17_kPrintOddPages = 1;
  NS_IPRINTSETTINGS_STD17_kPrintEvenPages = 2;
  NS_IPRINTSETTINGS_STD17_kEnableSelectionRB = 4;
  NS_IPRINTSETTINGS_STD17_kRangeAllPages = 0;
  NS_IPRINTSETTINGS_STD17_kRangeSpecifiedPageRange = 1;
  NS_IPRINTSETTINGS_STD17_kRangeSelection = 2;
  NS_IPRINTSETTINGS_STD17_kRangeFocusFrame = 3;
  NS_IPRINTSETTINGS_STD17_kJustLeft = 0;
  NS_IPRINTSETTINGS_STD17_kJustCenter = 1;
  NS_IPRINTSETTINGS_STD17_kJustRight = 2;
  NS_IPRINTSETTINGS_STD17_kUseInternalDefault = 0;
  NS_IPRINTSETTINGS_STD17_kUseSettingWhenPossible = 1;
  NS_IPRINTSETTINGS_STD17_kPaperSizeNativeData = 0;
  NS_IPRINTSETTINGS_STD17_kPaperSizeDefined = 1;
  NS_IPRINTSETTINGS_STD17_kPaperSizeInches = 0;
  NS_IPRINTSETTINGS_STD17_kPaperSizeMillimeters = 1;
  NS_IPRINTSETTINGS_STD17_kPortraitOrientation = 0;
  NS_IPRINTSETTINGS_STD17_kLandscapeOrientation = 1;
  NS_IPRINTSETTINGS_STD17_kNoFrames = 0;
  NS_IPRINTSETTINGS_STD17_kFramesAsIs = 1;
  NS_IPRINTSETTINGS_STD17_kSelectedFrame = 2;
  NS_IPRINTSETTINGS_STD17_kEachFrameSep = 3;
  NS_IPRINTSETTINGS_STD17_kFrameEnableNone = 0;
  NS_IPRINTSETTINGS_STD17_kFrameEnableAll = 1;
  NS_IPRINTSETTINGS_STD17_kFrameEnableAsIsAndEach = 2;

  NS_IPROFILE_STD17_IID: TGUID = '{02b0625a-e7f3-11d2-9f5a-006008a6efe9}';
  NS_IPROFILE_STD17_SHUTDOWN_PERSIST = 1;
  NS_IPROFILE_STD17_SHUTDOWN_CLEANSE = 2;

  NS_IPROFILECHANGESTATUS_STD17_IID: TGUID = '{2f977d43-5485-11d4-87e2-0010a4e75ef2}';

  NS_IPROMPT_STD17_IID: TGUID = '{a63f70c0-148b-11d3-9333-00104ba0fd40}';
  NS_IPROMPT_STD17_BUTTON_POS_0 = 1;
  NS_IPROMPT_STD17_BUTTON_POS_1 = 256;
  NS_IPROMPT_STD17_BUTTON_POS_2 = 65536;
  NS_IPROMPT_STD17_BUTTON_TITLE_OK = 1;
  NS_IPROMPT_STD17_BUTTON_TITLE_CANCEL = 2;
  NS_IPROMPT_STD17_BUTTON_TITLE_YES = 3;
  NS_IPROMPT_STD17_BUTTON_TITLE_NO = 4;
  NS_IPROMPT_STD17_BUTTON_TITLE_SAVE = 5;
  NS_IPROMPT_STD17_BUTTON_TITLE_DONT_SAVE = 6;
  NS_IPROMPT_STD17_BUTTON_TITLE_REVERT = 7;
  NS_IPROMPT_STD17_BUTTON_TITLE_IS_STRING = 127;
  NS_IPROMPT_STD17_BUTTON_POS_0_DEFAULT = 0;
  NS_IPROMPT_STD17_BUTTON_POS_1_DEFAULT = 16777216;
  NS_IPROMPT_STD17_BUTTON_POS_2_DEFAULT = 33554432;
  NS_IPROMPT_STD17_BUTTON_DELAY_ENABLE = 67108864;
  NS_IPROMPT_STD17_STD_OK_CANCEL_BUTTONS = 513;

  NS_IPROMPTSERVICE_STD17_IID: TGUID = '{1630c61a-325e-49ca-8759-a31b16c47aa5}';
  NS_IPROMPTSERVICE_STD17_BUTTON_POS_0 = 1;
  NS_IPROMPTSERVICE_STD17_BUTTON_POS_1 = 256;
  NS_IPROMPTSERVICE_STD17_BUTTON_POS_2 = 65536;
  NS_IPROMPTSERVICE_STD17_BUTTON_TITLE_OK = 1;
  NS_IPROMPTSERVICE_STD17_BUTTON_TITLE_CANCEL = 2;
  NS_IPROMPTSERVICE_STD17_BUTTON_TITLE_YES = 3;
  NS_IPROMPTSERVICE_STD17_BUTTON_TITLE_NO = 4;
  NS_IPROMPTSERVICE_STD17_BUTTON_TITLE_SAVE = 5;
  NS_IPROMPTSERVICE_STD17_BUTTON_TITLE_DONT_SAVE = 6;
  NS_IPROMPTSERVICE_STD17_BUTTON_TITLE_REVERT = 7;
  NS_IPROMPTSERVICE_STD17_BUTTON_TITLE_IS_STRING = 127;
  NS_IPROMPTSERVICE_STD17_BUTTON_POS_0_DEFAULT = 0;
  NS_IPROMPTSERVICE_STD17_BUTTON_POS_1_DEFAULT = 16777216;
  NS_IPROMPTSERVICE_STD17_BUTTON_POS_2_DEFAULT = 33554432;
  NS_IPROMPTSERVICE_STD17_BUTTON_DELAY_ENABLE = 67108864;
  NS_IPROMPTSERVICE_STD17_STD_OK_CANCEL_BUTTONS = 513;
  NS_IPROMPTSERVICE_STD17_STD_YES_NO_BUTTONS = 1027;

  NS_IPROPERTIES_STD17_IID: TGUID = '{78650582-4e93-4b60-8e85-26ebd3eb14ca}';

  NS_IPROTOCOLHANDLER_STD17_IID: TGUID = '{15fd6940-8ea7-11d3-93ad-00104ba0fd40}';
  NS_IPROTOCOLHANDLER_STD17_URI_STD = 0;
  NS_IPROTOCOLHANDLER_STD17_URI_NORELATIVE = 1;
  NS_IPROTOCOLHANDLER_STD17_URI_NOAUTH = 2;
  NS_IPROTOCOLHANDLER_STD17_ALLOWS_PROXY = 4;
  NS_IPROTOCOLHANDLER_STD17_ALLOWS_PROXY_HTTP = 8;

  NS_IREQUESTOBSERVER_STD17_IID: TGUID = '{fd91e2e0-1481-11d3-9333-00104ba0fd40}';

  NS_ISCRIPTABLEINPUTSTREAM_STD17_IID: TGUID = '{a2a32f90-9b90-11d3-a189-0050041caf44}';

  NS_ISECURITYWARNINGDIALOGS_STD17_IID: TGUID = '{1c399d06-1dd2-11b2-bc58-c87cbcacdb78}';

  NS_ISELECTION_STD17_IID: TGUID = '{b2c7ed59-8634-4352-9e37-5484c8b6e4e1}';

  NS_ISERVICEMANAGER_STD17_IID: TGUID = '{8bb35ed9-e332-462d-9155-4a002ab5c958}';

  NS_ISHISTORY_STD17_IID: TGUID = '{7294fe9b-14d8-11d5-9882-00c04fa02f40}';

  NS_ISHISTORYLISTENER_STD17_IID: TGUID = '{3b07f591-e8e1-11d4-9882-00c04fa02f40}';

  NS_ISTREAMLISTENER_STD17_IID: TGUID = '{1a637020-1482-11d3-9333-00104ba0fd40}';

  NS_ISUPPORTSPRIMITIVE_STD17_IID: TGUID = '{d0d4b136-1dd1-11b2-9371-f0727ef827c0}';
  NS_ISUPPORTSPRIMITIVE_STD17_TYPE_ID = 1;
  NS_ISUPPORTSPRIMITIVE_STD17_TYPE_CSTRING = 2;
  NS_ISUPPORTSPRIMITIVE_STD17_TYPE_STRING = 3;
  NS_ISUPPORTSPRIMITIVE_STD17_TYPE_PRBOOL = 4;
  NS_ISUPPORTSPRIMITIVE_STD17_TYPE_PRUINT8 = 5;
  NS_ISUPPORTSPRIMITIVE_STD17_TYPE_PRUINT16 = 6;
  NS_ISUPPORTSPRIMITIVE_STD17_TYPE_PRUINT32 = 7;
  NS_ISUPPORTSPRIMITIVE_STD17_TYPE_PRUINT64 = 8;
  NS_ISUPPORTSPRIMITIVE_STD17_TYPE_PRTIME = 9;
  NS_ISUPPORTSPRIMITIVE_STD17_TYPE_CHAR = 10;
  NS_ISUPPORTSPRIMITIVE_STD17_TYPE_PRINT16 = 11;
  NS_ISUPPORTSPRIMITIVE_STD17_TYPE_PRINT32 = 12;
  NS_ISUPPORTSPRIMITIVE_STD17_TYPE_PRINT64 = 13;
  NS_ISUPPORTSPRIMITIVE_STD17_TYPE_FLOAT = 14;
  NS_ISUPPORTSPRIMITIVE_STD17_TYPE_DOUBLE = 15;
  NS_ISUPPORTSPRIMITIVE_STD17_TYPE_VOID = 16;
  NS_ISUPPORTSPRIMITIVE_STD17_TYPE_INTERFACE_POINTER = 17;

  NS_ISUPPORTSID_STD17_IID: TGUID = '{d18290a0-4a1c-11d3-9890-006008962422}';

  NS_ISUPPORTSCSTRING_STD17_IID: TGUID = '{d65ff270-4a1c-11d3-9890-006008962422}';

  NS_ISUPPORTSSTRING_STD17_IID: TGUID = '{d79dc970-4a1c-11d3-9890-006008962422}';

  NS_ISUPPORTSPRBOOL_STD17_IID: TGUID = '{ddc3b490-4a1c-11d3-9890-006008962422}';

  NS_ISUPPORTSPRUINT8_STD17_IID: TGUID = '{dec2e4e0-4a1c-11d3-9890-006008962422}';

  NS_ISUPPORTSPRUINT16_STD17_IID: TGUID = '{dfacb090-4a1c-11d3-9890-006008962422}';

  NS_ISUPPORTSPRUINT32_STD17_IID: TGUID = '{e01dc470-4a1c-11d3-9890-006008962422}';

  NS_ISUPPORTSPRUINT64_STD17_IID: TGUID = '{e13567c0-4a1c-11d3-9890-006008962422}';

  NS_ISUPPORTSPRTIME_STD17_IID: TGUID = '{e2563630-4a1c-11d3-9890-006008962422}';

  NS_ISUPPORTSCHAR_STD17_IID: TGUID = '{e2b05e40-4a1c-11d3-9890-006008962422}';

  NS_ISUPPORTSPRINT16_STD17_IID: TGUID = '{e30d94b0-4a1c-11d3-9890-006008962422}';

  NS_ISUPPORTSPRINT32_STD17_IID: TGUID = '{e36c5250-4a1c-11d3-9890-006008962422}';

  NS_ISUPPORTSPRINT64_STD17_IID: TGUID = '{e3cb0ff0-4a1c-11d3-9890-006008962422}';

  NS_ISUPPORTSFLOAT_STD17_IID: TGUID = '{abeaa390-4ac0-11d3-baea-00805f8a5dd7}';

  NS_ISUPPORTSDOUBLE_STD17_IID: TGUID = '{b32523a0-4ac0-11d3-baea-00805f8a5dd7}';

  NS_ISUPPORTSVOID_STD17_IID: TGUID = '{464484f0-568d-11d3-baf8-00805f8a5dd7}';

  NS_ISUPPORTSINTERFACEPOINTER_STD17_IID: TGUID = '{995ea724-1dd1-11b2-9211-c21bdd3e7ed0}';

  NS_ITOOLTIPLISTENER_STD17_IID: TGUID = '{44b78386-1dd2-11b2-9ad2-e4eee2ca1916}';

  NS_ITOOLTIPTEXTPROVIDER_STD17_IID: TGUID = '{b128a1e6-44f3-4331-8fbe-5af360ff21ee}';

  NS_ITRACEREFCNT_STD17_IID: TGUID = '{273dc92f-0fe6-4545-96a9-21be77828039}';

  NS_IUNICHARSTREAMLISTENER_STD17_IID: TGUID = '{4a7e9b62-fef8-400d-9865-d6820f630b4c}';

  NS_IUPLOADCHANNEL_STD17_IID: TGUID = '{ddf633d8-e9a4-439d-ad88-de636fd9bb75}';

  NS_IURICONTENTLISTENER_STD17_IID: TGUID = '{94928ab3-8b63-11d3-989d-001083010e9b}';

  NS_IWEAKREFERENCE_STD17_IID: TGUID = '{9188bc85-f92e-11d2-81ef-0060083a0bcf}';

  NS_ISUPPORTSWEAKREFERENCE_STD17_IID: TGUID = '{9188bc86-f92e-11d2-81ef-0060083a0bcf}';

  NS_IWEBBROWSER_STD17_IID: TGUID = '{69e5df00-7b8b-11d3-af61-00a024ffc08c}';

  NS_IWEBBROWSERCHROME_STD17_IID: TGUID = '{ba434c60-9d52-11d3-afb0-00a024ffc08c}';
  NS_IWEBBROWSERCHROME_STD17_STATUS_SCRIPT = 1;
  NS_IWEBBROWSERCHROME_STD17_STATUS_SCRIPT_DEFAULT = 2;
  NS_IWEBBROWSERCHROME_STD17_STATUS_LINK = 3;
  NS_IWEBBROWSERCHROME_STD17_CHROME_DEFAULT = 1;
  NS_IWEBBROWSERCHROME_STD17_CHROME_WINDOW_BORDERS = 2;
  NS_IWEBBROWSERCHROME_STD17_CHROME_WINDOW_CLOSE = 4;
  NS_IWEBBROWSERCHROME_STD17_CHROME_WINDOW_RESIZE = 8;
  NS_IWEBBROWSERCHROME_STD17_CHROME_MENUBAR = 16;
  NS_IWEBBROWSERCHROME_STD17_CHROME_TOOLBAR = 32;
  NS_IWEBBROWSERCHROME_STD17_CHROME_LOCATIONBAR = 64;
  NS_IWEBBROWSERCHROME_STD17_CHROME_STATUSBAR = 128;
  NS_IWEBBROWSERCHROME_STD17_CHROME_PERSONAL_TOOLBAR = 256;
  NS_IWEBBROWSERCHROME_STD17_CHROME_SCROLLBARS = 512;
  NS_IWEBBROWSERCHROME_STD17_CHROME_TITLEBAR = 1024;
  NS_IWEBBROWSERCHROME_STD17_CHROME_EXTRA = 2048;
  NS_IWEBBROWSERCHROME_STD17_CHROME_WITH_SIZE = 4096;
  NS_IWEBBROWSERCHROME_STD17_CHROME_WITH_POSITION = 8192;
  NS_IWEBBROWSERCHROME_STD17_CHROME_WINDOW_MIN = 16384;
  NS_IWEBBROWSERCHROME_STD17_CHROME_WINDOW_POPUP = 32768;
  NS_IWEBBROWSERCHROME_STD17_CHROME_WINDOW_RAISED = 33554432;
  NS_IWEBBROWSERCHROME_STD17_CHROME_WINDOW_LOWERED = 67108864;
  NS_IWEBBROWSERCHROME_STD17_CHROME_CENTER_SCREEN = 134217728;
  NS_IWEBBROWSERCHROME_STD17_CHROME_DEPENDENT = 268435456;
  NS_IWEBBROWSERCHROME_STD17_CHROME_MODAL = 536870912;
  NS_IWEBBROWSERCHROME_STD17_CHROME_OPENAS_DIALOG = 1073741824;
  NS_IWEBBROWSERCHROME_STD17_CHROME_OPENAS_CHROME = 2147483648;
  NS_IWEBBROWSERCHROME_STD17_CHROME_ALL = 4094;

  NS_IWEBBROWSERCHROMEFOCUS_STD17_IID: TGUID = '{d2206418-1dd1-11b2-8e55-acddcd2bcfb8}';

  NS_IWEBBROWSERFIND_STD17_IID: TGUID = '{2f977d44-5485-11d4-87e2-0010a4e75ef2}';

  NS_IWEBBROWSERFINDINFRAMES_STD17_IID: TGUID = '{e0f5d182-34bc-11d5-be5b-b760676c6ebc}';

  NS_IWEBBROWSERFOCUS_STD17_IID: TGUID = '{9c5d3c58-1dd1-11b2-a1c9-f3699284657a}';

  NS_IWEBBROWSERPRINT_STD17_IID: TGUID = '{9a7ca4b0-fbba-11d4-a869-00105a183419}';
  NS_IWEBBROWSERPRINT_STD17_PRINTPREVIEW_GOTO_PAGENUM = 0;
  NS_IWEBBROWSERPRINT_STD17_PRINTPREVIEW_PREV_PAGE = 1;
  NS_IWEBBROWSERPRINT_STD17_PRINTPREVIEW_NEXT_PAGE = 2;
  NS_IWEBBROWSERPRINT_STD17_PRINTPREVIEW_HOME = 3;
  NS_IWEBBROWSERPRINT_STD17_PRINTPREVIEW_END = 4;

  NS_IWEBBROWSERSETUP_STD17_IID: TGUID = '{f15398a0-8018-11d3-af70-00a024ffc08c}';
  NS_IWEBBROWSERSETUP_STD17_SETUP_ALLOW_PLUGINS = 1;
  NS_IWEBBROWSERSETUP_STD17_SETUP_ALLOW_JAVASCRIPT = 2;
  NS_IWEBBROWSERSETUP_STD17_SETUP_ALLOW_META_REDIRECTS = 3;
  NS_IWEBBROWSERSETUP_STD17_SETUP_ALLOW_SUBFRAMES = 4;
  NS_IWEBBROWSERSETUP_STD17_SETUP_ALLOW_IMAGES = 5;
  NS_IWEBBROWSERSETUP_STD17_SETUP_FOCUS_DOC_BEFORE_CONTENT = 6;
  NS_IWEBBROWSERSETUP_STD17_SETUP_USE_GLOBAL_HISTORY = 256;
  NS_IWEBBROWSERSETUP_STD17_SETUP_IS_CHROME_WRAPPER = 7;

  NS_IWEBPROGRESS_STD17_IID: TGUID = '{570f39d0-efd0-11d3-b093-00a024ffc08c}';
  NS_IWEBPROGRESS_STD17_NOTIFY_STATE_REQUEST = 1;
  NS_IWEBPROGRESS_STD17_NOTIFY_STATE_DOCUMENT = 2;
  NS_IWEBPROGRESS_STD17_NOTIFY_STATE_NETWORK = 4;
  NS_IWEBPROGRESS_STD17_NOTIFY_STATE_WINDOW = 8;
  NS_IWEBPROGRESS_STD17_NOTIFY_STATE_ALL = 15;
  NS_IWEBPROGRESS_STD17_NOTIFY_PROGRESS = 16;
  NS_IWEBPROGRESS_STD17_NOTIFY_STATUS = 32;
  NS_IWEBPROGRESS_STD17_NOTIFY_SECURITY = 64;
  NS_IWEBPROGRESS_STD17_NOTIFY_LOCATION = 128;
  NS_IWEBPROGRESS_STD17_NOTIFY_ALL = 255;

  NS_IWEBPROGRESSLISTENER_STD17_IID: TGUID = '{570f39d1-efd0-11d3-b093-00a024ffc08c}';
  NS_IWEBPROGRESSLISTENER_STD17_STATE_START = 1;
  NS_IWEBPROGRESSLISTENER_STD17_STATE_REDIRECTING = 2;
  NS_IWEBPROGRESSLISTENER_STD17_STATE_TRANSFERRING = 4;
  NS_IWEBPROGRESSLISTENER_STD17_STATE_NEGOTIATING = 8;
  NS_IWEBPROGRESSLISTENER_STD17_STATE_STOP = 16;
  NS_IWEBPROGRESSLISTENER_STD17_STATE_IS_REQUEST = 65536;
  NS_IWEBPROGRESSLISTENER_STD17_STATE_IS_DOCUMENT = 131072;
  NS_IWEBPROGRESSLISTENER_STD17_STATE_IS_NETWORK = 262144;
  NS_IWEBPROGRESSLISTENER_STD17_STATE_IS_WINDOW = 524288;
  NS_IWEBPROGRESSLISTENER_STD17_STATE_IS_INSECURE = 4;
  NS_IWEBPROGRESSLISTENER_STD17_STATE_IS_BROKEN = 1;
  NS_IWEBPROGRESSLISTENER_STD17_STATE_IS_SECURE = 2;
  NS_IWEBPROGRESSLISTENER_STD17_STATE_SECURE_HIGH = 262144;
  NS_IWEBPROGRESSLISTENER_STD17_STATE_SECURE_MED = 65536;
  NS_IWEBPROGRESSLISTENER_STD17_STATE_SECURE_LOW = 131072;

  NS_IWINDOWCREATOR_STD17_IID: TGUID = '{30465632-a777-44cc-90f9-8145475ef999}';

  NS_IWINDOWWATCHER_STD17_IID: TGUID = '{002286a8-494b-43b3-8ddd-49e3fc50622b}';

  NS_IX509CERT_STD17_IID: TGUID = '{f0980f60-ee3d-11d4-998b-00b0d02354a0}';
  NS_IX509CERT_STD17_UNKNOWN_CERT = 0;
  NS_IX509CERT_STD17_CA_CERT = 1;
  NS_IX509CERT_STD17_USER_CERT = 2;
  NS_IX509CERT_STD17_EMAIL_CERT = 4;
  NS_IX509CERT_STD17_SERVER_CERT = 8;
  NS_IX509CERT_STD17_VERIFIED_OK = 0;
  NS_IX509CERT_STD17_NOT_VERIFIED_UNKNOWN = 1;
  NS_IX509CERT_STD17_CERT_REVOKED = 2;
  NS_IX509CERT_STD17_CERT_EXPIRED = 4;
  NS_IX509CERT_STD17_CERT_NOT_TRUSTED = 8;
  NS_IX509CERT_STD17_ISSUER_NOT_TRUSTED = 16;
  NS_IX509CERT_STD17_ISSUER_UNKNOWN = 32;
  NS_IX509CERT_STD17_INVALID_CA = 64;
  NS_IX509CERT_STD17_USAGE_NOT_ALLOWED = 128;
  NS_IX509CERT_STD17_CERT_USAGE_SSLClient = 0;
  NS_IX509CERT_STD17_CERT_USAGE_SSLServer = 1;
  NS_IX509CERT_STD17_CERT_USAGE_SSLServerWithStepUp = 2;
  NS_IX509CERT_STD17_CERT_USAGE_SSLCA = 3;
  NS_IX509CERT_STD17_CERT_USAGE_EmailSigner = 4;
  NS_IX509CERT_STD17_CERT_USAGE_EmailRecipient = 5;
  NS_IX509CERT_STD17_CERT_USAGE_ObjectSigner = 6;
  NS_IX509CERT_STD17_CERT_USAGE_UserCertImport = 7;
  NS_IX509CERT_STD17_CERT_USAGE_VerifyCA = 8;
  NS_IX509CERT_STD17_CERT_USAGE_ProtectedObjectSigner = 9;
  NS_IX509CERT_STD17_CERT_USAGE_StatusResponder = 10;
  NS_IX509CERT_STD17_CERT_USAGE_AnyCA = 11;

  NS_IX509CERTDB_STD17_IID: TGUID = '{da48b3c0-1284-11d5-ac67-000064657374}';
  NS_IX509CERTDB_STD17_UNTRUSTED = 0;
  NS_IX509CERTDB_STD17_TRUSTED_SSL = 1;
  NS_IX509CERTDB_STD17_TRUSTED_EMAIL = 2;
  NS_IX509CERTDB_STD17_TRUSTED_OBJSIGN = 4;

  NS_IX509CERTVALIDITY_STD17_IID: TGUID = '{e701dfd8-1dd1-11b2-a172-ffa6cc6156ad}';

type
  nsISupports_std17 = interface;
  mozIJSSubScriptLoader_std17 = interface;
  nsIArray_std17 = interface;
  nsIMutableArray_std17 = interface;
  nsIASN1Object_std17 = interface;
  nsIASN1Sequence_std17 = interface;
  nsIAuthPrompt_std17 = interface;
  nsIBadCertListener_std17 = interface;
  nsISimpleEnumerator_std17 = interface;
  nsICategoryManager_std17 = interface;
  nsICertificateDialogs_std17 = interface;
  nsIRequest_std17 = interface;
  nsIChannel_std17 = interface;
  nsIProgrammingLanguage_std17 = interface;
  nsIClassInfo_std17 = interface;
  nsIClipboardCommands_std17 = interface;
  nsIComponentManager_std17 = interface;
  nsIComponentRegistrar_std17 = interface;
  nsIContextMenuListener_std17 = interface;
  nsICookie_std17 = interface;
  nsICookieManager_std17 = interface;
  nsICRLInfo_std17 = interface;
  nsIDebug_std17 = interface;
  nsIFile_std17 = interface;
  nsIDirectoryServiceProvider_std17 = interface;
  nsIDirectoryServiceProvider2_std17 = interface;
  nsIDirectoryService_std17 = interface;
  nsIDOM3DocumentEvent_std17 = interface;
  nsIDOM3EventTarget_std17 = interface;
  nsIDOMAbstractView_std17 = interface;
  nsIDOMNode_std17 = interface;
  nsIDOMAttr_std17 = interface;
  nsIDOMBarProp_std17 = interface;
  nsIDOMCharacterData_std17 = interface;
  nsIDOMText_std17 = interface;
  nsIDOMCDATASection_std17 = interface;
  nsIDOMComment_std17 = interface;
  nsIDOMCounter_std17 = interface;
  nsIDOMCSSValue_std17 = interface;
  nsIDOMCSSPrimitiveValue_std17 = interface;
  nsIDOMCSSRule_std17 = interface;
  nsIDOMCSSRuleList_std17 = interface;
  nsIDOMCSSStyleDeclaration_std17 = interface;
  nsIDOMStyleSheet_std17 = interface;
  nsIDOMCSSStyleSheet_std17 = interface;
  nsIDOMCSSValueList_std17 = interface;
  nsIDOMEvent_std17 = interface;
  nsIDOMCustomEvent_std17 = interface;
  nsIDOMDocument_std17 = interface;
  nsIDOMDocumentEvent_std17 = interface;
  nsIDOMDocumentFragment_std17 = interface;
  nsIDOMDocumentRange_std17 = interface;
  nsIDOMDocumentStyle_std17 = interface;
  nsIDOMDocumentType_std17 = interface;
  nsIDOMDocumentView_std17 = interface;
  nsIDOMDOMException_std17 = interface;
  nsIDOMDOMImplementation_std17 = interface;
  nsIDOMElement_std17 = interface;
  nsIDOMEntity_std17 = interface;
  nsIDOMEntityReference_std17 = interface;
  nsIDOMEventGroup_std17 = interface;
  nsIDOMEventListener_std17 = interface;
  nsIDOMEventTarget_std17 = interface;
  nsIDOMHTMLElement_std17 = interface;
  nsIDOMHTMLAnchorElement_std17 = interface;
  nsIDOMHTMLAppletElement_std17 = interface;
  nsIDOMHTMLAreaElement_std17 = interface;
  nsIDOMHTMLBaseElement_std17 = interface;
  nsIDOMHTMLBaseFontElement_std17 = interface;
  nsIDOMHTMLBodyElement_std17 = interface;
  nsIDOMHTMLBRElement_std17 = interface;
  nsIDOMHTMLButtonElement_std17 = interface;
  nsIDOMHTMLCollection_std17 = interface;
  nsIDOMHTMLDirectoryElement_std17 = interface;
  nsIDOMHTMLDivElement_std17 = interface;
  nsIDOMHTMLDListElement_std17 = interface;
  nsIDOMHTMLDocument_std17 = interface;
  nsIDOMHTMLEmbedElement_std17 = interface;
  nsIDOMHTMLFieldSetElement_std17 = interface;
  nsIDOMHTMLFontElement_std17 = interface;
  nsIDOMHTMLFormElement_std17 = interface;
  nsIDOMHTMLFrameElement_std17 = interface;
  nsIDOMHTMLFrameSetElement_std17 = interface;
  nsIDOMHTMLHeadElement_std17 = interface;
  nsIDOMHTMLHeadingElement_std17 = interface;
  nsIDOMHTMLHRElement_std17 = interface;
  nsIDOMHTMLHtmlElement_std17 = interface;
  nsIDOMHTMLIFrameElement_std17 = interface;
  nsIDOMHTMLImageElement_std17 = interface;
  nsIDOMHTMLInputElement_std17 = interface;
  nsIDOMHTMLIsIndexElement_std17 = interface;
  nsIDOMHTMLLabelElement_std17 = interface;
  nsIDOMHTMLLegendElement_std17 = interface;
  nsIDOMHTMLLIElement_std17 = interface;
  nsIDOMHTMLLinkElement_std17 = interface;
  nsIDOMHTMLMapElement_std17 = interface;
  nsIDOMHTMLMenuElement_std17 = interface;
  nsIDOMHTMLMetaElement_std17 = interface;
  nsIDOMHTMLModElement_std17 = interface;
  nsIDOMHTMLObjectElement_std17 = interface;
  nsIDOMHTMLOListElement_std17 = interface;
  nsIDOMHTMLOptGroupElement_std17 = interface;
  nsIDOMHTMLOptionElement_std17 = interface;
  nsIDOMHTMLOptionsCollection_std17 = interface;
  nsIDOMHTMLParagraphElement_std17 = interface;
  nsIDOMHTMLParamElement_std17 = interface;
  nsIDOMHTMLPreElement_std17 = interface;
  nsIDOMHTMLQuoteElement_std17 = interface;
  nsIDOMHTMLScriptElement_std17 = interface;
  nsIDOMHTMLSelectElement_std17 = interface;
  nsIDOMHTMLStyleElement_std17 = interface;
  nsIDOMHTMLTableCaptionElement_std17 = interface;
  nsIDOMHTMLTableCellElement_std17 = interface;
  nsIDOMHTMLTableColElement_std17 = interface;
  nsIDOMHTMLTableElement_std17 = interface;
  nsIDOMHTMLTableRowElement_std17 = interface;
  nsIDOMHTMLTableSectionElement_std17 = interface;
  nsIDOMHTMLTextAreaElement_std17 = interface;
  nsIDOMHTMLTitleElement_std17 = interface;
  nsIDOMHTMLUListElement_std17 = interface;
  nsIDOMMediaList_std17 = interface;
  nsIDOMUIEvent_std17 = interface;
  nsIDOMMouseEvent_std17 = interface;
  nsIDOMNamedNodeMap_std17 = interface;
  nsIDOMNodeList_std17 = interface;
  nsIDOMNotation_std17 = interface;
  nsIDOMProcessingInstruction_std17 = interface;
  nsIDOMRange_std17 = interface;
  nsIDOMRect_std17 = interface;
  nsIDOMRGBColor_std17 = interface;
  nsIDOMStyleSheetList_std17 = interface;
  nsIDOMWindow_std17 = interface;
  nsIDOMWindow2_std17 = interface;
  nsIDOMWindowCollection_std17 = interface;
  nsIEmbeddingSiteWindow_std17 = interface;
  nsIFactory_std17 = interface;
  nsIURI_std17 = interface;
  nsIURL_std17 = interface;
  nsIFileURL_std17 = interface;
  nsIGlobalHistory_std17 = interface;
  nsIHistoryEntry_std17 = interface;
  nsIHttpChannel_std17 = interface;
  nsIHttpHeaderVisitor_std17 = interface;
  nsIInputStream_std17 = interface;
  nsIInterfaceRequestor_std17 = interface;
  nsIIOService_std17 = interface;
  nsILoadGroup_std17 = interface;
  nsILocalFile_std17 = interface;
  nsIMemory_std17 = interface;
  nsIModule_std17 = interface;
  nsIObserver_std17 = interface;
  nsIObserverService_std17 = interface;
  nsIOutputStream_std17 = interface;
  nsIPassword_std17 = interface;
  nsIPrefBranch_std17 = interface;
  nsIPrefLocalizedString_std17 = interface;
  nsIPrefService_std17 = interface;
  nsIPrintSession_std17 = interface;
  nsIPrintSettings_std17 = interface;
  nsIProfile_std17 = interface;
  nsIProfileChangeStatus_std17 = interface;
  nsIPrompt_std17 = interface;
  nsIPromptService_std17 = interface;
  nsIProperties_std17 = interface;
  nsIProtocolHandler_std17 = interface;
  nsIRequestObserver_std17 = interface;
  nsIScriptableInputStream_std17 = interface;
  nsISecurityWarningDialogs_std17 = interface;
  nsISelection_std17 = interface;
  nsIServiceManager_std17 = interface;
  nsISHistory_std17 = interface;
  nsISHistoryListener_std17 = interface;
  nsIStreamListener_std17 = interface;
  nsISupportsPrimitive_std17 = interface;
  nsISupportsID_std17 = interface;
  nsISupportsCString_std17 = interface;
  nsISupportsString_std17 = interface;
  nsISupportsPRBool_std17 = interface;
  nsISupportsPRUint8_std17 = interface;
  nsISupportsPRUint16_std17 = interface;
  nsISupportsPRUint32_std17 = interface;
  nsISupportsPRUint64_std17 = interface;
  nsISupportsPRTime_std17 = interface;
  nsISupportsChar_std17 = interface;
  nsISupportsPRInt16_std17 = interface;
  nsISupportsPRInt32_std17 = interface;
  nsISupportsPRInt64_std17 = interface;
  nsISupportsFloat_std17 = interface;
  nsISupportsDouble_std17 = interface;
  nsISupportsVoid_std17 = interface;
  nsISupportsInterfacePointer_std17 = interface;
  nsITooltipListener_std17 = interface;
  nsITooltipTextProvider_std17 = interface;
  nsITraceRefcnt_std17 = interface;
  nsIUnicharStreamListener_std17 = interface;
  nsIUploadChannel_std17 = interface;
  nsIURIContentListener_std17 = interface;
  nsIWeakReference_std17 = interface;
  nsISupportsWeakReference_std17 = interface;
  nsIWebBrowser_std17 = interface;
  nsIWebBrowserChrome_std17 = interface;
  nsIWebBrowserChromeFocus_std17 = interface;
  nsIWebBrowserFind_std17 = interface;
  nsIWebBrowserFindInFrames_std17 = interface;
  nsIWebBrowserFocus_std17 = interface;
  nsIWebBrowserPrint_std17 = interface;
  nsIWebBrowserSetup_std17 = interface;
  nsIWebProgress_std17 = interface;
  nsIWebProgressListener_std17 = interface;
  nsIWindowCreator_std17 = interface;
  nsIWindowWatcher_std17 = interface;
  nsIX509Cert_std17 = interface;
  nsIX509CertDB_std17 = interface;
  nsIX509CertValidity_std17 = interface;
  nsWriteSegmentFun = function (aInStream: nsIInputStream_std17; 
                                aClosure: Pointer;
                                const aFromSegment: Pointer;
                                aToOffset: PRUint32;
                                aCount: PRUint32;
                                out aWriteCount: PRUint32): nsresult; extdecl;


  nsReadSegmentFun = function (aOutStream: nsIOutputStream_std17;
                               aClosure: Pointer;
                               aToSegment: Pointer;
                               aFromOffset: PRUint32;
                               aCount: PRUint32;
                               out aReadCount: PRUint32): nsresult; extdecl;


  DOMTimeStamp = PRUint64;
  nsLoadFlags = PRUint32;
(*** 
 * An optional interface for accessing the HTTP or
 * javascript cookie object
 * 
 * @status FROZEN
 *)
  nsCookieStatus = PRInt32;
  nsCookiePolicy = PRInt32;
  nsISupports_std17 = interface
  ['{00000000-0000-0000-c000-000000000046}']
  end;

  mozIJSSubScriptLoader_std17 = interface(nsISupports_std17)
  ['{8792d77e-1dd2-11b2-ac7f-9bc9be4f2916}']
    function LoadSubScript(const url: PWideChar): nsresult; extdecl;
  end;

  nsIArray_std17 = interface(nsISupports_std17)
  ['{114744d9-c369-456e-b55a-52fe52880d2d}']
    function GetLength(out aLength: PRUint32): Longword; extdecl;
    function QueryElementAt(index: PRUint32; constref uuid: TGUID; out _result): nsresult; extdecl;
    function IndexOf(startIndex: PRUint32; element: nsISupports_std17; out _retval: PRUint32): nsresult; extdecl;
    function Enumerate(out _retval: nsISimpleEnumerator_std17): nsresult; extdecl;
  end;

  nsIMutableArray_std17 = interface(nsIArray_std17)
  ['{2cd0b2f8-d4dd-48b8-87ba-b0200501f079}']
    function AppendElement(element: nsISupports_std17; weak: PRBool): nsresult; extdecl;
    function RemoveElementAt(index: PRUint32): nsresult; extdecl;
    function InsertElementAt(element: nsISupports_std17; index: PRUint32; weak: PRBool): nsresult; extdecl;
    function Clear(): nsresult; extdecl;
  end;

  nsIASN1Object_std17 = interface(nsISupports_std17)
  ['{ba8bf582-1dd1-11b2-898c-f40246bc9a63}']
    function GetType(out aType: PRUint32): Longword; extdecl;
    function SetType(aType: PRUint32): Longword; extdecl;
    function GetTag(out aTag: PRUint32): Longword; extdecl;
    function SetTag(aTag: PRUint32): Longword; extdecl;
    function GetDisplayName(aDisplayName: nsAString): Longword; extdecl;
    function SetDisplayName(const aDisplayName: nsAString): Longword; extdecl;
    function GetDisplayValue(aDisplayValue: nsAString): Longword; extdecl;
    function SetDisplayValue(const aDisplayValue: nsAString): Longword; extdecl;
  end;

  nsIASN1Sequence_std17 = interface(nsIASN1Object_std17)
  ['{b6b957e6-1dd1-11b2-89d7-e30624f50b00}']
    function GetASN1Objects(out aASN1Objects: nsIMutableArray_std17): Longword; extdecl;
    function SetASN1Objects(aASN1Objects: nsIMutableArray_std17): Longword; extdecl;
    function GetIsValidContainer(out aIsValidContainer: PRBool): Longword; extdecl;
    function SetIsValidContainer(aIsValidContainer: PRBool): Longword; extdecl;
    function GetIsExpanded(out aIsExpanded: PRBool): Longword; extdecl;
    function SetIsExpanded(aIsExpanded: PRBool): Longword; extdecl;
  end;

  nsIAuthPrompt_std17 = interface(nsISupports_std17)
  ['{2f977d45-5485-11d4-87e2-0010a4e75ef2}']
    function Prompt(const dialogTitle: PWideChar; const text: PWideChar; const passwordRealm: PWideChar; savePassword: PRUint32; const defaultText: PWideChar; out _result: PWideChar; out _retval: PRBool): nsresult; extdecl;
    function PromptUsernameAndPassword(const dialogTitle: PWideChar; const text: PWideChar; const passwordRealm: PWideChar; savePassword: PRUint32; out user: PWideChar; out pwd: PWideChar; out _retval: PRBool): nsresult; extdecl;
    function PromptPassword(const dialogTitle: PWideChar; const text: PWideChar; const passwordRealm: PWideChar; savePassword: PRUint32; out pwd: PWideChar; out _retval: PRBool): nsresult; extdecl;
  end;

  nsIBadCertListener_std17 = interface(nsISupports_std17)
  ['{86960956-edb0-11d4-998b-00b0d02354a0}']
    function ConfirmUnknownIssuer(socketInfo: nsIInterfaceRequestor_std17; cert: nsIX509Cert_std17; out certAddType: PRInt16; out _retval: PRBool): nsresult; extdecl;
    function ConfirmMismatchDomain(socketInfo: nsIInterfaceRequestor_std17; const targetURL: nsACString; cert: nsIX509Cert_std17; out _retval: PRBool): nsresult; extdecl;
    function ConfirmCertExpired(socketInfo: nsIInterfaceRequestor_std17; cert: nsIX509Cert_std17; out _retval: PRBool): nsresult; extdecl;
    function NotifyCrlNextupdate(socketInfo: nsIInterfaceRequestor_std17; const targetURL: nsACString; cert: nsIX509Cert_std17): nsresult; extdecl;
  end;

  nsISimpleEnumerator_std17 = interface(nsISupports_std17)
  ['{d1899240-f9d2-11d2-bdd6-000064657374}']
    function HasMoreElements(out _retval: PRBool): nsresult; extdecl;
    function GetNext(out _retval: nsISupports_std17): nsresult; extdecl;
  end;

  nsICategoryManager_std17 = interface(nsISupports_std17)
  ['{3275b2cd-af6d-429a-80d7-f0c5120342ac}']
    function GetCategoryEntry(const aCategory: PAnsiChar; const aEntry: PAnsiChar; out _retval: PAnsiChar): nsresult; extdecl;
    function AddCategoryEntry(const aCategory: PAnsiChar; const aEntry: PAnsiChar; const aValue: PAnsiChar; aPersist: PRBool; aReplace: PRBool; out _retval: PAnsiChar): nsresult; extdecl;
    function DeleteCategoryEntry(const aCategory: PAnsiChar; const aEntry: PAnsiChar; aPersist: PRBool): nsresult; extdecl;
    function DeleteCategory(const aCategory: PAnsiChar): nsresult; extdecl;
    function EnumerateCategory(const aCategory: PAnsiChar; out _retval: nsISimpleEnumerator_std17): nsresult; extdecl;
    function EnumerateCategories(out _retval: nsISimpleEnumerator_std17): nsresult; extdecl;
  end;

  nsICertificateDialogs_std17 = interface(nsISupports_std17)
  ['{a03ca940-09be-11d5-ac5d-000064657374}']
    function ConfirmDownloadCACert(ctx: nsIInterfaceRequestor_std17; cert: nsIX509Cert_std17; out trust: PRUint32; out _retval: PRBool): nsresult; extdecl;
    function NotifyCACertExists(ctx: nsIInterfaceRequestor_std17): nsresult; extdecl;
    function SetPKCS12FilePassword(ctx: nsIInterfaceRequestor_std17; password: nsAString; out _retval: PRBool): nsresult; extdecl;
    function GetPKCS12FilePassword(ctx: nsIInterfaceRequestor_std17; password: nsAString; out _retval: PRBool): nsresult; extdecl;
    function ViewCert(ctx: nsIInterfaceRequestor_std17; cert: nsIX509Cert_std17): nsresult; extdecl;
    function CrlImportStatusDialog(ctx: nsIInterfaceRequestor_std17; crl: nsICRLInfo_std17): nsresult; extdecl;
  end;

  nsIRequest_std17 = interface(nsISupports_std17)
  ['{ef6bfbd2-fd46-48d8-96b7-9f8f0fd387fe}']
    function GetName(aName: nsACString): Longword; extdecl;
    function IsPending(out _retval: PRBool): nsresult; extdecl;
    function GetStatus(out aStatus: nsresult): Longword; extdecl;
    function Cancel(aStatus: nsresult): nsresult; extdecl;
    function Suspend(): nsresult; extdecl;
    function Resume(): nsresult; extdecl;
    function GetLoadGroup(out aLoadGroup: nsILoadGroup_std17): Longword; extdecl;
    function SetLoadGroup(aLoadGroup: nsILoadGroup_std17): Longword; extdecl;
    function GetLoadFlags(out aLoadFlags: nsLoadFlags): Longword; extdecl;
    function SetLoadFlags(aLoadFlags: nsLoadFlags): Longword; extdecl;
  end;

  nsIChannel_std17 = interface(nsIRequest_std17)
  ['{c63a055a-a676-4e71-bf3c-6cfa11082018}']
    function GetOriginalURI(out aOriginalURI: nsIURI_std17): Longword; extdecl;
    function SetOriginalURI(aOriginalURI: nsIURI_std17): Longword; extdecl;
    function GetURI(out aURI: nsIURI_std17): Longword; extdecl;
    function GetOwner(out aOwner: nsISupports_std17): Longword; extdecl;
    function SetOwner(aOwner: nsISupports_std17): Longword; extdecl;
    function GetNotificationCallbacks(out aNotificationCallbacks: nsIInterfaceRequestor_std17): Longword; extdecl;
    function SetNotificationCallbacks(aNotificationCallbacks: nsIInterfaceRequestor_std17): Longword; extdecl;
    function GetSecurityInfo(out aSecurityInfo: nsISupports_std17): Longword; extdecl;
    function GetContentType(aContentType: nsACString): Longword; extdecl;
    function SetContentType(const aContentType: nsACString): Longword; extdecl;
    function GetContentCharset(aContentCharset: nsACString): Longword; extdecl;
    function SetContentCharset(const aContentCharset: nsACString): Longword; extdecl;
    function GetContentLength(out aContentLength: PRInt32): Longword; extdecl;
    function SetContentLength(aContentLength: PRInt32): Longword; extdecl;
    function Open(out _retval: nsIInputStream_std17): nsresult; extdecl;
    function AsyncOpen(aListener: nsIStreamListener_std17; aContext: nsISupports_std17): nsresult; extdecl;
  end;

  nsIProgrammingLanguage_std17 = interface(nsISupports_std17)
  ['{ea604e90-40ba-11d5-90bb-0010a4e73d9a}']
  end;

  nsIClassInfo_std17 = interface(nsISupports_std17)
  ['{986c11d0-f340-11d4-9075-0010a4e73d9a}']
    function GetInterfaces(out count: PRUint32; out _array_array): nsresult; extdecl;
    function GetHelperForLanguage(language: PRUint32; out _retval: nsISupports_std17): nsresult; extdecl;
    function GetContractID(out aContractID: PAnsiChar): Longword; extdecl;
    function GetClassDescription(out aClassDescription: PAnsiChar): Longword; extdecl;
    function GetClassID(out aClassID: PGUID): Longword; extdecl;
    function GetImplementationLanguage(out aImplementationLanguage: PRUint32): Longword; extdecl;
    function GetFlags(out aFlags: PRUint32): Longword; extdecl;
    function GetClassIDNoAlloc(out aClassIDNoAlloc: TGUID): Longword; extdecl;
  end;

  nsIClipboardCommands_std17 = interface(nsISupports_std17)
  ['{b8100c90-73be-11d2-92a5-00105a1b0d64}']
    function CanCutSelection(out _retval: PRBool): nsresult; extdecl;
    function CanCopySelection(out _retval: PRBool): nsresult; extdecl;
    function CanCopyLinkLocation(out _retval: PRBool): nsresult; extdecl;
    function CanCopyImageLocation(out _retval: PRBool): nsresult; extdecl;
    function CanCopyImageContents(out _retval: PRBool): nsresult; extdecl;
    function CanPaste(out _retval: PRBool): nsresult; extdecl;
    function CutSelection(): nsresult; extdecl;
    function CopySelection(): nsresult; extdecl;
    function CopyLinkLocation(): nsresult; extdecl;
    function CopyImageLocation(): nsresult; extdecl;
    function CopyImageContents(): nsresult; extdecl;
    function Paste(): nsresult; extdecl;
    function SelectAll(): nsresult; extdecl;
    function SelectNone(): nsresult; extdecl;
  end;

  nsIComponentManager_std17 = interface(nsISupports_std17)
  ['{a88e5a60-205a-4bb1-94e1-2628daf51eae}']
    function GetClassObject(constref aClass: TGUID; constref aIID: TGUID; out _result): nsresult; extdecl;
    function GetClassObjectByContractID(const aContractID: PAnsiChar; constref aIID: TGUID; out _result): nsresult; extdecl;
    function CreateInstance(constref aClass: TGUID; aDelegate: nsISupports_std17; constref aIID: TGUID; out _result): nsresult; extdecl;
    function CreateInstanceByContractID(const aContractID: PAnsiChar; aDelegate: nsISupports_std17; constref aIID: TGUID; out _result): nsresult; extdecl;
  end;

  nsIComponentRegistrar_std17 = interface(nsISupports_std17)
  ['{2417cbfe-65ad-48a6-b4b6-eb84db174392}']
    function AutoRegister(aSpec: nsIFile_std17): nsresult; extdecl;
    function AutoUnregister(aSpec: nsIFile_std17): nsresult; extdecl;
    function RegisterFactory(constref aClass: TGUID; const aClassName: PAnsiChar; const aContractID: PAnsiChar; aFactory: nsIFactory_std17): nsresult; extdecl;
    function UnregisterFactory(constref aClass: TGUID; aFactory: nsIFactory_std17): nsresult; extdecl;
    function RegisterFactoryLocation(constref aClass: TGUID; const aClassName: PAnsiChar; const aContractID: PAnsiChar; aFile: nsIFile_std17; const aLoaderStr: PAnsiChar; const aType: PAnsiChar): nsresult; extdecl;
    function UnregisterFactoryLocation(constref aClass: TGUID; aFile: nsIFile_std17): nsresult; extdecl;
    function IsCIDRegistered(constref aClass: TGUID; out _retval: PRBool): nsresult; extdecl;
    function IsContractIDRegistered(const aContractID: PAnsiChar; out _retval: PRBool): nsresult; extdecl;
    function EnumerateCIDs(out _retval: nsISimpleEnumerator_std17): nsresult; extdecl;
    function EnumerateContractIDs(out _retval: nsISimpleEnumerator_std17): nsresult; extdecl;
    function CIDToContractID(constref aClass: TGUID; out _retval: PAnsiChar): nsresult; extdecl;
    function ContractIDToCID(const aContractID: PAnsiChar; out _retval: PGUID): nsresult; extdecl;
  end;

  nsIContextMenuListener_std17 = interface(nsISupports_std17)
  ['{3478b6b0-3875-11d4-94ef-0020183bf181}']
    function OnShowContextMenu(aContextFlags: PRUint32; aEvent: nsIDOMEvent_std17; aNode: nsIDOMNode_std17): nsresult; extdecl;
  end;

  nsICookie_std17 = interface(nsISupports_std17)
  ['{e9fcb9a4-d376-458f-b720-e65e7df593bc}']
    function GetName(aName: nsACString): Longword; extdecl;
    function GetValue(aValue: nsACString): Longword; extdecl;
    function GetIsDomain(out aIsDomain: PRBool): Longword; extdecl;
    function GetHost(aHost: nsACString): Longword; extdecl;
    function GetPath(aPath: nsACString): Longword; extdecl;
    function GetIsSecure(out aIsSecure: PRBool): Longword; extdecl;
    function GetExpires(out aExpires: PRUint64): Longword; extdecl;
    function GetStatus(out aStatus: nsCookieStatus): Longword; extdecl;
    function GetPolicy(out aPolicy: nsCookiePolicy): Longword; extdecl;
  end;

  nsICookieManager_std17 = interface(nsISupports_std17)
  ['{aaab6710-0f2c-11d5-a53b-0010a401eb10}']
    function RemoveAll(): nsresult; extdecl;
    function GetEnumerator(out aEnumerator: nsISimpleEnumerator_std17): Longword; extdecl;
    function Remove(const aDomain: nsACString; const aName: nsACString; const aPath: nsACString; aBlocked: PRBool): nsresult; extdecl;
  end;

  nsICRLInfo_std17 = interface(nsISupports_std17)
  ['{c185d920-4a3e-11d5-ba27-00108303b117}']
    function GetOrganization(aOrganization: nsAString): Longword; extdecl;
    function GetOrganizationalUnit(aOrganizationalUnit: nsAString): Longword; extdecl;
    function GetLastUpdate(out aLastUpdate: PRTime): Longword; extdecl;
    function GetNextUpdate(out aNextUpdate: PRTime): Longword; extdecl;
    function GetLastUpdateLocale(aLastUpdateLocale: nsAString): Longword; extdecl;
    function GetNextUpdateLocale(aNextUpdateLocale: nsAString): Longword; extdecl;
    function GetNameInDb(aNameInDb: nsAString): Longword; extdecl;
    function GetLastFetchURL(aLastFetchURL: nsACString): Longword; extdecl;
  end;

  nsIDebug_std17 = interface(nsISupports_std17)
  ['{3bf0c3d7-3bd9-4cf2-a971-33572c503e1e}']
    function Assertion(const aStr: PAnsiChar; const aExpr: PAnsiChar; const aFile: PAnsiChar; aLine: PRInt32): nsresult; extdecl;
    function Warning(const aStr: PAnsiChar; const aFile: PAnsiChar; aLine: PRInt32): nsresult; extdecl;
    function Break(const aFile: PAnsiChar; aLine: PRInt32): nsresult; extdecl;
    function Abort(const aFile: PAnsiChar; aLine: PRInt32): nsresult; extdecl;
  end;

  nsIFile_std17 = interface(nsISupports_std17)
  ['{c8c0a080-0868-11d3-915f-d9d889d48e3c}']
    function Append(const node: nsAString): nsresult; extdecl;
    function AppendNative(const node: nsACString): nsresult; extdecl;
    function Normalize(): nsresult; extdecl;
    function Create(_type: PRUint32; permissions: PRUint32): nsresult; extdecl;
    function GetLeafName(aLeafName: nsAString): Longword; extdecl;
    function SetLeafName(const aLeafName: nsAString): Longword; extdecl;
    function GetNativeLeafName(aNativeLeafName: nsACString): Longword; extdecl;
    function SetNativeLeafName(const aNativeLeafName: nsACString): Longword; extdecl;
    function CopyTo(newParentDir: nsIFile_std17; const newName: nsAString): nsresult; extdecl;
    function CopyToNative(newParentDir: nsIFile_std17; const newName: nsACString): nsresult; extdecl;
    function CopyToFollowingLinks(newParentDir: nsIFile_std17; const newName: nsAString): nsresult; extdecl;
    function CopyToFollowingLinksNative(newParentDir: nsIFile_std17; const newName: nsACString): nsresult; extdecl;
    function MoveTo(newParentDir: nsIFile_std17; const newName: nsAString): nsresult; extdecl;
    function MoveToNative(newParentDir: nsIFile_std17; const newName: nsACString): nsresult; extdecl;
    function Remove(recursive: PRBool): nsresult; extdecl;
    function GetPermissions(out aPermissions: PRUint32): Longword; extdecl;
    function SetPermissions(aPermissions: PRUint32): Longword; extdecl;
    function GetPermissionsOfLink(out aPermissionsOfLink: PRUint32): Longword; extdecl;
    function SetPermissionsOfLink(aPermissionsOfLink: PRUint32): Longword; extdecl;
    function GetLastModifiedTime(out aLastModifiedTime: PRInt64): Longword; extdecl;
    function SetLastModifiedTime(aLastModifiedTime: PRInt64): Longword; extdecl;
    function GetLastModifiedTimeOfLink(out aLastModifiedTimeOfLink: PRInt64): Longword; extdecl;
    function SetLastModifiedTimeOfLink(aLastModifiedTimeOfLink: PRInt64): Longword; extdecl;
    function GetFileSize(out aFileSize: PRInt64): Longword; extdecl;
    function SetFileSize(aFileSize: PRInt64): Longword; extdecl;
    function GetFileSizeOfLink(out aFileSizeOfLink: PRInt64): Longword; extdecl;
    function GetTarget(aTarget: nsAString): Longword; extdecl;
    function GetNativeTarget(aNativeTarget: nsACString): Longword; extdecl;
    function GetPath(aPath: nsAString): Longword; extdecl;
    function GetNativePath(aNativePath: nsACString): Longword; extdecl;
    function Exists(out _retval: PRBool): nsresult; extdecl;
    function IsWritable(out _retval: PRBool): nsresult; extdecl;
    function IsReadable(out _retval: PRBool): nsresult; extdecl;
    function IsExecutable(out _retval: PRBool): nsresult; extdecl;
    function IsHidden(out _retval: PRBool): nsresult; extdecl;
    function IsDirectory(out _retval: PRBool): nsresult; extdecl;
    function IsFile(out _retval: PRBool): nsresult; extdecl;
    function IsSymlink(out _retval: PRBool): nsresult; extdecl;
    function IsSpecial(out _retval: PRBool): nsresult; extdecl;
    function CreateUnique(_type: PRUint32; permissions: PRUint32): nsresult; extdecl;
    function Clone(out _retval: nsIFile_std17): nsresult; extdecl;
    function Equals(inFile: nsIFile_std17; out _retval: PRBool): nsresult; extdecl;
    function _Contains(inFile: nsIFile_std17; recur: PRBool; out _retval: PRBool): nsresult; extdecl;
    function GetParent(out aParent: nsIFile_std17): Longword; extdecl;
    function GetDirectoryEntries(out aDirectoryEntries: nsISimpleEnumerator_std17): Longword; extdecl;
  end;

  nsIDirectoryServiceProvider_std17 = interface(nsISupports_std17)
  ['{bbf8cab0-d43a-11d3-8cc2-00609792278c}']
    function GetFile(const prop: PAnsiChar; out persistent: PRBool; out _retval: nsIFile_std17): nsresult; extdecl;
  end;

  nsIDirectoryServiceProvider2_std17 = interface(nsIDirectoryServiceProvider_std17)
  ['{2f977d4b-5485-11d4-87e2-0010a4e75ef2}']
    function GetFiles(const prop: PAnsiChar; out _retval: nsISimpleEnumerator_std17): nsresult; extdecl;
  end;

  nsIDirectoryService_std17 = interface(nsISupports_std17)
  ['{57a66a60-d43a-11d3-8cc2-00609792278c}']
    function Init(): nsresult; extdecl;
    function RegisterProvider(prov: nsIDirectoryServiceProvider_std17): nsresult; extdecl;
    function UnregisterProvider(prov: nsIDirectoryServiceProvider_std17): nsresult; extdecl;
  end;

  nsIDOM3DocumentEvent_std17 = interface(nsISupports_std17)
  ['{090ecc19-b7cb-4f47-ae47-ed68d4926249}']
    function CreateEventGroup(out _retval: nsIDOMEventGroup_std17): nsresult; extdecl;
  end;

  nsIDOM3EventTarget_std17 = interface(nsISupports_std17)
  ['{3e9c01a7-de97-4c3b-8294-b4bd9d7056d1}']
    function AddGroupedEventListener(const _type: nsAString; listener: nsIDOMEventListener_std17; useCapture: PRBool; evtGroup: nsIDOMEventGroup_std17): nsresult; extdecl;
    function RemoveGroupedEventListener(const _type: nsAString; listener: nsIDOMEventListener_std17; useCapture: PRBool; evtGroup: nsIDOMEventGroup_std17): nsresult; extdecl;
    function CanTrigger(const _type: nsAString; out _retval: PRBool): nsresult; extdecl;
    function IsRegisteredHere(const _type: nsAString; out _retval: PRBool): nsresult; extdecl;
  end;

  nsIDOMAbstractView_std17 = interface(nsISupports_std17)
  ['{f51ebade-8b1a-11d3-aae7-0010830123b4}']
    function GetDocument(out aDocument: nsIDOMDocumentView_std17): Longword; extdecl;
  end;

  nsIDOMNode_std17 = interface(nsISupports_std17)
  ['{a6cf907c-15b3-11d2-932e-00805f8add32}']
    function GetNodeName(aNodeName: nsAString): Longword; extdecl;
    function GetNodeValue(aNodeValue: nsAString): Longword; extdecl;
    function SetNodeValue(const aNodeValue: nsAString): Longword; extdecl;
    function GetNodeType(out aNodeType: PRUint16): Longword; extdecl;
    function GetParentNode(out aParentNode: nsIDOMNode_std17): Longword; extdecl;
    function GetChildNodes(out aChildNodes: nsIDOMNodeList_std17): Longword; extdecl;
    function GetFirstChild(out aFirstChild: nsIDOMNode_std17): Longword; extdecl;
    function GetLastChild(out aLastChild: nsIDOMNode_std17): Longword; extdecl;
    function GetPreviousSibling(out aPreviousSibling: nsIDOMNode_std17): Longword; extdecl;
    function GetNextSibling(out aNextSibling: nsIDOMNode_std17): Longword; extdecl;
    function GetAttributes(out aAttributes: nsIDOMNamedNodeMap_std17): Longword; extdecl;
    function GetOwnerDocument(out aOwnerDocument: nsIDOMDocument_std17): Longword; extdecl;
    function InsertBefore(newChild: nsIDOMNode_std17; refChild: nsIDOMNode_std17; out _retval: nsIDOMNode_std17): nsresult; extdecl;
    function ReplaceChild(newChild: nsIDOMNode_std17; oldChild: nsIDOMNode_std17; out _retval: nsIDOMNode_std17): nsresult; extdecl;
    function RemoveChild(oldChild: nsIDOMNode_std17; out _retval: nsIDOMNode_std17): nsresult; extdecl;
    function AppendChild(newChild: nsIDOMNode_std17; out _retval: nsIDOMNode_std17): nsresult; extdecl;
    function HasChildNodes(out _retval: PRBool): nsresult; extdecl;
    function CloneNode(deep: PRBool; out _retval: nsIDOMNode_std17): nsresult; extdecl;
    function Normalize(): nsresult; extdecl;
    function IsSupported(const feature: nsAString; const version: nsAString; out _retval: PRBool): nsresult; extdecl;
    function GetNamespaceURI(aNamespaceURI: nsAString): Longword; extdecl;
    function GetPrefix(aPrefix: nsAString): Longword; extdecl;
    function SetPrefix(const aPrefix: nsAString): Longword; extdecl;
    function GetLocalName(aLocalName: nsAString): Longword; extdecl;
    function HasAttributes(out _retval: PRBool): nsresult; extdecl;
  end;

  nsIDOMAttr_std17 = interface(nsIDOMNode_std17)
  ['{a6cf9070-15b3-11d2-932e-00805f8add32}']
    function GetName(aName: nsAString): Longword; extdecl;
    function GetSpecified(out aSpecified: PRBool): Longword; extdecl;
    function GetValue(aValue: nsAString): Longword; extdecl;
    function SetValue(const aValue: nsAString): Longword; extdecl;
    function GetOwnerElement(out aOwnerElement: nsIDOMElement_std17): Longword; extdecl;
  end;

  nsIDOMBarProp_std17 = interface(nsISupports_std17)
  ['{9eb2c150-1d56-11d3-8221-0060083a0bcf}']
    function GetVisible(out aVisible: PRBool): Longword; extdecl;
    function SetVisible(aVisible: PRBool): Longword; extdecl;
  end;

  nsIDOMCharacterData_std17 = interface(nsIDOMNode_std17)
  ['{a6cf9072-15b3-11d2-932e-00805f8add32}']
    function GetData(aData: nsAString): Longword; extdecl;
    function SetData(const aData: nsAString): Longword; extdecl;
    function GetLength(out aLength: PRUint32): Longword; extdecl;
    function SubstringData(offset: PRUint32; count: PRUint32; _retval: nsAString): nsresult; extdecl;
    function AppendData(const arg: nsAString): nsresult; extdecl;
    function InsertData(offset: PRUint32; const arg: nsAString): nsresult; extdecl;
    function DeleteData(offset: PRUint32; count: PRUint32): nsresult; extdecl;
    function ReplaceData(offset: PRUint32; count: PRUint32; const arg: nsAString): nsresult; extdecl;
  end;

  nsIDOMText_std17 = interface(nsIDOMCharacterData_std17)
  ['{a6cf9082-15b3-11d2-932e-00805f8add32}']
    function SplitText(offset: PRUint32; out _retval: nsIDOMText_std17): nsresult; extdecl;
  end;

  nsIDOMCDATASection_std17 = interface(nsIDOMText_std17)
  ['{a6cf9071-15b3-11d2-932e-00805f8add32}']
  end;

  nsIDOMComment_std17 = interface(nsIDOMCharacterData_std17)
  ['{a6cf9073-15b3-11d2-932e-00805f8add32}']
  end;

  nsIDOMCounter_std17 = interface(nsISupports_std17)
  ['{31adb439-0055-402d-9b1d-d5ca94f3f55b}']
    function GetIdentifier(aIdentifier: nsAString): Longword; extdecl;
    function GetListStyle(aListStyle: nsAString): Longword; extdecl;
    function GetSeparator(aSeparator: nsAString): Longword; extdecl;
  end;

  nsIDOMCSSValue_std17 = interface(nsISupports_std17)
  ['{009f7ea5-9e80-41be-b008-db62f10823f2}']
    function GetCssText(aCssText: nsAString): Longword; extdecl;
    function SetCssText(const aCssText: nsAString): Longword; extdecl;
    function GetCssValueType(out aCssValueType: PRUint16): Longword; extdecl;
  end;

  nsIDOMCSSPrimitiveValue_std17 = interface(nsIDOMCSSValue_std17)
  ['{e249031f-8df9-4e7a-b644-18946dce0019}']
    function GetPrimitiveType(out aPrimitiveType: PRUint16): Longword; extdecl;
    function SetFloatValue(unitType: PRUint16; floatValue: Single): nsresult; extdecl;
    function GetFloatValue(unitType: PRUint16; out _retval: Single): nsresult; extdecl;
    function SetStringValue(stringType: PRUint16; const stringValue: nsAString): nsresult; extdecl;
    function GetStringValue(_retval: nsAString): nsresult; extdecl;
    function GetCounterValue(out _retval: nsIDOMCounter_std17): nsresult; extdecl;
    function GetRectValue(out _retval: nsIDOMRect_std17): nsresult; extdecl;
    function GetRGBColorValue(out _retval: nsIDOMRGBColor_std17): nsresult; extdecl;
  end;

  nsIDOMCSSRule_std17 = interface(nsISupports_std17)
  ['{a6cf90c1-15b3-11d2-932e-00805f8add32}']
    function GetType(out aType: PRUint16): Longword; extdecl;
    function GetCssText(aCssText: nsAString): Longword; extdecl;
    function SetCssText(const aCssText: nsAString): Longword; extdecl;
    function GetParentStyleSheet(out aParentStyleSheet: nsIDOMCSSStyleSheet_std17): Longword; extdecl;
    function GetParentRule(out aParentRule: nsIDOMCSSRule_std17): Longword; extdecl;
  end;

  nsIDOMCSSRuleList_std17 = interface(nsISupports_std17)
  ['{a6cf90c0-15b3-11d2-932e-00805f8add32}']
    function GetLength(out aLength: PRUint32): Longword; extdecl;
    function Item(index: PRUint32; out _retval: nsIDOMCSSRule_std17): nsresult; extdecl;
  end;

  nsIDOMCSSStyleDeclaration_std17 = interface(nsISupports_std17)
  ['{a6cf90be-15b3-11d2-932e-00805f8add32}']
    function GetCssText(aCssText: nsAString): Longword; extdecl;
    function SetCssText(const aCssText: nsAString): Longword; extdecl;
    function GetPropertyValue(const propertyName: nsAString; _retval: nsAString): nsresult; extdecl;
    function GetPropertyCSSValue(const propertyName: nsAString; out _retval: nsIDOMCSSValue_std17): nsresult; extdecl;
    function RemoveProperty(const propertyName: nsAString; _retval: nsAString): nsresult; extdecl;
    function GetPropertyPriority(const propertyName: nsAString; _retval: nsAString): nsresult; extdecl;
    function SetProperty(const propertyName: nsAString; const value: nsAString; const priority: nsAString): nsresult; extdecl;
    function GetLength(out aLength: PRUint32): Longword; extdecl;
    function Item(index: PRUint32; _retval: nsAString): nsresult; extdecl;
    function GetParentRule(out aParentRule: nsIDOMCSSRule_std17): Longword; extdecl;
  end;

  nsIDOMStyleSheet_std17 = interface(nsISupports_std17)
  ['{a6cf9080-15b3-11d2-932e-00805f8add32}']
    function GetType(aType: nsAString): Longword; extdecl;
    function GetDisabled(out aDisabled: PRBool): Longword; extdecl;
    function SetDisabled(aDisabled: PRBool): Longword; extdecl;
    function GetOwnerNode(out aOwnerNode: nsIDOMNode_std17): Longword; extdecl;
    function GetParentStyleSheet(out aParentStyleSheet: nsIDOMStyleSheet_std17): Longword; extdecl;
    function GetHref(aHref: nsAString): Longword; extdecl;
    function GetTitle(aTitle: nsAString): Longword; extdecl;
    function GetMedia(out aMedia: nsIDOMMediaList_std17): Longword; extdecl;
  end;

  nsIDOMCSSStyleSheet_std17 = interface(nsIDOMStyleSheet_std17)
  ['{a6cf90c2-15b3-11d2-932e-00805f8add32}']
    function GetOwnerRule(out aOwnerRule: nsIDOMCSSRule_std17): Longword; extdecl;
    function GetCssRules(out aCssRules: nsIDOMCSSRuleList_std17): Longword; extdecl;
    function InsertRule(const rule: nsAString; index: PRUint32; out _retval: PRUint32): nsresult; extdecl;
    function DeleteRule(index: PRUint32): nsresult; extdecl;
  end;

  nsIDOMCSSValueList_std17 = interface(nsIDOMCSSValue_std17)
  ['{8f09fa84-39b9-4dca-9b2f-db0eeb186286}']
    function GetLength(out aLength: PRUint32): Longword; extdecl;
    function Item(index: PRUint32; out _retval: nsIDOMCSSValue_std17): nsresult; extdecl;
  end;

  nsIDOMEvent_std17 = interface(nsISupports_std17)
  ['{a66b7b80-ff46-bd97-0080-5f8ae38add32}']
    function GetType(aType: nsAString): Longword; extdecl;
    function GetTarget(out aTarget: nsIDOMEventTarget_std17): Longword; extdecl;
    function GetCurrentTarget(out aCurrentTarget: nsIDOMEventTarget_std17): Longword; extdecl;
    function GetEventPhase(out aEventPhase: PRUint16): Longword; extdecl;
    function GetBubbles(out aBubbles: PRBool): Longword; extdecl;
    function GetCancelable(out aCancelable: PRBool): Longword; extdecl;
    function GetTimeStamp(out aTimeStamp: DOMTimeStamp): Longword; extdecl;
    function StopPropagation(): nsresult; extdecl;
    function PreventDefault(): nsresult; extdecl;
    function InitEvent(const eventTypeArg: nsAString; canBubbleArg: PRBool; cancelableArg: PRBool): nsresult; extdecl;
  end;

  nsIDOMCustomEvent_std17 = interface(nsIDOMEvent_std17)
  ['{55c7af7b-1a64-40bf-87eb-2c2cbee0491b}']
    function SetCurrentTarget(target: nsIDOMNode_std17): nsresult; extdecl;
    function SetEventPhase(phase: PRUint16): nsresult; extdecl;
  end;

  nsIDOMDocument_std17 = interface(nsIDOMNode_std17)
  ['{a6cf9075-15b3-11d2-932e-00805f8add32}']
    function GetDoctype(out aDoctype: nsIDOMDocumentType_std17): Longword; extdecl;
    function GetImplementation(out aImplementation: nsIDOMDOMImplementation_std17): Longword; extdecl;
    function GetDocumentElement(out aDocumentElement: nsIDOMElement_std17): Longword; extdecl;
    function CreateElement(const tagName: nsAString; out _retval: nsIDOMElement_std17): nsresult; extdecl;
    function CreateDocumentFragment(out _retval: nsIDOMDocumentFragment_std17): nsresult; extdecl;
    function CreateTextNode(const data: nsAString; out _retval: nsIDOMText_std17): nsresult; extdecl;
    function CreateComment(const data: nsAString; out _retval: nsIDOMComment_std17): nsresult; extdecl;
    function CreateCDATASection(const data: nsAString; out _retval: nsIDOMCDATASection_std17): nsresult; extdecl;
    function CreateProcessingInstruction(const target: nsAString; const data: nsAString; out _retval: nsIDOMProcessingInstruction_std17): nsresult; extdecl;
    function CreateAttribute(const name: nsAString; out _retval: nsIDOMAttr_std17): nsresult; extdecl;
    function CreateEntityReference(const name: nsAString; out _retval: nsIDOMEntityReference_std17): nsresult; extdecl;
    function GetElementsByTagName(const tagname: nsAString; out _retval: nsIDOMNodeList_std17): nsresult; extdecl;
    function ImportNode(importedNode: nsIDOMNode_std17; deep: PRBool; out _retval: nsIDOMNode_std17): nsresult; extdecl;
    function CreateElementNS(const namespaceURI: nsAString; const qualifiedName: nsAString; out _retval: nsIDOMElement_std17): nsresult; extdecl;
    function CreateAttributeNS(const namespaceURI: nsAString; const qualifiedName: nsAString; out _retval: nsIDOMAttr_std17): nsresult; extdecl;
    function GetElementsByTagNameNS(const namespaceURI: nsAString; const localName: nsAString; out _retval: nsIDOMNodeList_std17): nsresult; extdecl;
    function GetElementById(const elementId: nsAString; out _retval: nsIDOMElement_std17): nsresult; extdecl;
  end;

  nsIDOMDocumentEvent_std17 = interface(nsISupports_std17)
  ['{46b91d66-28e2-11d4-ab1e-0010830123b4}']
    function CreateEvent(const eventType: nsAString; out _retval: nsIDOMEvent_std17): nsresult; extdecl;
  end;

  nsIDOMDocumentFragment_std17 = interface(nsIDOMNode_std17)
  ['{a6cf9076-15b3-11d2-932e-00805f8add32}']
  end;

  nsIDOMDocumentRange_std17 = interface(nsISupports_std17)
  ['{7b9badc6-c9bc-447a-8670-dbd195aed24b}']
    function CreateRange(out _retval: nsIDOMRange_std17): nsresult; extdecl;
  end;

  nsIDOMDocumentStyle_std17 = interface(nsISupports_std17)
  ['{3d9f4973-dd2e-48f5-b5f7-2634e09eadd9}']
    function GetStyleSheets(out aStyleSheets: nsIDOMStyleSheetList_std17): Longword; extdecl;
  end;

  nsIDOMDocumentType_std17 = interface(nsIDOMNode_std17)
  ['{a6cf9077-15b3-11d2-932e-00805f8add32}']
    function GetName(aName: nsAString): Longword; extdecl;
    function GetEntities(out aEntities: nsIDOMNamedNodeMap_std17): Longword; extdecl;
    function GetNotations(out aNotations: nsIDOMNamedNodeMap_std17): Longword; extdecl;
    function GetPublicId(aPublicId: nsAString): Longword; extdecl;
    function GetSystemId(aSystemId: nsAString): Longword; extdecl;
    function GetInternalSubset(aInternalSubset: nsAString): Longword; extdecl;
  end;

  nsIDOMDocumentView_std17 = interface(nsISupports_std17)
  ['{1acdb2ba-1dd2-11b2-95bc-9542495d2569}']
    function GetDefaultView(out aDefaultView: nsIDOMAbstractView_std17): Longword; extdecl;
  end;

  nsIDOMDOMException_std17 = interface(nsISupports_std17)
  ['{a6cf910a-15b3-11d2-932e-00805f8add32}']
    function GetCode(out aCode: PRUint32): Longword; extdecl;
  end;

  nsIDOMDOMImplementation_std17 = interface(nsISupports_std17)
  ['{a6cf9074-15b3-11d2-932e-00805f8add32}']
    function HasFeature(const feature: nsAString; const version: nsAString; out _retval: PRBool): nsresult; extdecl;
    function CreateDocumentType(const qualifiedName: nsAString; const publicId: nsAString; const systemId: nsAString; out _retval: nsIDOMDocumentType_std17): nsresult; extdecl;
    function CreateDocument(const namespaceURI: nsAString; const qualifiedName: nsAString; doctype: nsIDOMDocumentType_std17; out _retval: nsIDOMDocument_std17): nsresult; extdecl;
  end;

  nsIDOMElement_std17 = interface(nsIDOMNode_std17)
  ['{a6cf9078-15b3-11d2-932e-00805f8add32}']
    function GetTagName(aTagName: nsAString): Longword; extdecl;
    function GetAttribute(const name: nsAString; _retval: nsAString): nsresult; extdecl;
    function SetAttribute(const name: nsAString; const value: nsAString): nsresult; extdecl;
    function RemoveAttribute(const name: nsAString): nsresult; extdecl;
    function GetAttributeNode(const name: nsAString; out _retval: nsIDOMAttr_std17): nsresult; extdecl;
    function SetAttributeNode(newAttr: nsIDOMAttr_std17; out _retval: nsIDOMAttr_std17): nsresult; extdecl;
    function RemoveAttributeNode(oldAttr: nsIDOMAttr_std17; out _retval: nsIDOMAttr_std17): nsresult; extdecl;
    function GetElementsByTagName(const name: nsAString; out _retval: nsIDOMNodeList_std17): nsresult; extdecl;
    function GetAttributeNS(const namespaceURI: nsAString; const localName: nsAString; _retval: nsAString): nsresult; extdecl;
    function SetAttributeNS(const namespaceURI: nsAString; const qualifiedName: nsAString; const value: nsAString): nsresult; extdecl;
    function RemoveAttributeNS(const namespaceURI: nsAString; const localName: nsAString): nsresult; extdecl;
    function GetAttributeNodeNS(const namespaceURI: nsAString; const localName: nsAString; out _retval: nsIDOMAttr_std17): nsresult; extdecl;
    function SetAttributeNodeNS(newAttr: nsIDOMAttr_std17; out _retval: nsIDOMAttr_std17): nsresult; extdecl;
    function GetElementsByTagNameNS(const namespaceURI: nsAString; const localName: nsAString; out _retval: nsIDOMNodeList_std17): nsresult; extdecl;
    function HasAttribute(const name: nsAString; out _retval: PRBool): nsresult; extdecl;
    function HasAttributeNS(const namespaceURI: nsAString; const localName: nsAString; out _retval: PRBool): nsresult; extdecl;
  end;

  nsIDOMEntity_std17 = interface(nsIDOMNode_std17)
  ['{a6cf9079-15b3-11d2-932e-00805f8add32}']
    function GetPublicId(aPublicId: nsAString): Longword; extdecl;
    function GetSystemId(aSystemId: nsAString): Longword; extdecl;
    function GetNotationName(aNotationName: nsAString): Longword; extdecl;
  end;

  nsIDOMEntityReference_std17 = interface(nsIDOMNode_std17)
  ['{a6cf907a-15b3-11d2-932e-00805f8add32}']
  end;

  nsIDOMEventGroup_std17 = interface(nsISupports_std17)
  ['{33347bee-6620-4841-8152-36091ae80c7e}']
    function IsSameEventGroup(other: nsIDOMEventGroup_std17; out _retval: PRBool): nsresult; extdecl;
  end;

  nsIDOMEventListener_std17 = interface(nsISupports_std17)
  ['{df31c120-ded6-11d1-bd85-00805f8ae3f4}']
    function HandleEvent(event: nsIDOMEvent_std17): nsresult; extdecl;
  end;

  nsIDOMEventTarget_std17 = interface(nsISupports_std17)
  ['{1c773b30-d1cf-11d2-bd95-00805f8ae3f4}']
    function AddEventListener(const _type: nsAString; listener: nsIDOMEventListener_std17; useCapture: PRBool): nsresult; extdecl;
    function RemoveEventListener(const _type: nsAString; listener: nsIDOMEventListener_std17; useCapture: PRBool): nsresult; extdecl;
    function DispatchEvent(evt: nsIDOMEvent_std17; out _retval: PRBool): nsresult; extdecl;
  end;

  nsIDOMHTMLElement_std17 = interface(nsIDOMElement_std17)
  ['{a6cf9085-15b3-11d2-932e-00805f8add32}']
    function GetId(aId: nsAString): Longword; extdecl;
    function SetId(const aId: nsAString): Longword; extdecl;
    function GetTitle(aTitle: nsAString): Longword; extdecl;
    function SetTitle(const aTitle: nsAString): Longword; extdecl;
    function GetLang(aLang: nsAString): Longword; extdecl;
    function SetLang(const aLang: nsAString): Longword; extdecl;
    function GetDir(aDir: nsAString): Longword; extdecl;
    function SetDir(const aDir: nsAString): Longword; extdecl;
    function GetClassName(aClassName: nsAString): Longword; extdecl;
    function SetClassName(const aClassName: nsAString): Longword; extdecl;
  end;

  nsIDOMHTMLAnchorElement_std17 = interface(nsIDOMHTMLElement_std17)
  ['{a6cf90aa-15b3-11d2-932e-00805f8add32}']
    function GetAccessKey(aAccessKey: nsAString): Longword; extdecl;
    function SetAccessKey(const aAccessKey: nsAString): Longword; extdecl;
    function GetCharset(aCharset: nsAString): Longword; extdecl;
    function SetCharset(const aCharset: nsAString): Longword; extdecl;
    function GetCoords(aCoords: nsAString): Longword; extdecl;
    function SetCoords(const aCoords: nsAString): Longword; extdecl;
    function GetHref(aHref: nsAString): Longword; extdecl;
    function SetHref(const aHref: nsAString): Longword; extdecl;
    function GetHreflang(aHreflang: nsAString): Longword; extdecl;
    function SetHreflang(const aHreflang: nsAString): Longword; extdecl;
    function GetName(aName: nsAString): Longword; extdecl;
    function SetName(const aName: nsAString): Longword; extdecl;
    function GetRel(aRel: nsAString): Longword; extdecl;
    function SetRel(const aRel: nsAString): Longword; extdecl;
    function GetRev(aRev: nsAString): Longword; extdecl;
    function SetRev(const aRev: nsAString): Longword; extdecl;
    function GetShape(aShape: nsAString): Longword; extdecl;
    function SetShape(const aShape: nsAString): Longword; extdecl;
    function GetTabIndex(out aTabIndex: PRInt32): Longword; extdecl;
    function SetTabIndex(aTabIndex: PRInt32): Longword; extdecl;
    function GetTarget(aTarget: nsAString): Longword; extdecl;
    function SetTarget(const aTarget: nsAString): Longword; extdecl;
    function GetType(aType: nsAString): Longword; extdecl;
    function SetType(const aType: nsAString): Longword; extdecl;
    function Blur(): nsresult; extdecl;
    function Focus(): nsresult; extdecl;
  end;

  nsIDOMHTMLAppletElement_std17 = interface(nsIDOMHTMLElement_std17)
  ['{a6cf90ae-15b3-11d2-932e-00805f8add32}']
    function GetAlign(aAlign: nsAString): Longword; extdecl;
    function SetAlign(const aAlign: nsAString): Longword; extdecl;
    function GetAlt(aAlt: nsAString): Longword; extdecl;
    function SetAlt(const aAlt: nsAString): Longword; extdecl;
    function GetArchive(aArchive: nsAString): Longword; extdecl;
    function SetArchive(const aArchive: nsAString): Longword; extdecl;
    function GetCode(aCode: nsAString): Longword; extdecl;
    function SetCode(const aCode: nsAString): Longword; extdecl;
    function GetCodeBase(aCodeBase: nsAString): Longword; extdecl;
    function SetCodeBase(const aCodeBase: nsAString): Longword; extdecl;
    function GetHeight(aHeight: nsAString): Longword; extdecl;
    function SetHeight(const aHeight: nsAString): Longword; extdecl;
    function GetHspace(out aHspace: PRInt32): Longword; extdecl;
    function SetHspace(aHspace: PRInt32): Longword; extdecl;
    function GetName(aName: nsAString): Longword; extdecl;
    function SetName(const aName: nsAString): Longword; extdecl;
    function GetObject(aObject: nsAString): Longword; extdecl;
    function SetObject(const aObject: nsAString): Longword; extdecl;
    function GetVspace(out aVspace: PRInt32): Longword; extdecl;
    function SetVspace(aVspace: PRInt32): Longword; extdecl;
    function GetWidth(aWidth: nsAString): Longword; extdecl;
    function SetWidth(const aWidth: nsAString): Longword; extdecl;
  end;

  nsIDOMHTMLAreaElement_std17 = interface(nsIDOMHTMLElement_std17)
  ['{a6cf90b0-15b3-11d2-932e-00805f8add32}']
    function GetAccessKey(aAccessKey: nsAString): Longword; extdecl;
    function SetAccessKey(const aAccessKey: nsAString): Longword; extdecl;
    function GetAlt(aAlt: nsAString): Longword; extdecl;
    function SetAlt(const aAlt: nsAString): Longword; extdecl;
    function GetCoords(aCoords: nsAString): Longword; extdecl;
    function SetCoords(const aCoords: nsAString): Longword; extdecl;
    function GetHref(aHref: nsAString): Longword; extdecl;
    function SetHref(const aHref: nsAString): Longword; extdecl;
    function GetNoHref(out aNoHref: PRBool): Longword; extdecl;
    function SetNoHref(aNoHref: PRBool): Longword; extdecl;
    function GetShape(aShape: nsAString): Longword; extdecl;
    function SetShape(const aShape: nsAString): Longword; extdecl;
    function GetTabIndex(out aTabIndex: PRInt32): Longword; extdecl;
    function SetTabIndex(aTabIndex: PRInt32): Longword; extdecl;
    function GetTarget(aTarget: nsAString): Longword; extdecl;
    function SetTarget(const aTarget: nsAString): Longword; extdecl;
  end;

  nsIDOMHTMLBaseElement_std17 = interface(nsIDOMHTMLElement_std17)
  ['{a6cf908b-15b3-11d2-932e-00805f8add32}']
    function GetHref(aHref: nsAString): Longword; extdecl;
    function SetHref(const aHref: nsAString): Longword; extdecl;
    function GetTarget(aTarget: nsAString): Longword; extdecl;
    function SetTarget(const aTarget: nsAString): Longword; extdecl;
  end;

  nsIDOMHTMLBaseFontElement_std17 = interface(nsIDOMHTMLElement_std17)
  ['{a6cf90a6-15b3-11d2-932e-00805f8add32}']
    function GetColor(aColor: nsAString): Longword; extdecl;
    function SetColor(const aColor: nsAString): Longword; extdecl;
    function GetFace(aFace: nsAString): Longword; extdecl;
    function SetFace(const aFace: nsAString): Longword; extdecl;
    function GetSize(out aSize: PRInt32): Longword; extdecl;
    function SetSize(aSize: PRInt32): Longword; extdecl;
  end;

  nsIDOMHTMLBodyElement_std17 = interface(nsIDOMHTMLElement_std17)
  ['{a6cf908e-15b3-11d2-932e-00805f8add32}']
    function GetALink(aALink: nsAString): Longword; extdecl;
    function SetALink(const aALink: nsAString): Longword; extdecl;
    function GetBackground(aBackground: nsAString): Longword; extdecl;
    function SetBackground(const aBackground: nsAString): Longword; extdecl;
    function GetBgColor(aBgColor: nsAString): Longword; extdecl;
    function SetBgColor(const aBgColor: nsAString): Longword; extdecl;
    function GetLink(aLink: nsAString): Longword; extdecl;
    function SetLink(const aLink: nsAString): Longword; extdecl;
    function GetText(aText: nsAString): Longword; extdecl;
    function SetText(const aText: nsAString): Longword; extdecl;
    function GetVLink(aVLink: nsAString): Longword; extdecl;
    function SetVLink(const aVLink: nsAString): Longword; extdecl;
  end;

  nsIDOMHTMLBRElement_std17 = interface(nsIDOMHTMLElement_std17)
  ['{a6cf90a5-15b3-11d2-932e-00805f8add32}']
    function GetClear(aClear: nsAString): Longword; extdecl;
    function SetClear(const aClear: nsAString): Longword; extdecl;
  end;

  nsIDOMHTMLButtonElement_std17 = interface(nsIDOMHTMLElement_std17)
  ['{a6cf9095-15b3-11d2-932e-00805f8add32}']
    function GetForm(out aForm: nsIDOMHTMLFormElement_std17): Longword; extdecl;
    function GetAccessKey(aAccessKey: nsAString): Longword; extdecl;
    function SetAccessKey(const aAccessKey: nsAString): Longword; extdecl;
    function GetDisabled(out aDisabled: PRBool): Longword; extdecl;
    function SetDisabled(aDisabled: PRBool): Longword; extdecl;
    function GetName(aName: nsAString): Longword; extdecl;
    function SetName(const aName: nsAString): Longword; extdecl;
    function GetTabIndex(out aTabIndex: PRInt32): Longword; extdecl;
    function SetTabIndex(aTabIndex: PRInt32): Longword; extdecl;
    function GetType(aType: nsAString): Longword; extdecl;
    function GetValue(aValue: nsAString): Longword; extdecl;
    function SetValue(const aValue: nsAString): Longword; extdecl;
  end;

  nsIDOMHTMLCollection_std17 = interface(nsISupports_std17)
  ['{a6cf9083-15b3-11d2-932e-00805f8add32}']
    function GetLength(out aLength: PRUint32): Longword; extdecl;
    function Item(index: PRUint32; out _retval: nsIDOMNode_std17): nsresult; extdecl;
    function NamedItem(const name: nsAString; out _retval: nsIDOMNode_std17): nsresult; extdecl;
  end;

  nsIDOMHTMLDirectoryElement_std17 = interface(nsIDOMHTMLElement_std17)
  ['{a6cf909c-15b3-11d2-932e-00805f8add32}']
    function GetCompact(out aCompact: PRBool): Longword; extdecl;
    function SetCompact(aCompact: PRBool): Longword; extdecl;
  end;

  nsIDOMHTMLDivElement_std17 = interface(nsIDOMHTMLElement_std17)
  ['{a6cf90a0-15b3-11d2-932e-00805f8add32}']
    function GetAlign(aAlign: nsAString): Longword; extdecl;
    function SetAlign(const aAlign: nsAString): Longword; extdecl;
  end;

  nsIDOMHTMLDListElement_std17 = interface(nsIDOMHTMLElement_std17)
  ['{a6cf909b-15b3-11d2-932e-00805f8add32}']
    function GetCompact(out aCompact: PRBool): Longword; extdecl;
    function SetCompact(aCompact: PRBool): Longword; extdecl;
  end;

  nsIDOMHTMLDocument_std17 = interface(nsIDOMDocument_std17)
  ['{a6cf9084-15b3-11d2-932e-00805f8add32}']
    function GetTitle(aTitle: nsAString): Longword; extdecl;
    function SetTitle(const aTitle: nsAString): Longword; extdecl;
    function GetReferrer(aReferrer: nsAString): Longword; extdecl;
    function GetDomain(aDomain: nsAString): Longword; extdecl;
    function GetURL(aURL: nsAString): Longword; extdecl;
    function GetBody(out aBody: nsIDOMHTMLElement_std17): Longword; extdecl;
    function SetBody(aBody: nsIDOMHTMLElement_std17): Longword; extdecl;
    function GetImages(out aImages: nsIDOMHTMLCollection_std17): Longword; extdecl;
    function GetApplets(out aApplets: nsIDOMHTMLCollection_std17): Longword; extdecl;
    function GetLinks(out aLinks: nsIDOMHTMLCollection_std17): Longword; extdecl;
    function GetForms(out aForms: nsIDOMHTMLCollection_std17): Longword; extdecl;
    function GetAnchors(out aAnchors: nsIDOMHTMLCollection_std17): Longword; extdecl;
    function GetCookie(aCookie: nsAString): Longword; extdecl;
    function SetCookie(const aCookie: nsAString): Longword; extdecl;
    function Open(): nsresult; extdecl;
    function Close(): nsresult; extdecl;
    function Write(const text: nsAString): nsresult; extdecl;
    function Writeln(const text: nsAString): nsresult; extdecl;
    function GetElementsByName(const elementName: nsAString; out _retval: nsIDOMNodeList_std17): nsresult; extdecl;
  end;

  nsIDOMHTMLEmbedElement_std17 = interface(nsIDOMHTMLElement_std17)
  ['{123f90ab-15b3-11d2-456e-00805f8add32}']
    function GetAlign(aAlign: nsAString): Longword; extdecl;
    function SetAlign(const aAlign: nsAString): Longword; extdecl;
    function GetHeight(aHeight: nsAString): Longword; extdecl;
    function SetHeight(const aHeight: nsAString): Longword; extdecl;
    function GetName(aName: nsAString): Longword; extdecl;
    function SetName(const aName: nsAString): Longword; extdecl;
    function GetSrc(aSrc: nsAString): Longword; extdecl;
    function SetSrc(const aSrc: nsAString): Longword; extdecl;
    function GetType(aType: nsAString): Longword; extdecl;
    function SetType(const aType: nsAString): Longword; extdecl;
    function GetWidth(aWidth: nsAString): Longword; extdecl;
    function SetWidth(const aWidth: nsAString): Longword; extdecl;
  end;

  nsIDOMHTMLFieldSetElement_std17 = interface(nsIDOMHTMLElement_std17)
  ['{a6cf9097-15b3-11d2-932e-00805f8add32}']
    function GetForm(out aForm: nsIDOMHTMLFormElement_std17): Longword; extdecl;
  end;

  nsIDOMHTMLFontElement_std17 = interface(nsIDOMHTMLElement_std17)
  ['{a6cf90a7-15b3-11d2-932e-00805f8add32}']
    function GetColor(aColor: nsAString): Longword; extdecl;
    function SetColor(const aColor: nsAString): Longword; extdecl;
    function GetFace(aFace: nsAString): Longword; extdecl;
    function SetFace(const aFace: nsAString): Longword; extdecl;
    function GetSize(aSize: nsAString): Longword; extdecl;
    function SetSize(const aSize: nsAString): Longword; extdecl;
  end;

  nsIDOMHTMLFormElement_std17 = interface(nsIDOMHTMLElement_std17)
  ['{a6cf908f-15b3-11d2-932e-00805f8add32}']
    function GetElements(out aElements: nsIDOMHTMLCollection_std17): Longword; extdecl;
    function GetLength(out aLength: PRInt32): Longword; extdecl;
    function GetName(aName: nsAString): Longword; extdecl;
    function SetName(const aName: nsAString): Longword; extdecl;
    function GetAcceptCharset(aAcceptCharset: nsAString): Longword; extdecl;
    function SetAcceptCharset(const aAcceptCharset: nsAString): Longword; extdecl;
    function GetAction(aAction: nsAString): Longword; extdecl;
    function SetAction(const aAction: nsAString): Longword; extdecl;
    function GetEnctype(aEnctype: nsAString): Longword; extdecl;
    function SetEnctype(const aEnctype: nsAString): Longword; extdecl;
    function GetMethod(aMethod: nsAString): Longword; extdecl;
    function SetMethod(const aMethod: nsAString): Longword; extdecl;
    function GetTarget(aTarget: nsAString): Longword; extdecl;
    function SetTarget(const aTarget: nsAString): Longword; extdecl;
    function Submit(): nsresult; extdecl;
    function Reset(): nsresult; extdecl;
  end;

  nsIDOMHTMLFrameElement_std17 = interface(nsIDOMHTMLElement_std17)
  ['{a6cf90b9-15b3-11d2-932e-00805f8add32}']
    function GetFrameBorder(aFrameBorder: nsAString): Longword; extdecl;
    function SetFrameBorder(const aFrameBorder: nsAString): Longword; extdecl;
    function GetLongDesc(aLongDesc: nsAString): Longword; extdecl;
    function SetLongDesc(const aLongDesc: nsAString): Longword; extdecl;
    function GetMarginHeight(aMarginHeight: nsAString): Longword; extdecl;
    function SetMarginHeight(const aMarginHeight: nsAString): Longword; extdecl;
    function GetMarginWidth(aMarginWidth: nsAString): Longword; extdecl;
    function SetMarginWidth(const aMarginWidth: nsAString): Longword; extdecl;
    function GetName(aName: nsAString): Longword; extdecl;
    function SetName(const aName: nsAString): Longword; extdecl;
    function GetNoResize(out aNoResize: PRBool): Longword; extdecl;
    function SetNoResize(aNoResize: PRBool): Longword; extdecl;
    function GetScrolling(aScrolling: nsAString): Longword; extdecl;
    function SetScrolling(const aScrolling: nsAString): Longword; extdecl;
    function GetSrc(aSrc: nsAString): Longword; extdecl;
    function SetSrc(const aSrc: nsAString): Longword; extdecl;
    function GetContentDocument(out aContentDocument: nsIDOMDocument_std17): Longword; extdecl;
  end;

  nsIDOMHTMLFrameSetElement_std17 = interface(nsIDOMHTMLElement_std17)
  ['{a6cf90b8-15b3-11d2-932e-00805f8add32}']
    function GetCols(aCols: nsAString): Longword; extdecl;
    function SetCols(const aCols: nsAString): Longword; extdecl;
    function GetRows(aRows: nsAString): Longword; extdecl;
    function SetRows(const aRows: nsAString): Longword; extdecl;
  end;

  nsIDOMHTMLHeadElement_std17 = interface(nsIDOMHTMLElement_std17)
  ['{a6cf9087-15b3-11d2-932e-00805f8add32}']
    function GetProfile(aProfile: nsAString): Longword; extdecl;
    function SetProfile(const aProfile: nsAString): Longword; extdecl;
  end;

  nsIDOMHTMLHeadingElement_std17 = interface(nsIDOMHTMLElement_std17)
  ['{a6cf90a2-15b3-11d2-932e-00805f8add32}']
    function GetAlign(aAlign: nsAString): Longword; extdecl;
    function SetAlign(const aAlign: nsAString): Longword; extdecl;
  end;

  nsIDOMHTMLHRElement_std17 = interface(nsIDOMHTMLElement_std17)
  ['{a6cf90a8-15b3-11d2-932e-00805f8add32}']
    function GetAlign(aAlign: nsAString): Longword; extdecl;
    function SetAlign(const aAlign: nsAString): Longword; extdecl;
    function GetNoShade(out aNoShade: PRBool): Longword; extdecl;
    function SetNoShade(aNoShade: PRBool): Longword; extdecl;
    function GetSize(aSize: nsAString): Longword; extdecl;
    function SetSize(const aSize: nsAString): Longword; extdecl;
    function GetWidth(aWidth: nsAString): Longword; extdecl;
    function SetWidth(const aWidth: nsAString): Longword; extdecl;
  end;

  nsIDOMHTMLHtmlElement_std17 = interface(nsIDOMHTMLElement_std17)
  ['{a6cf9086-15b3-11d2-932e-00805f8add32}']
    function GetVersion(aVersion: nsAString): Longword; extdecl;
    function SetVersion(const aVersion: nsAString): Longword; extdecl;
  end;

  nsIDOMHTMLIFrameElement_std17 = interface(nsIDOMHTMLElement_std17)
  ['{a6cf90ba-15b3-11d2-932e-00805f8add32}']
    function GetAlign(aAlign: nsAString): Longword; extdecl;
    function SetAlign(const aAlign: nsAString): Longword; extdecl;
    function GetFrameBorder(aFrameBorder: nsAString): Longword; extdecl;
    function SetFrameBorder(const aFrameBorder: nsAString): Longword; extdecl;
    function GetHeight(aHeight: nsAString): Longword; extdecl;
    function SetHeight(const aHeight: nsAString): Longword; extdecl;
    function GetLongDesc(aLongDesc: nsAString): Longword; extdecl;
    function SetLongDesc(const aLongDesc: nsAString): Longword; extdecl;
    function GetMarginHeight(aMarginHeight: nsAString): Longword; extdecl;
    function SetMarginHeight(const aMarginHeight: nsAString): Longword; extdecl;
    function GetMarginWidth(aMarginWidth: nsAString): Longword; extdecl;
    function SetMarginWidth(const aMarginWidth: nsAString): Longword; extdecl;
    function GetName(aName: nsAString): Longword; extdecl;
    function SetName(const aName: nsAString): Longword; extdecl;
    function GetScrolling(aScrolling: nsAString): Longword; extdecl;
    function SetScrolling(const aScrolling: nsAString): Longword; extdecl;
    function GetSrc(aSrc: nsAString): Longword; extdecl;
    function SetSrc(const aSrc: nsAString): Longword; extdecl;
    function GetWidth(aWidth: nsAString): Longword; extdecl;
    function SetWidth(const aWidth: nsAString): Longword; extdecl;
    function GetContentDocument(out aContentDocument: nsIDOMDocument_std17): Longword; extdecl;
  end;

  nsIDOMHTMLImageElement_std17 = interface(nsIDOMHTMLElement_std17)
  ['{a6cf90ab-15b3-11d2-932e-00805f8add32}']
    function GetName(aName: nsAString): Longword; extdecl;
    function SetName(const aName: nsAString): Longword; extdecl;
    function GetAlign(aAlign: nsAString): Longword; extdecl;
    function SetAlign(const aAlign: nsAString): Longword; extdecl;
    function GetAlt(aAlt: nsAString): Longword; extdecl;
    function SetAlt(const aAlt: nsAString): Longword; extdecl;
    function GetBorder(aBorder: nsAString): Longword; extdecl;
    function SetBorder(const aBorder: nsAString): Longword; extdecl;
    function GetHeight(out aHeight: PRInt32): Longword; extdecl;
    function SetHeight(aHeight: PRInt32): Longword; extdecl;
    function GetHspace(out aHspace: PRInt32): Longword; extdecl;
    function SetHspace(aHspace: PRInt32): Longword; extdecl;
    function GetIsMap(out aIsMap: PRBool): Longword; extdecl;
    function SetIsMap(aIsMap: PRBool): Longword; extdecl;
    function GetLongDesc(aLongDesc: nsAString): Longword; extdecl;
    function SetLongDesc(const aLongDesc: nsAString): Longword; extdecl;
    function GetSrc(aSrc: nsAString): Longword; extdecl;
    function SetSrc(const aSrc: nsAString): Longword; extdecl;
    function GetUseMap(aUseMap: nsAString): Longword; extdecl;
    function SetUseMap(const aUseMap: nsAString): Longword; extdecl;
    function GetVspace(out aVspace: PRInt32): Longword; extdecl;
    function SetVspace(aVspace: PRInt32): Longword; extdecl;
    function GetWidth(out aWidth: PRInt32): Longword; extdecl;
    function SetWidth(aWidth: PRInt32): Longword; extdecl;
  end;

  nsIDOMHTMLInputElement_std17 = interface(nsIDOMHTMLElement_std17)
  ['{a6cf9093-15b3-11d2-932e-00805f8add32}']
    function GetDefaultValue(aDefaultValue: nsAString): Longword; extdecl;
    function SetDefaultValue(const aDefaultValue: nsAString): Longword; extdecl;
    function GetDefaultChecked(out aDefaultChecked: PRBool): Longword; extdecl;
    function SetDefaultChecked(aDefaultChecked: PRBool): Longword; extdecl;
    function GetForm(out aForm: nsIDOMHTMLFormElement_std17): Longword; extdecl;
    function GetAccept(aAccept: nsAString): Longword; extdecl;
    function SetAccept(const aAccept: nsAString): Longword; extdecl;
    function GetAccessKey(aAccessKey: nsAString): Longword; extdecl;
    function SetAccessKey(const aAccessKey: nsAString): Longword; extdecl;
    function GetAlign(aAlign: nsAString): Longword; extdecl;
    function SetAlign(const aAlign: nsAString): Longword; extdecl;
    function GetAlt(aAlt: nsAString): Longword; extdecl;
    function SetAlt(const aAlt: nsAString): Longword; extdecl;
    function GetChecked(out aChecked: PRBool): Longword; extdecl;
    function SetChecked(aChecked: PRBool): Longword; extdecl;
    function GetDisabled(out aDisabled: PRBool): Longword; extdecl;
    function SetDisabled(aDisabled: PRBool): Longword; extdecl;
    function GetMaxLength(out aMaxLength: PRInt32): Longword; extdecl;
    function SetMaxLength(aMaxLength: PRInt32): Longword; extdecl;
    function GetName(aName: nsAString): Longword; extdecl;
    function SetName(const aName: nsAString): Longword; extdecl;
    function GetReadOnly(out aReadOnly: PRBool): Longword; extdecl;
    function SetReadOnly(aReadOnly: PRBool): Longword; extdecl;
    function GetSize(out aSize: PRUint32): Longword; extdecl;
    function SetSize(aSize: PRUint32): Longword; extdecl;
    function GetSrc(aSrc: nsAString): Longword; extdecl;
    function SetSrc(const aSrc: nsAString): Longword; extdecl;
    function GetTabIndex(out aTabIndex: PRInt32): Longword; extdecl;
    function SetTabIndex(aTabIndex: PRInt32): Longword; extdecl;
    function GetType(aType: nsAString): Longword; extdecl;
    function SetType(const aType: nsAString): Longword; extdecl;
    function GetUseMap(aUseMap: nsAString): Longword; extdecl;
    function SetUseMap(const aUseMap: nsAString): Longword; extdecl;
    function GetValue(aValue: nsAString): Longword; extdecl;
    function SetValue(const aValue: nsAString): Longword; extdecl;
    function Blur(): nsresult; extdecl;
    function Focus(): nsresult; extdecl;
    function Select(): nsresult; extdecl;
    function Click(): nsresult; extdecl;
  end;

  nsIDOMHTMLIsIndexElement_std17 = interface(nsIDOMHTMLElement_std17)
  ['{a6cf908c-15b3-11d2-932e-00805f8add32}']
    function GetForm(out aForm: nsIDOMHTMLFormElement_std17): Longword; extdecl;
    function GetPrompt(aPrompt: nsAString): Longword; extdecl;
    function SetPrompt(const aPrompt: nsAString): Longword; extdecl;
  end;

  nsIDOMHTMLLabelElement_std17 = interface(nsIDOMHTMLElement_std17)
  ['{a6cf9096-15b3-11d2-932e-00805f8add32}']
    function GetForm(out aForm: nsIDOMHTMLFormElement_std17): Longword; extdecl;
    function GetAccessKey(aAccessKey: nsAString): Longword; extdecl;
    function SetAccessKey(const aAccessKey: nsAString): Longword; extdecl;
    function GetHtmlFor(aHtmlFor: nsAString): Longword; extdecl;
    function SetHtmlFor(const aHtmlFor: nsAString): Longword; extdecl;
  end;

  nsIDOMHTMLLegendElement_std17 = interface(nsIDOMHTMLElement_std17)
  ['{a6cf9098-15b3-11d2-932e-00805f8add32}']
    function GetForm(out aForm: nsIDOMHTMLFormElement_std17): Longword; extdecl;
    function GetAccessKey(aAccessKey: nsAString): Longword; extdecl;
    function SetAccessKey(const aAccessKey: nsAString): Longword; extdecl;
    function GetAlign(aAlign: nsAString): Longword; extdecl;
    function SetAlign(const aAlign: nsAString): Longword; extdecl;
  end;

  nsIDOMHTMLLIElement_std17 = interface(nsIDOMHTMLElement_std17)
  ['{a6cf909e-15b3-11d2-932e-00805f8add32}']
    function GetType(aType: nsAString): Longword; extdecl;
    function SetType(const aType: nsAString): Longword; extdecl;
    function GetValue(out aValue: PRInt32): Longword; extdecl;
    function SetValue(aValue: PRInt32): Longword; extdecl;
  end;

  nsIDOMHTMLLinkElement_std17 = interface(nsIDOMHTMLElement_std17)
  ['{a6cf9088-15b3-11d2-932e-00805f8add32}']
    function GetDisabled(out aDisabled: PRBool): Longword; extdecl;
    function SetDisabled(aDisabled: PRBool): Longword; extdecl;
    function GetCharset(aCharset: nsAString): Longword; extdecl;
    function SetCharset(const aCharset: nsAString): Longword; extdecl;
    function GetHref(aHref: nsAString): Longword; extdecl;
    function SetHref(const aHref: nsAString): Longword; extdecl;
    function GetHreflang(aHreflang: nsAString): Longword; extdecl;
    function SetHreflang(const aHreflang: nsAString): Longword; extdecl;
    function GetMedia(aMedia: nsAString): Longword; extdecl;
    function SetMedia(const aMedia: nsAString): Longword; extdecl;
    function GetRel(aRel: nsAString): Longword; extdecl;
    function SetRel(const aRel: nsAString): Longword; extdecl;
    function GetRev(aRev: nsAString): Longword; extdecl;
    function SetRev(const aRev: nsAString): Longword; extdecl;
    function GetTarget(aTarget: nsAString): Longword; extdecl;
    function SetTarget(const aTarget: nsAString): Longword; extdecl;
    function GetType(aType: nsAString): Longword; extdecl;
    function SetType(const aType: nsAString): Longword; extdecl;
  end;

  nsIDOMHTMLMapElement_std17 = interface(nsIDOMHTMLElement_std17)
  ['{a6cf90af-15b3-11d2-932e-00805f8add32}']
    function GetAreas(out aAreas: nsIDOMHTMLCollection_std17): Longword; extdecl;
    function GetName(aName: nsAString): Longword; extdecl;
    function SetName(const aName: nsAString): Longword; extdecl;
  end;

  nsIDOMHTMLMenuElement_std17 = interface(nsIDOMHTMLElement_std17)
  ['{a6cf909d-15b3-11d2-932e-00805f8add32}']
    function GetCompact(out aCompact: PRBool): Longword; extdecl;
    function SetCompact(aCompact: PRBool): Longword; extdecl;
  end;

  nsIDOMHTMLMetaElement_std17 = interface(nsIDOMHTMLElement_std17)
  ['{a6cf908a-15b3-11d2-932e-00805f8add32}']
    function GetContent(aContent: nsAString): Longword; extdecl;
    function SetContent(const aContent: nsAString): Longword; extdecl;
    function GetHttpEquiv(aHttpEquiv: nsAString): Longword; extdecl;
    function SetHttpEquiv(const aHttpEquiv: nsAString): Longword; extdecl;
    function GetName(aName: nsAString): Longword; extdecl;
    function SetName(const aName: nsAString): Longword; extdecl;
    function GetScheme(aScheme: nsAString): Longword; extdecl;
    function SetScheme(const aScheme: nsAString): Longword; extdecl;
  end;

  nsIDOMHTMLModElement_std17 = interface(nsIDOMHTMLElement_std17)
  ['{a6cf90a9-15b3-11d2-932e-00805f8add32}']
    function GetCite(aCite: nsAString): Longword; extdecl;
    function SetCite(const aCite: nsAString): Longword; extdecl;
    function GetDateTime(aDateTime: nsAString): Longword; extdecl;
    function SetDateTime(const aDateTime: nsAString): Longword; extdecl;
  end;

  nsIDOMHTMLObjectElement_std17 = interface(nsIDOMHTMLElement_std17)
  ['{a6cf90ac-15b3-11d2-932e-00805f8add32}']
    function GetForm(out aForm: nsIDOMHTMLFormElement_std17): Longword; extdecl;
    function GetCode(aCode: nsAString): Longword; extdecl;
    function SetCode(const aCode: nsAString): Longword; extdecl;
    function GetAlign(aAlign: nsAString): Longword; extdecl;
    function SetAlign(const aAlign: nsAString): Longword; extdecl;
    function GetArchive(aArchive: nsAString): Longword; extdecl;
    function SetArchive(const aArchive: nsAString): Longword; extdecl;
    function GetBorder(aBorder: nsAString): Longword; extdecl;
    function SetBorder(const aBorder: nsAString): Longword; extdecl;
    function GetCodeBase(aCodeBase: nsAString): Longword; extdecl;
    function SetCodeBase(const aCodeBase: nsAString): Longword; extdecl;
    function GetCodeType(aCodeType: nsAString): Longword; extdecl;
    function SetCodeType(const aCodeType: nsAString): Longword; extdecl;
    function GetData(aData: nsAString): Longword; extdecl;
    function SetData(const aData: nsAString): Longword; extdecl;
    function GetDeclare(out aDeclare: PRBool): Longword; extdecl;
    function SetDeclare(aDeclare: PRBool): Longword; extdecl;
    function GetHeight(aHeight: nsAString): Longword; extdecl;
    function SetHeight(const aHeight: nsAString): Longword; extdecl;
    function GetHspace(out aHspace: PRInt32): Longword; extdecl;
    function SetHspace(aHspace: PRInt32): Longword; extdecl;
    function GetName(aName: nsAString): Longword; extdecl;
    function SetName(const aName: nsAString): Longword; extdecl;
    function GetStandby(aStandby: nsAString): Longword; extdecl;
    function SetStandby(const aStandby: nsAString): Longword; extdecl;
    function GetTabIndex(out aTabIndex: PRInt32): Longword; extdecl;
    function SetTabIndex(aTabIndex: PRInt32): Longword; extdecl;
    function GetType(aType: nsAString): Longword; extdecl;
    function SetType(const aType: nsAString): Longword; extdecl;
    function GetUseMap(aUseMap: nsAString): Longword; extdecl;
    function SetUseMap(const aUseMap: nsAString): Longword; extdecl;
    function GetVspace(out aVspace: PRInt32): Longword; extdecl;
    function SetVspace(aVspace: PRInt32): Longword; extdecl;
    function GetWidth(aWidth: nsAString): Longword; extdecl;
    function SetWidth(const aWidth: nsAString): Longword; extdecl;
    function GetContentDocument(out aContentDocument: nsIDOMDocument_std17): Longword; extdecl;
  end;

  nsIDOMHTMLOListElement_std17 = interface(nsIDOMHTMLElement_std17)
  ['{a6cf909a-15b3-11d2-932e-00805f8add32}']
    function GetCompact(out aCompact: PRBool): Longword; extdecl;
    function SetCompact(aCompact: PRBool): Longword; extdecl;
    function GetStart(out aStart: PRInt32): Longword; extdecl;
    function SetStart(aStart: PRInt32): Longword; extdecl;
    function GetType(aType: nsAString): Longword; extdecl;
    function SetType(const aType: nsAString): Longword; extdecl;
  end;

  nsIDOMHTMLOptGroupElement_std17 = interface(nsIDOMHTMLElement_std17)
  ['{a6cf9091-15b3-11d2-932e-00805f8add32}']
    function GetDisabled(out aDisabled: PRBool): Longword; extdecl;
    function SetDisabled(aDisabled: PRBool): Longword; extdecl;
    function GetLabel(aLabel: nsAString): Longword; extdecl;
    function SetLabel(const aLabel: nsAString): Longword; extdecl;
  end;

  nsIDOMHTMLOptionElement_std17 = interface(nsIDOMHTMLElement_std17)
  ['{a6cf9092-15b3-11d2-932e-00805f8add32}']
    function GetForm(out aForm: nsIDOMHTMLFormElement_std17): Longword; extdecl;
    function GetDefaultSelected(out aDefaultSelected: PRBool): Longword; extdecl;
    function SetDefaultSelected(aDefaultSelected: PRBool): Longword; extdecl;
    function GetText(aText: nsAString): Longword; extdecl;
    function GetIndex(out aIndex: PRInt32): Longword; extdecl;
    function GetDisabled(out aDisabled: PRBool): Longword; extdecl;
    function SetDisabled(aDisabled: PRBool): Longword; extdecl;
    function GetLabel(aLabel: nsAString): Longword; extdecl;
    function SetLabel(const aLabel: nsAString): Longword; extdecl;
    function GetSelected(out aSelected: PRBool): Longword; extdecl;
    function SetSelected(aSelected: PRBool): Longword; extdecl;
    function GetValue(aValue: nsAString): Longword; extdecl;
    function SetValue(const aValue: nsAString): Longword; extdecl;
  end;

  nsIDOMHTMLOptionsCollection_std17 = interface(nsISupports_std17)
  ['{bce0213c-f70f-488f-b93f-688acca55d63}']
    function GetLength(out aLength: PRUint32): Longword; extdecl;
    function SetLength(aLength: PRUint32): Longword; extdecl;
    function Item(index: PRUint32; out _retval: nsIDOMNode_std17): nsresult; extdecl;
    function NamedItem(const name: nsAString; out _retval: nsIDOMNode_std17): nsresult; extdecl;
  end;

  nsIDOMHTMLParagraphElement_std17 = interface(nsIDOMHTMLElement_std17)
  ['{a6cf90a1-15b3-11d2-932e-00805f8add32}']
    function GetAlign(aAlign: nsAString): Longword; extdecl;
    function SetAlign(const aAlign: nsAString): Longword; extdecl;
  end;

  nsIDOMHTMLParamElement_std17 = interface(nsIDOMHTMLElement_std17)
  ['{a6cf90ad-15b3-11d2-932e-00805f8add32}']
    function GetName(aName: nsAString): Longword; extdecl;
    function SetName(const aName: nsAString): Longword; extdecl;
    function GetType(aType: nsAString): Longword; extdecl;
    function SetType(const aType: nsAString): Longword; extdecl;
    function GetValue(aValue: nsAString): Longword; extdecl;
    function SetValue(const aValue: nsAString): Longword; extdecl;
    function GetValueType(aValueType: nsAString): Longword; extdecl;
    function SetValueType(const aValueType: nsAString): Longword; extdecl;
  end;

  nsIDOMHTMLPreElement_std17 = interface(nsIDOMHTMLElement_std17)
  ['{a6cf90a4-15b3-11d2-932e-00805f8add32}']
    function GetWidth(out aWidth: PRInt32): Longword; extdecl;
    function SetWidth(aWidth: PRInt32): Longword; extdecl;
  end;

  nsIDOMHTMLQuoteElement_std17 = interface(nsIDOMHTMLElement_std17)
  ['{a6cf90a3-15b3-11d2-932e-00805f8add32}']
    function GetCite(aCite: nsAString): Longword; extdecl;
    function SetCite(const aCite: nsAString): Longword; extdecl;
  end;

  nsIDOMHTMLScriptElement_std17 = interface(nsIDOMHTMLElement_std17)
  ['{a6cf90b1-15b3-11d2-932e-00805f8add32}']
    function GetText(aText: nsAString): Longword; extdecl;
    function SetText(const aText: nsAString): Longword; extdecl;
    function GetHtmlFor(aHtmlFor: nsAString): Longword; extdecl;
    function SetHtmlFor(const aHtmlFor: nsAString): Longword; extdecl;
    function GetEvent(aEvent: nsAString): Longword; extdecl;
    function SetEvent(const aEvent: nsAString): Longword; extdecl;
    function GetCharset(aCharset: nsAString): Longword; extdecl;
    function SetCharset(const aCharset: nsAString): Longword; extdecl;
    function GetDefer(out aDefer: PRBool): Longword; extdecl;
    function SetDefer(aDefer: PRBool): Longword; extdecl;
    function GetSrc(aSrc: nsAString): Longword; extdecl;
    function SetSrc(const aSrc: nsAString): Longword; extdecl;
    function GetType(aType: nsAString): Longword; extdecl;
    function SetType(const aType: nsAString): Longword; extdecl;
  end;

  nsIDOMHTMLSelectElement_std17 = interface(nsIDOMHTMLElement_std17)
  ['{a6cf9090-15b3-11d2-932e-00805f8add32}']
    function GetType(aType: nsAString): Longword; extdecl;
    function GetSelectedIndex(out aSelectedIndex: PRInt32): Longword; extdecl;
    function SetSelectedIndex(aSelectedIndex: PRInt32): Longword; extdecl;
    function GetValue(aValue: nsAString): Longword; extdecl;
    function SetValue(const aValue: nsAString): Longword; extdecl;
    function GetLength(out aLength: PRUint32): Longword; extdecl;
    function SetLength(aLength: PRUint32): Longword; extdecl;
    function GetForm(out aForm: nsIDOMHTMLFormElement_std17): Longword; extdecl;
    function GetOptions(out aOptions: nsIDOMHTMLOptionsCollection_std17): Longword; extdecl;
    function GetDisabled(out aDisabled: PRBool): Longword; extdecl;
    function SetDisabled(aDisabled: PRBool): Longword; extdecl;
    function GetMultiple(out aMultiple: PRBool): Longword; extdecl;
    function SetMultiple(aMultiple: PRBool): Longword; extdecl;
    function GetName(aName: nsAString): Longword; extdecl;
    function SetName(const aName: nsAString): Longword; extdecl;
    function GetSize(out aSize: PRInt32): Longword; extdecl;
    function SetSize(aSize: PRInt32): Longword; extdecl;
    function GetTabIndex(out aTabIndex: PRInt32): Longword; extdecl;
    function SetTabIndex(aTabIndex: PRInt32): Longword; extdecl;
    function Add(element: nsIDOMHTMLElement_std17; before: nsIDOMHTMLElement_std17): nsresult; extdecl;
    function Remove(index: PRInt32): nsresult; extdecl;
    function Blur(): nsresult; extdecl;
    function Focus(): nsresult; extdecl;
  end;

  nsIDOMHTMLStyleElement_std17 = interface(nsIDOMHTMLElement_std17)
  ['{a6cf908d-15b3-11d2-932e-00805f8add32}']
    function GetDisabled(out aDisabled: PRBool): Longword; extdecl;
    function SetDisabled(aDisabled: PRBool): Longword; extdecl;
    function GetMedia(aMedia: nsAString): Longword; extdecl;
    function SetMedia(const aMedia: nsAString): Longword; extdecl;
    function GetType(aType: nsAString): Longword; extdecl;
    function SetType(const aType: nsAString): Longword; extdecl;
  end;

  nsIDOMHTMLTableCaptionElement_std17 = interface(nsIDOMHTMLElement_std17)
  ['{a6cf90b3-15b3-11d2-932e-00805f8add32}']
    function GetAlign(aAlign: nsAString): Longword; extdecl;
    function SetAlign(const aAlign: nsAString): Longword; extdecl;
  end;

  nsIDOMHTMLTableCellElement_std17 = interface(nsIDOMHTMLElement_std17)
  ['{a6cf90b7-15b3-11d2-932e-00805f8add32}']
    function GetCellIndex(out aCellIndex: PRInt32): Longword; extdecl;
    function GetAbbr(aAbbr: nsAString): Longword; extdecl;
    function SetAbbr(const aAbbr: nsAString): Longword; extdecl;
    function GetAlign(aAlign: nsAString): Longword; extdecl;
    function SetAlign(const aAlign: nsAString): Longword; extdecl;
    function GetAxis(aAxis: nsAString): Longword; extdecl;
    function SetAxis(const aAxis: nsAString): Longword; extdecl;
    function GetBgColor(aBgColor: nsAString): Longword; extdecl;
    function SetBgColor(const aBgColor: nsAString): Longword; extdecl;
    function GetCh(aCh: nsAString): Longword; extdecl;
    function SetCh(const aCh: nsAString): Longword; extdecl;
    function GetChOff(aChOff: nsAString): Longword; extdecl;
    function SetChOff(const aChOff: nsAString): Longword; extdecl;
    function GetColSpan(out aColSpan: PRInt32): Longword; extdecl;
    function SetColSpan(aColSpan: PRInt32): Longword; extdecl;
    function GetHeaders(aHeaders: nsAString): Longword; extdecl;
    function SetHeaders(const aHeaders: nsAString): Longword; extdecl;
    function GetHeight(aHeight: nsAString): Longword; extdecl;
    function SetHeight(const aHeight: nsAString): Longword; extdecl;
    function GetNoWrap(out aNoWrap: PRBool): Longword; extdecl;
    function SetNoWrap(aNoWrap: PRBool): Longword; extdecl;
    function GetRowSpan(out aRowSpan: PRInt32): Longword; extdecl;
    function SetRowSpan(aRowSpan: PRInt32): Longword; extdecl;
    function GetScope(aScope: nsAString): Longword; extdecl;
    function SetScope(const aScope: nsAString): Longword; extdecl;
    function GetVAlign(aVAlign: nsAString): Longword; extdecl;
    function SetVAlign(const aVAlign: nsAString): Longword; extdecl;
    function GetWidth(aWidth: nsAString): Longword; extdecl;
    function SetWidth(const aWidth: nsAString): Longword; extdecl;
  end;

  nsIDOMHTMLTableColElement_std17 = interface(nsIDOMHTMLElement_std17)
  ['{a6cf90b4-15b3-11d2-932e-00805f8add32}']
    function GetAlign(aAlign: nsAString): Longword; extdecl;
    function SetAlign(const aAlign: nsAString): Longword; extdecl;
    function GetCh(aCh: nsAString): Longword; extdecl;
    function SetCh(const aCh: nsAString): Longword; extdecl;
    function GetChOff(aChOff: nsAString): Longword; extdecl;
    function SetChOff(const aChOff: nsAString): Longword; extdecl;
    function GetSpan(out aSpan: PRInt32): Longword; extdecl;
    function SetSpan(aSpan: PRInt32): Longword; extdecl;
    function GetVAlign(aVAlign: nsAString): Longword; extdecl;
    function SetVAlign(const aVAlign: nsAString): Longword; extdecl;
    function GetWidth(aWidth: nsAString): Longword; extdecl;
    function SetWidth(const aWidth: nsAString): Longword; extdecl;
  end;

  nsIDOMHTMLTableElement_std17 = interface(nsIDOMHTMLElement_std17)
  ['{a6cf90b2-15b3-11d2-932e-00805f8add32}']
    function GetCaption(out aCaption: nsIDOMHTMLTableCaptionElement_std17): Longword; extdecl;
    function SetCaption(aCaption: nsIDOMHTMLTableCaptionElement_std17): Longword; extdecl;
    function GetTHead(out aTHead: nsIDOMHTMLTableSectionElement_std17): Longword; extdecl;
    function SetTHead(aTHead: nsIDOMHTMLTableSectionElement_std17): Longword; extdecl;
    function GetTFoot(out aTFoot: nsIDOMHTMLTableSectionElement_std17): Longword; extdecl;
    function SetTFoot(aTFoot: nsIDOMHTMLTableSectionElement_std17): Longword; extdecl;
    function GetRows(out aRows: nsIDOMHTMLCollection_std17): Longword; extdecl;
    function GetTBodies(out aTBodies: nsIDOMHTMLCollection_std17): Longword; extdecl;
    function GetAlign(aAlign: nsAString): Longword; extdecl;
    function SetAlign(const aAlign: nsAString): Longword; extdecl;
    function GetBgColor(aBgColor: nsAString): Longword; extdecl;
    function SetBgColor(const aBgColor: nsAString): Longword; extdecl;
    function GetBorder(aBorder: nsAString): Longword; extdecl;
    function SetBorder(const aBorder: nsAString): Longword; extdecl;
    function GetCellPadding(aCellPadding: nsAString): Longword; extdecl;
    function SetCellPadding(const aCellPadding: nsAString): Longword; extdecl;
    function GetCellSpacing(aCellSpacing: nsAString): Longword; extdecl;
    function SetCellSpacing(const aCellSpacing: nsAString): Longword; extdecl;
    function GetFrame(aFrame: nsAString): Longword; extdecl;
    function SetFrame(const aFrame: nsAString): Longword; extdecl;
    function GetRules(aRules: nsAString): Longword; extdecl;
    function SetRules(const aRules: nsAString): Longword; extdecl;
    function GetSummary(aSummary: nsAString): Longword; extdecl;
    function SetSummary(const aSummary: nsAString): Longword; extdecl;
    function GetWidth(aWidth: nsAString): Longword; extdecl;
    function SetWidth(const aWidth: nsAString): Longword; extdecl;
    function CreateTHead(out _retval: nsIDOMHTMLElement_std17): nsresult; extdecl;
    function DeleteTHead(): nsresult; extdecl;
    function CreateTFoot(out _retval: nsIDOMHTMLElement_std17): nsresult; extdecl;
    function DeleteTFoot(): nsresult; extdecl;
    function CreateCaption(out _retval: nsIDOMHTMLElement_std17): nsresult; extdecl;
    function DeleteCaption(): nsresult; extdecl;
    function InsertRow(index: PRInt32; out _retval: nsIDOMHTMLElement_std17): nsresult; extdecl;
    function DeleteRow(index: PRInt32): nsresult; extdecl;
  end;

  nsIDOMHTMLTableRowElement_std17 = interface(nsIDOMHTMLElement_std17)
  ['{a6cf90b6-15b3-11d2-932e-00805f8add32}']
    function GetRowIndex(out aRowIndex: PRInt32): Longword; extdecl;
    function GetSectionRowIndex(out aSectionRowIndex: PRInt32): Longword; extdecl;
    function GetCells(out aCells: nsIDOMHTMLCollection_std17): Longword; extdecl;
    function GetAlign(aAlign: nsAString): Longword; extdecl;
    function SetAlign(const aAlign: nsAString): Longword; extdecl;
    function GetBgColor(aBgColor: nsAString): Longword; extdecl;
    function SetBgColor(const aBgColor: nsAString): Longword; extdecl;
    function GetCh(aCh: nsAString): Longword; extdecl;
    function SetCh(const aCh: nsAString): Longword; extdecl;
    function GetChOff(aChOff: nsAString): Longword; extdecl;
    function SetChOff(const aChOff: nsAString): Longword; extdecl;
    function GetVAlign(aVAlign: nsAString): Longword; extdecl;
    function SetVAlign(const aVAlign: nsAString): Longword; extdecl;
    function InsertCell(index: PRInt32; out _retval: nsIDOMHTMLElement_std17): nsresult; extdecl;
    function DeleteCell(index: PRInt32): nsresult; extdecl;
  end;

  nsIDOMHTMLTableSectionElement_std17 = interface(nsIDOMHTMLElement_std17)
  ['{a6cf90b5-15b3-11d2-932e-00805f8add32}']
    function GetAlign(aAlign: nsAString): Longword; extdecl;
    function SetAlign(const aAlign: nsAString): Longword; extdecl;
    function GetCh(aCh: nsAString): Longword; extdecl;
    function SetCh(const aCh: nsAString): Longword; extdecl;
    function GetChOff(aChOff: nsAString): Longword; extdecl;
    function SetChOff(const aChOff: nsAString): Longword; extdecl;
    function GetVAlign(aVAlign: nsAString): Longword; extdecl;
    function SetVAlign(const aVAlign: nsAString): Longword; extdecl;
    function GetRows(out aRows: nsIDOMHTMLCollection_std17): Longword; extdecl;
    function InsertRow(index: PRInt32; out _retval: nsIDOMHTMLElement_std17): nsresult; extdecl;
    function DeleteRow(index: PRInt32): nsresult; extdecl;
  end;

  nsIDOMHTMLTextAreaElement_std17 = interface(nsIDOMHTMLElement_std17)
  ['{a6cf9094-15b3-11d2-932e-00805f8add32}']
    function GetDefaultValue(aDefaultValue: nsAString): Longword; extdecl;
    function SetDefaultValue(const aDefaultValue: nsAString): Longword; extdecl;
    function GetForm(out aForm: nsIDOMHTMLFormElement_std17): Longword; extdecl;
    function GetAccessKey(aAccessKey: nsAString): Longword; extdecl;
    function SetAccessKey(const aAccessKey: nsAString): Longword; extdecl;
    function GetCols(out aCols: PRInt32): Longword; extdecl;
    function SetCols(aCols: PRInt32): Longword; extdecl;
    function GetDisabled(out aDisabled: PRBool): Longword; extdecl;
    function SetDisabled(aDisabled: PRBool): Longword; extdecl;
    function GetName(aName: nsAString): Longword; extdecl;
    function SetName(const aName: nsAString): Longword; extdecl;
    function GetReadOnly(out aReadOnly: PRBool): Longword; extdecl;
    function SetReadOnly(aReadOnly: PRBool): Longword; extdecl;
    function GetRows(out aRows: PRInt32): Longword; extdecl;
    function SetRows(aRows: PRInt32): Longword; extdecl;
    function GetTabIndex(out aTabIndex: PRInt32): Longword; extdecl;
    function SetTabIndex(aTabIndex: PRInt32): Longword; extdecl;
    function GetType(aType: nsAString): Longword; extdecl;
    function GetValue(aValue: nsAString): Longword; extdecl;
    function SetValue(const aValue: nsAString): Longword; extdecl;
    function Blur(): nsresult; extdecl;
    function Focus(): nsresult; extdecl;
    function Select(): nsresult; extdecl;
  end;

  nsIDOMHTMLTitleElement_std17 = interface(nsIDOMHTMLElement_std17)
  ['{a6cf9089-15b3-11d2-932e-00805f8add32}']
    function GetText(aText: nsAString): Longword; extdecl;
    function SetText(const aText: nsAString): Longword; extdecl;
  end;

  nsIDOMHTMLUListElement_std17 = interface(nsIDOMHTMLElement_std17)
  ['{a6cf9099-15b3-11d2-932e-00805f8add32}']
    function GetCompact(out aCompact: PRBool): Longword; extdecl;
    function SetCompact(aCompact: PRBool): Longword; extdecl;
    function GetType(aType: nsAString): Longword; extdecl;
    function SetType(const aType: nsAString): Longword; extdecl;
  end;

  nsIDOMMediaList_std17 = interface(nsISupports_std17)
  ['{9b0c2ed7-111c-4824-adf9-ef0da6dad371}']
    function GetMediaText(aMediaText: nsAString): Longword; extdecl;
    function SetMediaText(const aMediaText: nsAString): Longword; extdecl;
    function GetLength(out aLength: PRUint32): Longword; extdecl;
    function Item(index: PRUint32; _retval: nsAString): nsresult; extdecl;
    function DeleteMedium(const oldMedium: nsAString): nsresult; extdecl;
    function AppendMedium(const newMedium: nsAString): nsresult; extdecl;
  end;

  nsIDOMUIEvent_std17 = interface(nsIDOMEvent_std17)
  ['{a6cf90c3-15b3-11d2-932e-00805f8add32}']
    function GetView(out aView: nsIDOMAbstractView_std17): Longword; extdecl;
    function GetDetail(out aDetail: PRInt32): Longword; extdecl;
    function InitUIEvent(const typeArg: nsAString; canBubbleArg: PRBool; cancelableArg: PRBool; viewArg: nsIDOMAbstractView_std17; detailArg: PRInt32): nsresult; extdecl;
  end;

  nsIDOMMouseEvent_std17 = interface(nsIDOMUIEvent_std17)
  ['{ff751edc-8b02-aae7-0010-8301838a3123}']
    function GetScreenX(out aScreenX: PRInt32): Longword; extdecl;
    function GetScreenY(out aScreenY: PRInt32): Longword; extdecl;
    function GetClientX(out aClientX: PRInt32): Longword; extdecl;
    function GetClientY(out aClientY: PRInt32): Longword; extdecl;
    function GetCtrlKey(out aCtrlKey: PRBool): Longword; extdecl;
    function GetShiftKey(out aShiftKey: PRBool): Longword; extdecl;
    function GetAltKey(out aAltKey: PRBool): Longword; extdecl;
    function GetMetaKey(out aMetaKey: PRBool): Longword; extdecl;
    function GetButton(out aButton: PRUint16): Longword; extdecl;
    function GetRelatedTarget(out aRelatedTarget: nsIDOMEventTarget_std17): Longword; extdecl;
    function InitMouseEvent(const typeArg: nsAString; canBubbleArg: PRBool; cancelableArg: PRBool; viewArg: nsIDOMAbstractView_std17; detailArg: PRInt32; screenXArg: PRInt32; screenYArg: PRInt32; clientXArg: PRInt32; clientYArg: PRInt32; ctrlKeyArg: PRBool; altKeyArg: PRBool; shiftKeyArg: PRBool; metaKeyArg: PRBool; buttonArg: PRUint16; relatedTargetArg: nsIDOMEventTarget_std17): nsresult; extdecl;
  end;

  nsIDOMNamedNodeMap_std17 = interface(nsISupports_std17)
  ['{a6cf907b-15b3-11d2-932e-00805f8add32}']
    function GetNamedItem(const name: nsAString; out _retval: nsIDOMNode_std17): nsresult; extdecl;
    function SetNamedItem(arg: nsIDOMNode_std17; out _retval: nsIDOMNode_std17): nsresult; extdecl;
    function RemoveNamedItem(const name: nsAString; out _retval: nsIDOMNode_std17): nsresult; extdecl;
    function Item(index: PRUint32; out _retval: nsIDOMNode_std17): nsresult; extdecl;
    function GetLength(out aLength: PRUint32): Longword; extdecl;
    function GetNamedItemNS(const namespaceURI: nsAString; const localName: nsAString; out _retval: nsIDOMNode_std17): nsresult; extdecl;
    function SetNamedItemNS(arg: nsIDOMNode_std17; out _retval: nsIDOMNode_std17): nsresult; extdecl;
    function RemoveNamedItemNS(const namespaceURI: nsAString; const localName: nsAString; out _retval: nsIDOMNode_std17): nsresult; extdecl;
  end;

  nsIDOMNodeList_std17 = interface(nsISupports_std17)
  ['{a6cf907d-15b3-11d2-932e-00805f8add32}']
    function Item(index: PRUint32; out _retval: nsIDOMNode_std17): nsresult; extdecl;
    function GetLength(out aLength: PRUint32): Longword; extdecl;
  end;

  nsIDOMNotation_std17 = interface(nsIDOMNode_std17)
  ['{a6cf907e-15b3-11d2-932e-00805f8add32}']
    function GetPublicId(aPublicId: nsAString): Longword; extdecl;
    function GetSystemId(aSystemId: nsAString): Longword; extdecl;
  end;

  nsIDOMProcessingInstruction_std17 = interface(nsIDOMNode_std17)
  ['{a6cf907f-15b3-11d2-932e-00805f8add32}']
    function GetTarget(aTarget: nsAString): Longword; extdecl;
    function GetData(aData: nsAString): Longword; extdecl;
    function SetData(const aData: nsAString): Longword; extdecl;
  end;

  nsIDOMRange_std17 = interface(nsISupports_std17)
  ['{a6cf90ce-15b3-11d2-932e-00805f8add32}']
    function GetStartContainer(out aStartContainer: nsIDOMNode_std17): Longword; extdecl;
    function GetStartOffset(out aStartOffset: PRInt32): Longword; extdecl;
    function GetEndContainer(out aEndContainer: nsIDOMNode_std17): Longword; extdecl;
    function GetEndOffset(out aEndOffset: PRInt32): Longword; extdecl;
    function GetCollapsed(out aCollapsed: PRBool): Longword; extdecl;
    function GetCommonAncestorContainer(out aCommonAncestorContainer: nsIDOMNode_std17): Longword; extdecl;
    function SetStart(refNode: nsIDOMNode_std17; offset: PRInt32): nsresult; extdecl;
    function SetEnd(refNode: nsIDOMNode_std17; offset: PRInt32): nsresult; extdecl;
    function SetStartBefore(refNode: nsIDOMNode_std17): nsresult; extdecl;
    function SetStartAfter(refNode: nsIDOMNode_std17): nsresult; extdecl;
    function SetEndBefore(refNode: nsIDOMNode_std17): nsresult; extdecl;
    function SetEndAfter(refNode: nsIDOMNode_std17): nsresult; extdecl;
    function Collapse(toStart: PRBool): nsresult; extdecl;
    function SelectNode(refNode: nsIDOMNode_std17): nsresult; extdecl;
    function SelectNodeContents(refNode: nsIDOMNode_std17): nsresult; extdecl;
    function CompareBoundaryPoints(how: PRUint16; sourceRange: nsIDOMRange_std17; out _retval: PRInt16): nsresult; extdecl;
    function DeleteContents(): nsresult; extdecl;
    function ExtractContents(out _retval: nsIDOMDocumentFragment_std17): nsresult; extdecl;
    function CloneContents(out _retval: nsIDOMDocumentFragment_std17): nsresult; extdecl;
    function InsertNode(newNode: nsIDOMNode_std17): nsresult; extdecl;
    function SurroundContents(newParent: nsIDOMNode_std17): nsresult; extdecl;
    function CloneRange(out _retval: nsIDOMRange_std17): nsresult; extdecl;
    function ToString(_retval: nsAString): nsresult; extdecl;
    function Detach(): nsresult; extdecl;
  end;

  nsIDOMRect_std17 = interface(nsISupports_std17)
  ['{71735f62-ac5c-4236-9a1f-5ffb280d531c}']
    function GetTop(out aTop: nsIDOMCSSPrimitiveValue_std17): Longword; extdecl;
    function GetRight(out aRight: nsIDOMCSSPrimitiveValue_std17): Longword; extdecl;
    function GetBottom(out aBottom: nsIDOMCSSPrimitiveValue_std17): Longword; extdecl;
    function GetLeft(out aLeft: nsIDOMCSSPrimitiveValue_std17): Longword; extdecl;
  end;

  nsIDOMRGBColor_std17 = interface(nsISupports_std17)
  ['{6aff3102-320d-4986-9790-12316bb87cf9}']
    function GetRed(out aRed: nsIDOMCSSPrimitiveValue_std17): Longword; extdecl;
    function GetGreen(out aGreen: nsIDOMCSSPrimitiveValue_std17): Longword; extdecl;
    function GetBlue(out aBlue: nsIDOMCSSPrimitiveValue_std17): Longword; extdecl;
  end;

  nsIDOMStyleSheetList_std17 = interface(nsISupports_std17)
  ['{a6cf9081-15b3-11d2-932e-00805f8add32}']
    function GetLength(out aLength: PRUint32): Longword; extdecl;
    function Item(index: PRUint32; out _retval: nsIDOMStyleSheet_std17): nsresult; extdecl;
  end;

  nsIDOMWindow_std17 = interface(nsISupports_std17)
  ['{a6cf906b-15b3-11d2-932e-00805f8add32}']
    function GetDocument(out aDocument: nsIDOMDocument_std17): Longword; extdecl;
    function GetParent(out aParent: nsIDOMWindow_std17): Longword; extdecl;
    function GetTop(out aTop: nsIDOMWindow_std17): Longword; extdecl;
    function GetScrollbars(out aScrollbars: nsIDOMBarProp_std17): Longword; extdecl;
    function GetFrames(out aFrames: nsIDOMWindowCollection_std17): Longword; extdecl;
    function GetName(aName: nsAString): Longword; extdecl;
    function SetName(const aName: nsAString): Longword; extdecl;
    function GetTextZoom(out aTextZoom: Single): Longword; extdecl;
    function SetTextZoom(aTextZoom: Single): Longword; extdecl;
    function GetScrollX(out aScrollX: PRInt32): Longword; extdecl;
    function GetScrollY(out aScrollY: PRInt32): Longword; extdecl;
    function ScrollTo(xScroll: PRInt32; yScroll: PRInt32): nsresult; extdecl;
    function ScrollBy(xScrollDif: PRInt32; yScrollDif: PRInt32): nsresult; extdecl;
    function GetSelection(out _retval: nsISelection_std17): nsresult; extdecl;
    function ScrollByLines(numLines: PRInt32): nsresult; extdecl;
    function ScrollByPages(numPages: PRInt32): nsresult; extdecl;
    function SizeToContent(): nsresult; extdecl;
  end;

  nsIDOMWindow2_std17 = interface(nsIDOMWindow_std17)
  ['{65455132-b96a-40ec-adea-52fa22b1028c}']
    function GetWindowRoot(out aWindowRoot: nsIDOMEventTarget_std17): Longword; extdecl;
  end;

  nsIDOMWindowCollection_std17 = interface(nsISupports_std17)
  ['{a6cf906f-15b3-11d2-932e-00805f8add32}']
    function GetLength(out aLength: PRUint32): Longword; extdecl;
    function Item(index: PRUint32; out _retval: nsIDOMWindow_std17): nsresult; extdecl;
    function NamedItem(const name: nsAString; out _retval: nsIDOMWindow_std17): nsresult; extdecl;
  end;

  nsIEmbeddingSiteWindow_std17 = interface(nsISupports_std17)
  ['{3e5432cd-9568-4bd1-8cbe-d50aba110743}']
    function SetDimensions(flags: PRUint32; x: PRInt32; y: PRInt32; cx: PRInt32; cy: PRInt32): nsresult; extdecl;
    function GetDimensions(flags: PRUint32; out x: PRInt32; out y: PRInt32; out cx: PRInt32; out cy: PRInt32): nsresult; extdecl;
    function SetFocus(): nsresult; extdecl;
    function GetVisibility(out aVisibility: PRBool): Longword; extdecl;
    function SetVisibility(aVisibility: PRBool): Longword; extdecl;
    function GetTitle(out aTitle: PWideChar): Longword; extdecl;
    function SetTitle(const aTitle: PWideChar): Longword; extdecl;
    function GetSiteWindow(out aSiteWindow: Pointer): Longword; extdecl;
  end;

  nsIFactory_std17 = interface(nsISupports_std17)
  ['{00000001-0000-0000-c000-000000000046}']
    function CreateInstance(aOuter: nsISupports_std17; constref iid: TGUID; out _result): nsresult; extdecl;
    function LockFactory(lock: PRBool): nsresult; extdecl;
  end;

  nsIURI_std17 = interface(nsISupports_std17)
  ['{07a22cc0-0ce5-11d3-9331-00104ba0fd40}']
    function GetSpec(aSpec: nsACString): Longword; extdecl;
    function SetSpec(const aSpec: nsACString): Longword; extdecl;
    function GetPrePath(aPrePath: nsACString): Longword; extdecl;
    function GetScheme(aScheme: nsACString): Longword; extdecl;
    function SetScheme(const aScheme: nsACString): Longword; extdecl;
    function GetUserPass(aUserPass: nsACString): Longword; extdecl;
    function SetUserPass(const aUserPass: nsACString): Longword; extdecl;
    function GetUsername(aUsername: nsACString): Longword; extdecl;
    function SetUsername(const aUsername: nsACString): Longword; extdecl;
    function GetPassword(aPassword: nsACString): Longword; extdecl;
    function SetPassword(const aPassword: nsACString): Longword; extdecl;
    function GetHostPort(aHostPort: nsACString): Longword; extdecl;
    function SetHostPort(const aHostPort: nsACString): Longword; extdecl;
    function GetHost(aHost: nsACString): Longword; extdecl;
    function SetHost(const aHost: nsACString): Longword; extdecl;
    function GetPort(out aPort: PRInt32): Longword; extdecl;
    function SetPort(aPort: PRInt32): Longword; extdecl;
    function GetPath(aPath: nsACString): Longword; extdecl;
    function SetPath(const aPath: nsACString): Longword; extdecl;
    function Equals(other: nsIURI_std17; out _retval: PRBool): nsresult; extdecl;
    function SchemeIs(const scheme: PAnsiChar; out _retval: PRBool): nsresult; extdecl;
    function Clone(out _retval: nsIURI_std17): nsresult; extdecl;
    function Resolve(const relativePath: nsACString; _retval: nsACString): nsresult; extdecl;
    function GetAsciiSpec(aAsciiSpec: nsACString): Longword; extdecl;
    function GetAsciiHost(aAsciiHost: nsACString): Longword; extdecl;
    function GetOriginCharset(aOriginCharset: nsACString): Longword; extdecl;
  end;

  nsIURL_std17 = interface(nsIURI_std17)
  ['{d6116970-8034-11d3-9399-00104ba0fd40}']
    function GetFilePath(aFilePath: nsACString): Longword; extdecl;
    function SetFilePath(const aFilePath: nsACString): Longword; extdecl;
    function GetParam(aParam: nsACString): Longword; extdecl;
    function SetParam(const aParam: nsACString): Longword; extdecl;
    function GetQuery(aQuery: nsACString): Longword; extdecl;
    function SetQuery(const aQuery: nsACString): Longword; extdecl;
    function GetRef(aRef: nsACString): Longword; extdecl;
    function SetRef(const aRef: nsACString): Longword; extdecl;
    function GetDirectory(aDirectory: nsACString): Longword; extdecl;
    function SetDirectory(const aDirectory: nsACString): Longword; extdecl;
    function GetFileName(aFileName: nsACString): Longword; extdecl;
    function SetFileName(const aFileName: nsACString): Longword; extdecl;
    function GetFileBaseName(aFileBaseName: nsACString): Longword; extdecl;
    function SetFileBaseName(const aFileBaseName: nsACString): Longword; extdecl;
    function GetFileExtension(aFileExtension: nsACString): Longword; extdecl;
    function SetFileExtension(const aFileExtension: nsACString): Longword; extdecl;
    function GetCommonBaseSpec(aURIToCompare: nsIURI_std17; _retval: nsACString): nsresult; extdecl;
    function GetRelativeSpec(aURIToCompare: nsIURI_std17; _retval: nsACString): nsresult; extdecl;
  end;

  nsIFileURL_std17 = interface(nsIURL_std17)
  ['{d26b2e2e-1dd1-11b2-88f3-8545a7ba7949}']
    function GetFile(out aFile: nsIFile_std17): Longword; extdecl;
    function SetFile(aFile: nsIFile_std17): Longword; extdecl;
  end;

  nsIGlobalHistory_std17 = interface(nsISupports_std17)
  ['{9491c383-e3c4-11d2-bdbe-0050040a9b44}']
    function AddPage(const aURL: PAnsiChar): nsresult; extdecl;
    function IsVisited(const aURL: PAnsiChar; out _retval: PRBool): nsresult; extdecl;
  end;

  nsIHistoryEntry_std17 = interface(nsISupports_std17)
  ['{a41661d4-1417-11d5-9882-00c04fa02f40}']
    function GetURI(out aURI: nsIURI_std17): Longword; extdecl;
    function GetTitle(out aTitle: PWideChar): Longword; extdecl;
    function GetIsSubFrame(out aIsSubFrame: PRBool): Longword; extdecl;
  end;

  nsIHttpChannel_std17 = interface(nsIChannel_std17)
  ['{9277fe09-f0cc-4cd9-bbce-581dd94b0260}']
    function GetRequestMethod(aRequestMethod: nsACString): Longword; extdecl;
    function SetRequestMethod(const aRequestMethod: nsACString): Longword; extdecl;
    function GetReferrer(out aReferrer: nsIURI_std17): Longword; extdecl;
    function SetReferrer(aReferrer: nsIURI_std17): Longword; extdecl;
    function GetRequestHeader(const aHeader: nsACString; _retval: nsACString): nsresult; extdecl;
    function SetRequestHeader(const aHeader: nsACString; const aValue: nsACString; aMerge: PRBool): nsresult; extdecl;
    function VisitRequestHeaders(aVisitor: nsIHttpHeaderVisitor_std17): nsresult; extdecl;
    function GetAllowPipelining(out aAllowPipelining: PRBool): Longword; extdecl;
    function SetAllowPipelining(aAllowPipelining: PRBool): Longword; extdecl;
    function GetRedirectionLimit(out aRedirectionLimit: PRUint32): Longword; extdecl;
    function SetRedirectionLimit(aRedirectionLimit: PRUint32): Longword; extdecl;
    function GetResponseStatus(out aResponseStatus: PRUint32): Longword; extdecl;
    function GetResponseStatusText(aResponseStatusText: nsACString): Longword; extdecl;
    function GetRequestSucceeded(out aRequestSucceeded: PRBool): Longword; extdecl;
    function GetResponseHeader(const header: nsACString; _retval: nsACString): nsresult; extdecl;
    function SetResponseHeader(const header: nsACString; const value: nsACString; merge: PRBool): nsresult; extdecl;
    function VisitResponseHeaders(aVisitor: nsIHttpHeaderVisitor_std17): nsresult; extdecl;
    function IsNoStoreResponse(out _retval: PRBool): nsresult; extdecl;
    function IsNoCacheResponse(out _retval: PRBool): nsresult; extdecl;
  end;

  nsIHttpHeaderVisitor_std17 = interface(nsISupports_std17)
  ['{0cf40717-d7c1-4a94-8c1e-d6c9734101bb}']
    function VisitHeader(const aHeader: nsACString; const aValue: nsACString): nsresult; extdecl;
  end;

  nsIInputStream_std17 = interface(nsISupports_std17)
  ['{fa9c7f6c-61b3-11d4-9877-00c04fa0cf4a}']
    function Close(): nsresult; extdecl;
    function Available(out _retval: PRUint32): nsresult; extdecl;
    function Read(aBuf: Pchar; aCount: PRUint32; out _retval: PRUint32): nsresult; extdecl;
    function ReadSegments(aWriter: nsWriteSegmentFun; aClosure: Pointer; aCount: PRUint32; out _retval: PRUint32): nsresult; extdecl;
    function IsNonBlocking(out _retval: PRBool): nsresult; extdecl;
  end;

  nsIInterfaceRequestor_std17 = interface(nsISupports_std17)
  ['{033a1470-8b2a-11d3-af88-00a024ffc08c}']
    function GetInterface(constref uuid: TGUID; out _result): nsresult; extdecl;
  end;

  nsIIOService_std17 = interface(nsISupports_std17)
  ['{bddeda3f-9020-4d12-8c70-984ee9f7935e}']
    function GetProtocolHandler(const aScheme: PAnsiChar; out _retval: nsIProtocolHandler_std17): nsresult; extdecl;
    function GetProtocolFlags(const aScheme: PAnsiChar; out _retval: PRUint32): nsresult; extdecl;
    function NewURI(const aSpec: nsACString; const aOriginCharset: PAnsiChar; aBaseURI: nsIURI_std17; out _retval: nsIURI_std17): nsresult; extdecl;
    function NewFileURI(aFile: nsIFile_std17; out _retval: nsIURI_std17): nsresult; extdecl;
    function NewChannelFromURI(aURI: nsIURI_std17; out _retval: nsIChannel_std17): nsresult; extdecl;
    function NewChannel(const aSpec: nsACString; const aOriginCharset: PAnsiChar; aBaseURI: nsIURI_std17; out _retval: nsIChannel_std17): nsresult; extdecl;
    function GetOffline(out aOffline: PRBool): Longword; extdecl;
    function SetOffline(aOffline: PRBool): Longword; extdecl;
    function AllowPort(aPort: PRInt32; const aScheme: PAnsiChar; out _retval: PRBool): nsresult; extdecl;
    function ExtractScheme(const urlString: nsACString; _retval: nsACString): nsresult; extdecl;
  end;

  nsILoadGroup_std17 = interface(nsIRequest_std17)
  ['{3de0a31c-feaf-400f-9f1e-4ef71f8b20cc}']
    function GetGroupObserver(out aGroupObserver: nsIRequestObserver_std17): Longword; extdecl;
    function SetGroupObserver(aGroupObserver: nsIRequestObserver_std17): Longword; extdecl;
    function GetDefaultLoadRequest(out aDefaultLoadRequest: nsIRequest_std17): Longword; extdecl;
    function SetDefaultLoadRequest(aDefaultLoadRequest: nsIRequest_std17): Longword; extdecl;
    function AddRequest(aRequest: nsIRequest_std17; aContext: nsISupports_std17): nsresult; extdecl;
    function RemoveRequest(aRequest: nsIRequest_std17; aContext: nsISupports_std17; aStatus: nsresult): nsresult; extdecl;
    function GetRequests(out aRequests: nsISimpleEnumerator_std17): Longword; extdecl;
    function GetActiveCount(out aActiveCount: PRUint32): Longword; extdecl;
    function GetNotificationCallbacks(out aNotificationCallbacks: nsIInterfaceRequestor_std17): Longword; extdecl;
    function SetNotificationCallbacks(aNotificationCallbacks: nsIInterfaceRequestor_std17): Longword; extdecl;
  end;

  nsILocalFile_std17 = interface(nsIFile_std17)
  ['{aa610f20-a889-11d3-8c81-000064657374}']
    function InitWithPath(const filePath: nsAString): nsresult; extdecl;
    function InitWithNativePath(const filePath: nsACString): nsresult; extdecl;
    function InitWithFile(aFile: nsILocalFile_std17): nsresult; extdecl;
    function GetFollowLinks(out aFollowLinks: PRBool): Longword; extdecl;
    function SetFollowLinks(aFollowLinks: PRBool): Longword; extdecl;
    function OpenNSPRFileDesc(flags: PRInt32; mode: PRInt32; out _retval: PPRFileDesc): nsresult; extdecl;
    function OpenANSIFileDesc(const mode: PAnsiChar; out _retval: PFILE): nsresult; extdecl;
    function Load(out _retval: PPRLibrary): nsresult; extdecl;
    function GetDiskSpaceAvailable(out aDiskSpaceAvailable: PRInt64): Longword; extdecl;
    function AppendRelativePath(const relativeFilePath: nsAString): nsresult; extdecl;
    function AppendRelativeNativePath(const relativeFilePath: nsACString): nsresult; extdecl;
    function GetPersistentDescriptor(aPersistentDescriptor: nsACString): Longword; extdecl;
    function SetPersistentDescriptor(const aPersistentDescriptor: nsACString): Longword; extdecl;
    function Reveal(): nsresult; extdecl;
    function Launch(): nsresult; extdecl;
    function GetRelativeDescriptor(fromFile: nsILocalFile_std17; _retval: nsACString): nsresult; extdecl;
    function SetRelativeDescriptor(fromFile: nsILocalFile_std17; const relativeDesc: nsACString): nsresult; extdecl;
  end;

  nsIMemory_std17 = interface(nsISupports_std17)
  ['{59e7e77a-38e4-11d4-8cf5-0060b0fc14a3}']
    function Alloc(size: size_t): Pointer; extdecl;
    function Realloc(ptr: Pointer; newSize: size_t): Pointer; extdecl;
    procedure Free(ptr: Pointer); extdecl;
    function HeapMinimize(immediate: PRBool): nsresult; extdecl;
    function IsLowMemory(out _retval: PRBool): nsresult; extdecl;
  end;

  nsIModule_std17 = interface(nsISupports_std17)
  ['{7392d032-5371-11d3-994e-00805fd26fee}']
    function GetClassObject(aCompMgr: nsIComponentManager_std17; constref aClass: TGUID; constref aIID: TGUID; out aResult): nsresult; extdecl;
    function RegisterSelf(aCompMgr: nsIComponentManager_std17; aLocation: nsIFile_std17; const aLoaderStr: PAnsiChar; const aType: PAnsiChar): nsresult; extdecl;
    function UnregisterSelf(aCompMgr: nsIComponentManager_std17; aLocation: nsIFile_std17; const aLoaderStr: PAnsiChar): nsresult; extdecl;
    function CanUnload(aCompMgr: nsIComponentManager_std17; out _retval: PRBool): nsresult; extdecl;
  end;

  nsIObserver_std17 = interface(nsISupports_std17)
  ['{db242e01-e4d9-11d2-9dde-000064657374}']
    function Observe(aSubject: nsISupports_std17; const aTopic: PAnsiChar; const aData: PWideChar): nsresult; extdecl;
  end;

  nsIObserverService_std17 = interface(nsISupports_std17)
  ['{d07f5192-e3d1-11d2-8acd-00105a1b8860}']
    function AddObserver(anObserver: nsIObserver_std17; const aTopic: PAnsiChar; ownsWeak: PRBool): nsresult; extdecl;
    function RemoveObserver(anObserver: nsIObserver_std17; const aTopic: PAnsiChar): nsresult; extdecl;
    function NotifyObservers(aSubject: nsISupports_std17; const aTopic: PAnsiChar; const someData: PWideChar): nsresult; extdecl;
    function EnumerateObservers(const aTopic: PAnsiChar; out _retval: nsISimpleEnumerator_std17): nsresult; extdecl;
  end;

  nsIOutputStream_std17 = interface(nsISupports_std17)
  ['{0d0acd2a-61b4-11d4-9877-00c04fa0cf4a}']
    function Close(): nsresult; extdecl;
    function Flush(): nsresult; extdecl;
    function Write(const aBuf: PAnsiChar; aCount: PRUint32; out _retval: PRUint32): nsresult; extdecl;
    function WriteFrom(aFromStream: nsIInputStream_std17; aCount: PRUint32; out _retval: PRUint32): nsresult; extdecl;
    function WriteSegments(aReader: nsReadSegmentFun; aClosure: Pointer; aCount: PRUint32; out _retval: PRUint32): nsresult; extdecl;
    function IsNonBlocking(out _retval: PRBool): nsresult; extdecl;
  end;

  nsIPassword_std17 = interface(nsISupports_std17)
  ['{cf39c2b0-1e4b-11d5-a549-0010a401eb10}']
    function GetHost(aHost: nsACString): Longword; extdecl;
    function GetUser(aUser: nsAString): Longword; extdecl;
    function GetPassword(aPassword: nsAString): Longword; extdecl;
  end;

  nsIPrefBranch_std17 = interface(nsISupports_std17)
  ['{56c35506-f14b-11d3-99d3-ddbfac2ccf65}']
    function GetRoot(out aRoot: PAnsiChar): Longword; extdecl;
    function GetPrefType(const aPrefName: PAnsiChar; out _retval: PRInt32): nsresult; extdecl;
    function GetBoolPref(const aPrefName: PAnsiChar; out _retval: PRBool): nsresult; extdecl;
    function SetBoolPref(const aPrefName: PAnsiChar; aValue: PRInt32): nsresult; extdecl;
    function GetCharPref(const aPrefName: PAnsiChar; out _retval: PAnsiChar): nsresult; extdecl;
    function SetCharPref(const aPrefName: PAnsiChar; const aValue: PAnsiChar): nsresult; extdecl;
    function GetIntPref(const aPrefName: PAnsiChar; out _retval: PRInt32): nsresult; extdecl;
    function SetIntPref(const aPrefName: PAnsiChar; aValue: PRInt32): nsresult; extdecl;
    function GetComplexValue(const aPrefName: PAnsiChar; constref aType: TGUID; out aValue): nsresult; extdecl;
    function SetComplexValue(const aPrefName: PAnsiChar; constref aType: TGUID; aValue: nsISupports_std17): nsresult; extdecl;
    function ClearUserPref(const aPrefName: PAnsiChar): nsresult; extdecl;
    function LockPref(const aPrefName: PAnsiChar): nsresult; extdecl;
    function PrefHasUserValue(const aPrefName: PAnsiChar; out _retval: PRBool): nsresult; extdecl;
    function PrefIsLocked(const aPrefName: PAnsiChar; out _retval: PRBool): nsresult; extdecl;
    function UnlockPref(const aPrefName: PAnsiChar): nsresult; extdecl;
    function DeleteBranch(const aStartingAt: PAnsiChar): nsresult; extdecl;
    function GetChildList(const aStartingAt: PAnsiChar; out aCount: PRUint32; out aChildArray_array): nsresult; extdecl;
    function ResetBranch(const aStartingAt: PAnsiChar): nsresult; extdecl;
  end;

  nsIPrefLocalizedString_std17 = interface(nsISupports_std17)
  ['{ae419e24-1dd1-11b2-b39a-d3e5e7073802}']
    function GetData(out aData: PWideChar): Longword; extdecl;
    function SetData(const aData: PWideChar): Longword; extdecl;
    function ToString(out _retval: PWideChar): nsresult; extdecl;
    function SetDataWithLength(length: PRUint32; const data: PWideChar): nsresult; extdecl;
  end;

  nsIPrefService_std17 = interface(nsISupports_std17)
  ['{decb9cc7-c08f-4ea5-be91-a8fc637ce2d2}']
    function ReadUserPrefs(aFile: nsIFile_std17): nsresult; extdecl;
    function ResetPrefs(): nsresult; extdecl;
    function ResetUserPrefs(): nsresult; extdecl;
    function SavePrefFile(aFile: nsIFile_std17): nsresult; extdecl;
    function GetBranch(const aPrefRoot: PAnsiChar; out _retval: nsIPrefBranch_std17): nsresult; extdecl;
    function GetDefaultBranch(const aPrefRoot: PAnsiChar; out _retval: nsIPrefBranch_std17): nsresult; extdecl;
  end;

  nsIPrintSession_std17 = interface(nsISupports_std17)
  ['{2f977d52-5485-11d4-87e2-0010a4e75ef2}']
  end;

  nsIPrintSettings_std17 = interface(nsISupports_std17)
  ['{83427530-f790-11d4-a869-00105a183419}']
    function SetPrintOptions(aType: PRInt32; aTurnOnOff: PRBool): nsresult; extdecl;
    function GetPrintOptions(aType: PRInt32; out _retval: PRBool): nsresult; extdecl;
    function GetPrintOptionsBits(out _retval: PRInt32): nsresult; extdecl;
    function GetPageSizeInTwips(out aWidth: PRInt32; out aHeight: PRInt32): nsresult; extdecl;
    function Clone(out _retval: nsIPrintSettings_std17): nsresult; extdecl;
    function Assign(aPS: nsIPrintSettings_std17): nsresult; extdecl;
    function GetPrintSession(out aPrintSession: nsIPrintSession_std17): Longword; extdecl;
    function SetPrintSession(aPrintSession: nsIPrintSession_std17): Longword; extdecl;
    function GetStartPageRange(out aStartPageRange: PRInt32): Longword; extdecl;
    function SetStartPageRange(aStartPageRange: PRInt32): Longword; extdecl;
    function GetEndPageRange(out aEndPageRange: PRInt32): Longword; extdecl;
    function SetEndPageRange(aEndPageRange: PRInt32): Longword; extdecl;
    function GetMarginTop(out aMarginTop: Double): Longword; extdecl;
    function SetMarginTop(aMarginTop: Double): Longword; extdecl;
    function GetMarginLeft(out aMarginLeft: Double): Longword; extdecl;
    function SetMarginLeft(aMarginLeft: Double): Longword; extdecl;
    function GetMarginBottom(out aMarginBottom: Double): Longword; extdecl;
    function SetMarginBottom(aMarginBottom: Double): Longword; extdecl;
    function GetMarginRight(out aMarginRight: Double): Longword; extdecl;
    function SetMarginRight(aMarginRight: Double): Longword; extdecl;
    function GetScaling(out aScaling: Double): Longword; extdecl;
    function SetScaling(aScaling: Double): Longword; extdecl;
    function GetPrintBGColors(out aPrintBGColors: PRBool): Longword; extdecl;
    function SetPrintBGColors(aPrintBGColors: PRBool): Longword; extdecl;
    function GetPrintBGImages(out aPrintBGImages: PRBool): Longword; extdecl;
    function SetPrintBGImages(aPrintBGImages: PRBool): Longword; extdecl;
    function GetPrintRange(out aPrintRange: PRInt16): Longword; extdecl;
    function SetPrintRange(aPrintRange: PRInt16): Longword; extdecl;
    function GetTitle(out aTitle: PWideChar): Longword; extdecl;
    function SetTitle(const aTitle: PWideChar): Longword; extdecl;
    function GetDocURL(out aDocURL: PWideChar): Longword; extdecl;
    function SetDocURL(const aDocURL: PWideChar): Longword; extdecl;
    function GetHeaderStrLeft(out aHeaderStrLeft: PWideChar): Longword; extdecl;
    function SetHeaderStrLeft(const aHeaderStrLeft: PWideChar): Longword; extdecl;
    function GetHeaderStrCenter(out aHeaderStrCenter: PWideChar): Longword; extdecl;
    function SetHeaderStrCenter(const aHeaderStrCenter: PWideChar): Longword; extdecl;
    function GetHeaderStrRight(out aHeaderStrRight: PWideChar): Longword; extdecl;
    function SetHeaderStrRight(const aHeaderStrRight: PWideChar): Longword; extdecl;
    function GetFooterStrLeft(out aFooterStrLeft: PWideChar): Longword; extdecl;
    function SetFooterStrLeft(const aFooterStrLeft: PWideChar): Longword; extdecl;
    function GetFooterStrCenter(out aFooterStrCenter: PWideChar): Longword; extdecl;
    function SetFooterStrCenter(const aFooterStrCenter: PWideChar): Longword; extdecl;
    function GetFooterStrRight(out aFooterStrRight: PWideChar): Longword; extdecl;
    function SetFooterStrRight(const aFooterStrRight: PWideChar): Longword; extdecl;
    function GetHowToEnableFrameUI(out aHowToEnableFrameUI: PRInt16): Longword; extdecl;
    function SetHowToEnableFrameUI(aHowToEnableFrameUI: PRInt16): Longword; extdecl;
    function GetIsCancelled(out aIsCancelled: PRBool): Longword; extdecl;
    function SetIsCancelled(aIsCancelled: PRBool): Longword; extdecl;
    function GetPrintFrameTypeUsage(out aPrintFrameTypeUsage: PRInt16): Longword; extdecl;
    function SetPrintFrameTypeUsage(aPrintFrameTypeUsage: PRInt16): Longword; extdecl;
    function GetPrintFrameType(out aPrintFrameType: PRInt16): Longword; extdecl;
    function SetPrintFrameType(aPrintFrameType: PRInt16): Longword; extdecl;
    function GetPrintSilent(out aPrintSilent: PRBool): Longword; extdecl;
    function SetPrintSilent(aPrintSilent: PRBool): Longword; extdecl;
    function GetShrinkToFit(out aShrinkToFit: PRBool): Longword; extdecl;
    function SetShrinkToFit(aShrinkToFit: PRBool): Longword; extdecl;
    function GetShowPrintProgress(out aShowPrintProgress: PRBool): Longword; extdecl;
    function SetShowPrintProgress(aShowPrintProgress: PRBool): Longword; extdecl;
    function GetPaperName(out aPaperName: PWideChar): Longword; extdecl;
    function SetPaperName(const aPaperName: PWideChar): Longword; extdecl;
    function GetPaperSizeType(out aPaperSizeType: PRInt16): Longword; extdecl;
    function SetPaperSizeType(aPaperSizeType: PRInt16): Longword; extdecl;
    function GetPaperData(out aPaperData: PRInt16): Longword; extdecl;
    function SetPaperData(aPaperData: PRInt16): Longword; extdecl;
    function GetPaperWidth(out aPaperWidth: Double): Longword; extdecl;
    function SetPaperWidth(aPaperWidth: Double): Longword; extdecl;
    function GetPaperHeight(out aPaperHeight: Double): Longword; extdecl;
    function SetPaperHeight(aPaperHeight: Double): Longword; extdecl;
    function GetPaperSizeUnit(out aPaperSizeUnit: PRInt16): Longword; extdecl;
    function SetPaperSizeUnit(aPaperSizeUnit: PRInt16): Longword; extdecl;
    function GetPlexName(out aPlexName: PWideChar): Longword; extdecl;
    function SetPlexName(const aPlexName: PWideChar): Longword; extdecl;
    function GetPrintReversed(out aPrintReversed: PRBool): Longword; extdecl;
    function SetPrintReversed(aPrintReversed: PRBool): Longword; extdecl;
    function GetPrintInColor(out aPrintInColor: PRBool): Longword; extdecl;
    function SetPrintInColor(aPrintInColor: PRBool): Longword; extdecl;
    function GetPaperSize(out aPaperSize: PRInt32): Longword; extdecl;
    function SetPaperSize(aPaperSize: PRInt32): Longword; extdecl;
    function GetOrientation(out aOrientation: PRInt32): Longword; extdecl;
    function SetOrientation(aOrientation: PRInt32): Longword; extdecl;
    function GetPrintCommand(out aPrintCommand: PWideChar): Longword; extdecl;
    function SetPrintCommand(const aPrintCommand: PWideChar): Longword; extdecl;
    function GetNumCopies(out aNumCopies: PRInt32): Longword; extdecl;
    function SetNumCopies(aNumCopies: PRInt32): Longword; extdecl;
    function GetPrinterName(out aPrinterName: PWideChar): Longword; extdecl;
    function SetPrinterName(const aPrinterName: PWideChar): Longword; extdecl;
    function GetPrintToFile(out aPrintToFile: PRBool): Longword; extdecl;
    function SetPrintToFile(aPrintToFile: PRBool): Longword; extdecl;
    function GetToFileName(out aToFileName: PWideChar): Longword; extdecl;
    function SetToFileName(const aToFileName: PWideChar): Longword; extdecl;
    function GetPrintPageDelay(out aPrintPageDelay: PRInt32): Longword; extdecl;
    function SetPrintPageDelay(aPrintPageDelay: PRInt32): Longword; extdecl;
    function GetIsInitializedFromPrinter(out aIsInitializedFromPrinter: PRBool): Longword; extdecl;
    function SetIsInitializedFromPrinter(aIsInitializedFromPrinter: PRBool): Longword; extdecl;
    function GetIsInitializedFromPrefs(out aIsInitializedFromPrefs: PRBool): Longword; extdecl;
    function SetIsInitializedFromPrefs(aIsInitializedFromPrefs: PRBool): Longword; extdecl;
    function SetMarginInTwips(var aMargin: nsMargin): nsresult; extdecl;
    function GetMarginInTwips(var aMargin: nsMargin): nsresult; extdecl;
  end;

  nsIProfile_std17 = interface(nsISupports_std17)
  ['{02b0625a-e7f3-11d2-9f5a-006008a6efe9}']
    function GetProfileCount(out aProfileCount: PRInt32): Longword; extdecl;
    function GetProfileList(out length: PRUint32; out profileNames_array): nsresult; extdecl;
    function ProfileExists(const profileName: PWideChar; out _retval: PRBool): nsresult; extdecl;
    function GetCurrentProfile(out aCurrentProfile: PWideChar): Longword; extdecl;
    function SetCurrentProfile(const aCurrentProfile: PWideChar): Longword; extdecl;
    function ShutDownCurrentProfile(shutDownType: PRUint32): nsresult; extdecl;
    function CreateNewProfile(const profileName: PWideChar; const nativeProfileDir: PWideChar; const langcode: PWideChar; useExistingDir: PRBool): nsresult; extdecl;
    function RenameProfile(const oldName: PWideChar; const newName: PWideChar): nsresult; extdecl;
    function DeleteProfile(const name: PWideChar; canDeleteFiles: PRBool): nsresult; extdecl;
    function CloneProfile(const profileName: PWideChar): nsresult; extdecl;
  end;

  nsIProfileChangeStatus_std17 = interface(nsISupports_std17)
  ['{2f977d43-5485-11d4-87e2-0010a4e75ef2}']
    function VetoChange(): nsresult; extdecl;
    function ChangeFailed(): nsresult; extdecl;
  end;

  nsIPrompt_std17 = interface(nsISupports_std17)
  ['{a63f70c0-148b-11d3-9333-00104ba0fd40}']
    function Alert(const dialogTitle: PWideChar; const text: PWideChar): nsresult; extdecl;
    function AlertCheck(const dialogTitle: PWideChar; const text: PWideChar; const checkMsg: PWideChar; out checkValue: PRBool): nsresult; extdecl;
    function Confirm(const dialogTitle: PWideChar; const text: PWideChar; out _retval: PRBool): nsresult; extdecl;
    function ConfirmCheck(const dialogTitle: PWideChar; const text: PWideChar; const checkMsg: PWideChar; out checkValue: PRBool; out _retval: PRBool): nsresult; extdecl;
    function ConfirmEx(const dialogTitle: PWideChar; const text: PWideChar; buttonFlags: PRUint32; const button0Title: PWideChar; const button1Title: PWideChar; const button2Title: PWideChar; const checkMsg: PWideChar; out checkValue: PRBool; out _retval: PRInt32): nsresult; extdecl;
    function Prompt(const dialogTitle: PWideChar; const text: PWideChar; out value: PWideChar; const checkMsg: PWideChar; out checkValue: PRBool; out _retval: PRBool): nsresult; extdecl;
    function PromptPassword(const dialogTitle: PWideChar; const text: PWideChar; out password: PWideChar; const checkMsg: PWideChar; out checkValue: PRBool; out _retval: PRBool): nsresult; extdecl;
    function PromptUsernameAndPassword(const dialogTitle: PWideChar; const text: PWideChar; out username: PWideChar; out password: PWideChar; const checkMsg: PWideChar; out checkValue: PRBool; out _retval: PRBool): nsresult; extdecl;
    function Select(const dialogTitle: PWideChar; const text: PWideChar; count: PRUint32; const selectList_array; out outSelection: PRInt32; out _retval: PRBool): nsresult; extdecl;
  end;

  nsIPromptService_std17 = interface(nsISupports_std17)
  ['{1630c61a-325e-49ca-8759-a31b16c47aa5}']
    function Alert(aParent: nsIDOMWindow_std17; const aDialogTitle: PWideChar; const aText: PWideChar): nsresult; extdecl;
    function AlertCheck(aParent: nsIDOMWindow_std17; const aDialogTitle: PWideChar; const aText: PWideChar; const aCheckMsg: PWideChar; out aCheckState: PRBool): nsresult; extdecl;
    function Confirm(aParent: nsIDOMWindow_std17; const aDialogTitle: PWideChar; const aText: PWideChar; out _retval: PRBool): nsresult; extdecl;
    function ConfirmCheck(aParent: nsIDOMWindow_std17; const aDialogTitle: PWideChar; const aText: PWideChar; const aCheckMsg: PWideChar; out aCheckState: PRBool; out _retval: PRBool): nsresult; extdecl;
    function ConfirmEx(aParent: nsIDOMWindow_std17; const aDialogTitle: PWideChar; const aText: PWideChar; aButtonFlags: PRUint32; const aButton0Title: PWideChar; const aButton1Title: PWideChar; const aButton2Title: PWideChar; const aCheckMsg: PWideChar; out aCheckState: PRBool; out _retval: PRInt32): nsresult; extdecl;
    function Prompt(aParent: nsIDOMWindow_std17; const aDialogTitle: PWideChar; const aText: PWideChar; out aValue: PWideChar; const aCheckMsg: PWideChar; out aCheckState: PRBool; out _retval: PRBool): nsresult; extdecl;
    function PromptUsernameAndPassword(aParent: nsIDOMWindow_std17; const aDialogTitle: PWideChar; const aText: PWideChar; out aUsername: PWideChar; out aPassword: PWideChar; const aCheckMsg: PWideChar; out aCheckState: PRBool; out _retval: PRBool): nsresult; extdecl;
    function PromptPassword(aParent: nsIDOMWindow_std17; const aDialogTitle: PWideChar; const aText: PWideChar; out aPassword: PWideChar; const aCheckMsg: PWideChar; out aCheckState: PRBool; out _retval: PRBool): nsresult; extdecl;
    function Select(aParent: nsIDOMWindow_std17; const aDialogTitle: PWideChar; const aText: PWideChar; aCount: PRUint32; const aSelectList_array; out aOutSelection: PRInt32; out _retval: PRBool): nsresult; extdecl;
  end;

  nsIProperties_std17 = interface(nsISupports_std17)
  ['{78650582-4e93-4b60-8e85-26ebd3eb14ca}']
    function Get(const prop: PAnsiChar; constref iid: TGUID; out _result): nsresult; extdecl;
    function _Set(const prop: PAnsiChar; value: nsISupports_std17): nsresult; extdecl;
    function Has(const prop: PAnsiChar; out _retval: PRBool): nsresult; extdecl;
    function Undefine(const prop: PAnsiChar): nsresult; extdecl;
    function GetKeys(out count: PRUint32; out keys_array): nsresult; extdecl;
  end;

  nsIProtocolHandler_std17 = interface(nsISupports_std17)
  ['{15fd6940-8ea7-11d3-93ad-00104ba0fd40}']
    function GetScheme(aScheme: nsACString): Longword; extdecl;
    function GetDefaultPort(out aDefaultPort: PRInt32): Longword; extdecl;
    function GetProtocolFlags(out aProtocolFlags: PRUint32): Longword; extdecl;
    function NewURI(const aSpec: nsACString; const aOriginCharset: PAnsiChar; aBaseURI: nsIURI_std17; out _retval: nsIURI_std17): nsresult; extdecl;
    function NewChannel(aURI: nsIURI_std17; out _retval: nsIChannel_std17): nsresult; extdecl;
    function AllowPort(port: PRInt32; const scheme: PAnsiChar; out _retval: PRBool): nsresult; extdecl;
  end;

  nsIRequestObserver_std17 = interface(nsISupports_std17)
  ['{fd91e2e0-1481-11d3-9333-00104ba0fd40}']
    function OnStartRequest(aRequest: nsIRequest_std17; aContext: nsISupports_std17): nsresult; extdecl;
    function OnStopRequest(aRequest: nsIRequest_std17; aContext: nsISupports_std17; aStatusCode: nsresult): nsresult; extdecl;
  end;

  nsIScriptableInputStream_std17 = interface(nsISupports_std17)
  ['{a2a32f90-9b90-11d3-a189-0050041caf44}']
    function Close(): nsresult; extdecl;
    function Init(aInputStream: nsIInputStream_std17): nsresult; extdecl;
    function Available(out _retval: PRUint32): nsresult; extdecl;
    function Read(aCount: PRUint32; out _retval: PAnsiChar): nsresult; extdecl;
  end;

  nsISecurityWarningDialogs_std17 = interface(nsISupports_std17)
  ['{1c399d06-1dd2-11b2-bc58-c87cbcacdb78}']
    function ConfirmEnteringSecure(ctx: nsIInterfaceRequestor_std17; out _retval: PRBool): nsresult; extdecl;
    function ConfirmEnteringWeak(ctx: nsIInterfaceRequestor_std17; out _retval: PRBool): nsresult; extdecl;
    function ConfirmLeavingSecure(ctx: nsIInterfaceRequestor_std17; out _retval: PRBool): nsresult; extdecl;
    function ConfirmMixedMode(ctx: nsIInterfaceRequestor_std17; out _retval: PRBool): nsresult; extdecl;
    function ConfirmPostToInsecure(ctx: nsIInterfaceRequestor_std17; out _retval: PRBool): nsresult; extdecl;
    function ConfirmPostToInsecureFromSecure(ctx: nsIInterfaceRequestor_std17; out _retval: PRBool): nsresult; extdecl;
  end;

  nsISelection_std17 = interface(nsISupports_std17)
  ['{b2c7ed59-8634-4352-9e37-5484c8b6e4e1}']
    function GetAnchorNode(out aAnchorNode: nsIDOMNode_std17): Longword; extdecl;
    function GetAnchorOffset(out aAnchorOffset: PRInt32): Longword; extdecl;
    function GetFocusNode(out aFocusNode: nsIDOMNode_std17): Longword; extdecl;
    function GetFocusOffset(out aFocusOffset: PRInt32): Longword; extdecl;
    function GetIsCollapsed(out aIsCollapsed: PRBool): Longword; extdecl;
    function GetRangeCount(out aRangeCount: PRInt32): Longword; extdecl;
    function GetRangeAt(index: PRInt32; out _retval: nsIDOMRange_std17): nsresult; extdecl;
    function Collapse(parentNode: nsIDOMNode_std17; offset: PRInt32): nsresult; extdecl;
    function Extend(parentNode: nsIDOMNode_std17; offset: PRInt32): nsresult; extdecl;
    function CollapseToStart(): nsresult; extdecl;
    function CollapseToEnd(): nsresult; extdecl;
    function ContainsNode(node: nsIDOMNode_std17; entirelyContained: PRBool; out _retval: PRBool): nsresult; extdecl;
    function SelectAllChildren(parentNode: nsIDOMNode_std17): nsresult; extdecl;
    function AddRange(range: nsIDOMRange_std17): nsresult; extdecl;
    function RemoveRange(range: nsIDOMRange_std17): nsresult; extdecl;
    function RemoveAllRanges(): nsresult; extdecl;
    function DeleteFromDocument(): nsresult; extdecl;
    function SelectionLanguageChange(langRTL: PRBool): nsresult; extdecl;
    function ToString(out _retval: PWideChar): nsresult; extdecl;
  end;

  nsIServiceManager_std17 = interface(nsISupports_std17)
  ['{8bb35ed9-e332-462d-9155-4a002ab5c958}']
    function GetService(constref aClass: TGUID; constref aIID: TGUID; out _result): nsresult; extdecl;
    function GetServiceByContractID(const aContractID: PAnsiChar; constref aIID: TGUID; out _result): nsresult; extdecl;
    function IsServiceInstantiated(constref aClass: TGUID; constref aIID: TGUID; out _retval: PRBool): nsresult; extdecl;
    function IsServiceInstantiatedByContractID(const aContractID: PAnsiChar; constref aIID: TGUID; out _retval: PRBool): nsresult; extdecl;
  end;

  nsISHistory_std17 = interface(nsISupports_std17)
  ['{7294fe9b-14d8-11d5-9882-00c04fa02f40}']
    function GetCount(out aCount: PRInt32): Longword; extdecl;
    function GetIndex(out aIndex: PRInt32): Longword; extdecl;
    function GetMaxLength(out aMaxLength: PRInt32): Longword; extdecl;
    function SetMaxLength(aMaxLength: PRInt32): Longword; extdecl;
    function GetEntryAtIndex(index: PRInt32; modifyIndex: PRBool; out _retval: nsIHistoryEntry_std17): nsresult; extdecl;
    function PurgeHistory(numEntries: PRInt32): nsresult; extdecl;
    function AddSHistoryListener(aListener: nsISHistoryListener_std17): nsresult; extdecl;
    function RemoveSHistoryListener(aListener: nsISHistoryListener_std17): nsresult; extdecl;
    function GetSHistoryEnumerator(out aSHistoryEnumerator: nsISimpleEnumerator_std17): Longword; extdecl;
  end;

  nsISHistoryListener_std17 = interface(nsISupports_std17)
  ['{3b07f591-e8e1-11d4-9882-00c04fa02f40}']
    function OnHistoryNewEntry(aNewURI: nsIURI_std17): nsresult; extdecl;
    function OnHistoryGoBack(aBackURI: nsIURI_std17; out _retval: PRBool): nsresult; extdecl;
    function OnHistoryGoForward(aForwardURI: nsIURI_std17; out _retval: PRBool): nsresult; extdecl;
    function OnHistoryReload(aReloadURI: nsIURI_std17; aReloadFlags: PRUint32; out _retval: PRBool): nsresult; extdecl;
    function OnHistoryGotoIndex(aIndex: PRInt32; aGotoURI: nsIURI_std17; out _retval: PRBool): nsresult; extdecl;
    function OnHistoryPurge(aNumEntries: PRInt32; out _retval: PRBool): nsresult; extdecl;
  end;

  nsIStreamListener_std17 = interface(nsIRequestObserver_std17)
  ['{1a637020-1482-11d3-9333-00104ba0fd40}']
    function OnDataAvailable(aRequest: nsIRequest_std17; aContext: nsISupports_std17; aInputStream: nsIInputStream_std17; aOffset: PRUint32; aCount: PRUint32): nsresult; extdecl;
  end;

  nsISupportsPrimitive_std17 = interface(nsISupports_std17)
  ['{d0d4b136-1dd1-11b2-9371-f0727ef827c0}']
    function GetType(out aType: PRUint16): Longword; extdecl;
  end;

  nsISupportsID_std17 = interface(nsISupportsPrimitive_std17)
  ['{d18290a0-4a1c-11d3-9890-006008962422}']
    function GetData(out aData: PGUID): Longword; extdecl;
    function SetData(const aData: PGUID): Longword; extdecl;
    function ToString(out _retval: PAnsiChar): nsresult; extdecl;
  end;

  nsISupportsCString_std17 = interface(nsISupportsPrimitive_std17)
  ['{d65ff270-4a1c-11d3-9890-006008962422}']
    function GetData(aData: nsACString): Longword; extdecl;
    function SetData(const aData: nsACString): Longword; extdecl;
    function ToString(out _retval: PAnsiChar): nsresult; extdecl;
  end;

  nsISupportsString_std17 = interface(nsISupportsPrimitive_std17)
  ['{d79dc970-4a1c-11d3-9890-006008962422}']
    function GetData(aData: nsAString): Longword; extdecl;
    function SetData(const aData: nsAString): Longword; extdecl;
    function ToString(out _retval: PWideChar): nsresult; extdecl;
  end;

  nsISupportsPRBool_std17 = interface(nsISupportsPrimitive_std17)
  ['{ddc3b490-4a1c-11d3-9890-006008962422}']
    function GetData(out aData: PRBool): Longword; extdecl;
    function SetData(aData: PRBool): Longword; extdecl;
    function ToString(out _retval: PAnsiChar): nsresult; extdecl;
  end;

  nsISupportsPRUint8_std17 = interface(nsISupportsPrimitive_std17)
  ['{dec2e4e0-4a1c-11d3-9890-006008962422}']
    function GetData(out aData: PRUint8): Longword; extdecl;
    function SetData(aData: PRUint8): Longword; extdecl;
    function ToString(out _retval: PAnsiChar): nsresult; extdecl;
  end;

  nsISupportsPRUint16_std17 = interface(nsISupportsPrimitive_std17)
  ['{dfacb090-4a1c-11d3-9890-006008962422}']
    function GetData(out aData: PRUint16): Longword; extdecl;
    function SetData(aData: PRUint16): Longword; extdecl;
    function ToString(out _retval: PAnsiChar): nsresult; extdecl;
  end;

  nsISupportsPRUint32_std17 = interface(nsISupportsPrimitive_std17)
  ['{e01dc470-4a1c-11d3-9890-006008962422}']
    function GetData(out aData: PRUint32): Longword; extdecl;
    function SetData(aData: PRUint32): Longword; extdecl;
    function ToString(out _retval: PAnsiChar): nsresult; extdecl;
  end;

  nsISupportsPRUint64_std17 = interface(nsISupportsPrimitive_std17)
  ['{e13567c0-4a1c-11d3-9890-006008962422}']
    function GetData(out aData: PRUint64): Longword; extdecl;
    function SetData(aData: PRUint64): Longword; extdecl;
    function ToString(out _retval: PAnsiChar): nsresult; extdecl;
  end;

  nsISupportsPRTime_std17 = interface(nsISupportsPrimitive_std17)
  ['{e2563630-4a1c-11d3-9890-006008962422}']
    function GetData(out aData: PRTime): Longword; extdecl;
    function SetData(aData: PRTime): Longword; extdecl;
    function ToString(out _retval: PAnsiChar): nsresult; extdecl;
  end;

  nsISupportsChar_std17 = interface(nsISupportsPrimitive_std17)
  ['{e2b05e40-4a1c-11d3-9890-006008962422}']
    function GetData(out aData: AnsiChar): Longword; extdecl;
    function SetData(aData: AnsiChar): Longword; extdecl;
    function ToString(out _retval: PAnsiChar): nsresult; extdecl;
  end;

  nsISupportsPRInt16_std17 = interface(nsISupportsPrimitive_std17)
  ['{e30d94b0-4a1c-11d3-9890-006008962422}']
    function GetData(out aData: PRInt16): Longword; extdecl;
    function SetData(aData: PRInt16): Longword; extdecl;
    function ToString(out _retval: PAnsiChar): nsresult; extdecl;
  end;

  nsISupportsPRInt32_std17 = interface(nsISupportsPrimitive_std17)
  ['{e36c5250-4a1c-11d3-9890-006008962422}']
    function GetData(out aData: PRInt32): Longword; extdecl;
    function SetData(aData: PRInt32): Longword; extdecl;
    function ToString(out _retval: PAnsiChar): nsresult; extdecl;
  end;

  nsISupportsPRInt64_std17 = interface(nsISupportsPrimitive_std17)
  ['{e3cb0ff0-4a1c-11d3-9890-006008962422}']
    function GetData(out aData: PRInt64): Longword; extdecl;
    function SetData(aData: PRInt64): Longword; extdecl;
    function ToString(out _retval: PAnsiChar): nsresult; extdecl;
  end;

  nsISupportsFloat_std17 = interface(nsISupportsPrimitive_std17)
  ['{abeaa390-4ac0-11d3-baea-00805f8a5dd7}']
    function GetData(out aData: Single): Longword; extdecl;
    function SetData(aData: Single): Longword; extdecl;
    function ToString(out _retval: PAnsiChar): nsresult; extdecl;
  end;

  nsISupportsDouble_std17 = interface(nsISupportsPrimitive_std17)
  ['{b32523a0-4ac0-11d3-baea-00805f8a5dd7}']
    function GetData(out aData: Double): Longword; extdecl;
    function SetData(aData: Double): Longword; extdecl;
    function ToString(out _retval: PAnsiChar): nsresult; extdecl;
  end;

  nsISupportsVoid_std17 = interface(nsISupportsPrimitive_std17)
  ['{464484f0-568d-11d3-baf8-00805f8a5dd7}']
    function GetData(out aData: Pointer): Longword; extdecl;
    function SetData(aData: Pointer): Longword; extdecl;
    function ToString(out _retval: PAnsiChar): nsresult; extdecl;
  end;

  nsISupportsInterfacePointer_std17 = interface(nsISupportsPrimitive_std17)
  ['{995ea724-1dd1-11b2-9211-c21bdd3e7ed0}']
    function GetData(out aData: nsISupports_std17): Longword; extdecl;
    function SetData(aData: nsISupports_std17): Longword; extdecl;
    function GetDataIID(out aDataIID: PGUID): Longword; extdecl;
    function SetDataIID(const aDataIID: PGUID): Longword; extdecl;
    function ToString(out _retval: PAnsiChar): nsresult; extdecl;
  end;

  nsITooltipListener_std17 = interface(nsISupports_std17)
  ['{44b78386-1dd2-11b2-9ad2-e4eee2ca1916}']
    function OnShowTooltip(aXCoords: PRInt32; aYCoords: PRInt32; const aTipText: PWideChar): nsresult; extdecl;
    function OnHideTooltip(): nsresult; extdecl;
  end;

  nsITooltipTextProvider_std17 = interface(nsISupports_std17)
  ['{b128a1e6-44f3-4331-8fbe-5af360ff21ee}']
    function GetNodeText(aNode: nsIDOMNode_std17; out aText: PWideChar; out _retval: PRBool): nsresult; extdecl;
  end;

  nsITraceRefcnt_std17 = interface(nsISupports_std17)
  ['{273dc92f-0fe6-4545-96a9-21be77828039}']
    function LogAddRef(aPtr: Pointer; aNewRefcnt: nsrefcnt; const aTypeName: PAnsiChar; aInstanceSize: PRUint32): nsresult; extdecl;
    function LogRelease(aPtr: Pointer; aNewRefcnt: nsrefcnt; const aTypeName: PAnsiChar): nsresult; extdecl;
    function LogCtor(aPtr: Pointer; const aTypeName: PAnsiChar; aInstanceSize: PRUint32): nsresult; extdecl;
    function LogDtor(aPtr: Pointer; const aTypeName: PAnsiChar; aInstanceSize: PRUint32): nsresult; extdecl;
    function LogAddCOMPtr(aPtr: Pointer; aObject: nsISupports_std17): nsresult; extdecl;
    function LogReleaseCOMPtr(aPtr: Pointer; aObject: nsISupports_std17): nsresult; extdecl;
  end;

  nsIUnicharStreamListener_std17 = interface(nsIRequestObserver_std17)
  ['{4a7e9b62-fef8-400d-9865-d6820f630b4c}']
    function OnUnicharDataAvailable(aRequest: nsIRequest_std17; aContext: nsISupports_std17; const aData: nsAString): nsresult; extdecl;
  end;

  nsIUploadChannel_std17 = interface(nsISupports_std17)
  ['{ddf633d8-e9a4-439d-ad88-de636fd9bb75}']
    function SetUploadStream(aStream: nsIInputStream_std17; const aContentType: nsACString; aContentLength: PRInt32): nsresult; extdecl;
    function GetUploadStream(out aUploadStream: nsIInputStream_std17): Longword; extdecl;
  end;

  nsIURIContentListener_std17 = interface(nsISupports_std17)
  ['{94928ab3-8b63-11d3-989d-001083010e9b}']
    function OnStartURIOpen(aURI: nsIURI_std17; out _retval: PRBool): nsresult; extdecl;
    function DoContent(const aContentType: PAnsiChar; aIsContentPreferred: PRBool; aRequest: nsIRequest_std17; out aContentHandler: nsIStreamListener_std17; out _retval: PRBool): nsresult; extdecl;
    function IsPreferred(const aContentType: PAnsiChar; out aDesiredContentType: PAnsiChar; out _retval: PRBool): nsresult; extdecl;
    function CanHandleContent(const aContentType: PAnsiChar; aIsContentPreferred: PRBool; out aDesiredContentType: PAnsiChar; out _retval: PRBool): nsresult; extdecl;
    function GetLoadCookie(out aLoadCookie: nsISupports_std17): Longword; extdecl;
    function SetLoadCookie(aLoadCookie: nsISupports_std17): Longword; extdecl;
    function GetParentContentListener(out aParentContentListener: nsIURIContentListener_std17): Longword; extdecl;
    function SetParentContentListener(aParentContentListener: nsIURIContentListener_std17): Longword; extdecl;
  end;

  nsIWeakReference_std17 = interface(nsISupports_std17)
  ['{9188bc85-f92e-11d2-81ef-0060083a0bcf}']
    function QueryReferent(constref uuid: TGUID; out _result): nsresult; extdecl;
  end;

  nsISupportsWeakReference_std17 = interface(nsISupports_std17)
  ['{9188bc86-f92e-11d2-81ef-0060083a0bcf}']
    function GetWeakReference(out _retval: nsIWeakReference_std17): nsresult; extdecl;
  end;

  nsIWebBrowser_std17 = interface(nsISupports_std17)
  ['{69e5df00-7b8b-11d3-af61-00a024ffc08c}']
    function AddWebBrowserListener(aListener: nsIWeakReference_std17; constref aIID: TGUID): nsresult; extdecl;
    function RemoveWebBrowserListener(aListener: nsIWeakReference_std17; constref aIID: TGUID): nsresult; extdecl;
    function GetContainerWindow(out aContainerWindow: nsIWebBrowserChrome_std17): Longword; extdecl;
    function SetContainerWindow(aContainerWindow: nsIWebBrowserChrome_std17): Longword; extdecl;
    function GetParentURIContentListener(out aParentURIContentListener: nsIURIContentListener_std17): Longword; extdecl;
    function SetParentURIContentListener(aParentURIContentListener: nsIURIContentListener_std17): Longword; extdecl;
    function GetContentDOMWindow(out aContentDOMWindow: nsIDOMWindow_std17): Longword; extdecl;
  end;

  nsIWebBrowserChrome_std17 = interface(nsISupports_std17)
  ['{ba434c60-9d52-11d3-afb0-00a024ffc08c}']
    function SetStatus(statusType: PRUint32; const status: PWideChar): nsresult; extdecl;
    function GetWebBrowser(out aWebBrowser: nsIWebBrowser_std17): Longword; extdecl;
    function SetWebBrowser(aWebBrowser: nsIWebBrowser_std17): Longword; extdecl;
    function GetChromeFlags(out aChromeFlags: PRUint32): Longword; extdecl;
    function SetChromeFlags(aChromeFlags: PRUint32): Longword; extdecl;
    function DestroyBrowserWindow(): nsresult; extdecl;
    function SizeBrowserTo(aCX: PRInt32; aCY: PRInt32): nsresult; extdecl;
    function ShowAsModal(): nsresult; extdecl;
    function IsWindowModal(out _retval: PRBool): nsresult; extdecl;
    function ExitModalEventLoop(aStatus: nsresult): nsresult; extdecl;
  end;

  nsIWebBrowserChromeFocus_std17 = interface(nsISupports_std17)
  ['{d2206418-1dd1-11b2-8e55-acddcd2bcfb8}']
    function FocusNextElement(): nsresult; extdecl;
    function FocusPrevElement(): nsresult; extdecl;
  end;

  nsIWebBrowserFind_std17 = interface(nsISupports_std17)
  ['{2f977d44-5485-11d4-87e2-0010a4e75ef2}']
    function FindNext(out _retval: PRBool): nsresult; extdecl;
    function GetSearchString(out aSearchString: PWideChar): Longword; extdecl;
    function SetSearchString(const aSearchString: PWideChar): Longword; extdecl;
    function GetFindBackwards(out aFindBackwards: PRBool): Longword; extdecl;
    function SetFindBackwards(aFindBackwards: PRBool): Longword; extdecl;
    function GetWrapFind(out aWrapFind: PRBool): Longword; extdecl;
    function SetWrapFind(aWrapFind: PRBool): Longword; extdecl;
    function GetEntireWord(out aEntireWord: PRBool): Longword; extdecl;
    function SetEntireWord(aEntireWord: PRBool): Longword; extdecl;
    function GetMatchCase(out aMatchCase: PRBool): Longword; extdecl;
    function SetMatchCase(aMatchCase: PRBool): Longword; extdecl;
    function GetSearchFrames(out aSearchFrames: PRBool): Longword; extdecl;
    function SetSearchFrames(aSearchFrames: PRBool): Longword; extdecl;
  end;

  nsIWebBrowserFindInFrames_std17 = interface(nsISupports_std17)
  ['{e0f5d182-34bc-11d5-be5b-b760676c6ebc}']
    function GetCurrentSearchFrame(out aCurrentSearchFrame: nsIDOMWindow_std17): Longword; extdecl;
    function SetCurrentSearchFrame(aCurrentSearchFrame: nsIDOMWindow_std17): Longword; extdecl;
    function GetRootSearchFrame(out aRootSearchFrame: nsIDOMWindow_std17): Longword; extdecl;
    function SetRootSearchFrame(aRootSearchFrame: nsIDOMWindow_std17): Longword; extdecl;
    function GetSearchSubframes(out aSearchSubframes: PRBool): Longword; extdecl;
    function SetSearchSubframes(aSearchSubframes: PRBool): Longword; extdecl;
    function GetSearchParentFrames(out aSearchParentFrames: PRBool): Longword; extdecl;
    function SetSearchParentFrames(aSearchParentFrames: PRBool): Longword; extdecl;
  end;

  nsIWebBrowserFocus_std17 = interface(nsISupports_std17)
  ['{9c5d3c58-1dd1-11b2-a1c9-f3699284657a}']
    function Activate(): nsresult; extdecl;
    function Deactivate(): nsresult; extdecl;
    function SetFocusAtFirstElement(): nsresult; extdecl;
    function SetFocusAtLastElement(): nsresult; extdecl;
    function GetFocusedWindow(out aFocusedWindow: nsIDOMWindow_std17): Longword; extdecl;
    function SetFocusedWindow(aFocusedWindow: nsIDOMWindow_std17): Longword; extdecl;
    function GetFocusedElement(out aFocusedElement: nsIDOMElement_std17): Longword; extdecl;
    function SetFocusedElement(aFocusedElement: nsIDOMElement_std17): Longword; extdecl;
  end;

  nsIWebBrowserPrint_std17 = interface(nsISupports_std17)
  ['{9a7ca4b0-fbba-11d4-a869-00105a183419}']
    function GetGlobalPrintSettings(out aGlobalPrintSettings: nsIPrintSettings_std17): Longword; extdecl;
    function GetCurrentPrintSettings(out aCurrentPrintSettings: nsIPrintSettings_std17): Longword; extdecl;
    function GetCurrentChildDOMWindow(out aCurrentChildDOMWindow: nsIDOMWindow_std17): Longword; extdecl;
    function GetDoingPrint(out aDoingPrint: PRBool): Longword; extdecl;
    function GetDoingPrintPreview(out aDoingPrintPreview: PRBool): Longword; extdecl;
    function GetIsFramesetDocument(out aIsFramesetDocument: PRBool): Longword; extdecl;
    function GetIsFramesetFrameSelected(out aIsFramesetFrameSelected: PRBool): Longword; extdecl;
    function GetIsIFrameSelected(out aIsIFrameSelected: PRBool): Longword; extdecl;
    function GetIsRangeSelection(out aIsRangeSelection: PRBool): Longword; extdecl;
    function GetPrintPreviewNumPages(out aPrintPreviewNumPages: PRInt32): Longword; extdecl;
    function Print(aThePrintSettings: nsIPrintSettings_std17; aWPListener: nsIWebProgressListener_std17): nsresult; extdecl;
    function PrintPreview(aThePrintSettings: nsIPrintSettings_std17; aChildDOMWin: nsIDOMWindow_std17; aWPListener: nsIWebProgressListener_std17): nsresult; extdecl;
    function PrintPreviewNavigate(aNavType: PRInt16; aPageNum: PRInt32): nsresult; extdecl;
    function Cancel(): nsresult; extdecl;
    function EnumerateDocumentNames(out aCount: PRUint32; out aResult_array): nsresult; extdecl;
    function ExitPrintPreview(): nsresult; extdecl;
  end;

  nsIWebBrowserSetup_std17 = interface(nsISupports_std17)
  ['{f15398a0-8018-11d3-af70-00a024ffc08c}']
    function SetProperty(aId: PRUint32; aValue: PRUint32): nsresult; extdecl;
  end;

  nsIWebProgress_std17 = interface(nsISupports_std17)
  ['{570f39d0-efd0-11d3-b093-00a024ffc08c}']
    function AddProgressListener(aListener: nsIWebProgressListener_std17; aNotifyMask: PRUint32): nsresult; extdecl;
    function RemoveProgressListener(aListener: nsIWebProgressListener_std17): nsresult; extdecl;
    function GetDOMWindow(out aDOMWindow: nsIDOMWindow_std17): Longword; extdecl;
    function GetIsLoadingDocument(out aIsLoadingDocument: PRBool): Longword; extdecl;
  end;

  nsIWebProgressListener_std17 = interface(nsISupports_std17)
  ['{570f39d1-efd0-11d3-b093-00a024ffc08c}']
    function OnStateChange(aWebProgress: nsIWebProgress_std17; aRequest: nsIRequest_std17; aStateFlags: PRUint32; aStatus: nsresult): nsresult; extdecl;
    function OnProgressChange(aWebProgress: nsIWebProgress_std17; aRequest: nsIRequest_std17; aCurSelfProgress: PRInt32; aMaxSelfProgress: PRInt32; aCurTotalProgress: PRInt32; aMaxTotalProgress: PRInt32): nsresult; extdecl;
    function OnLocationChange(aWebProgress: nsIWebProgress_std17; aRequest: nsIRequest_std17; aLocation: nsIURI_std17): nsresult; extdecl;
    function OnStatusChange(aWebProgress: nsIWebProgress_std17; aRequest: nsIRequest_std17; aStatus: nsresult; const aMessage: PWideChar): nsresult; extdecl;
    function OnSecurityChange(aWebProgress: nsIWebProgress_std17; aRequest: nsIRequest_std17; aState: PRUint32): nsresult; extdecl;
  end;

  nsIWindowCreator_std17 = interface(nsISupports_std17)
  ['{30465632-a777-44cc-90f9-8145475ef999}']
    function CreateChromeWindow(parent: nsIWebBrowserChrome_std17; chromeFlags: PRUint32; out _retval: nsIWebBrowserChrome_std17): nsresult; extdecl;
  end;

  nsIWindowWatcher_std17 = interface(nsISupports_std17)
  ['{002286a8-494b-43b3-8ddd-49e3fc50622b}']
    function OpenWindow(aParent: nsIDOMWindow_std17; const aUrl: PAnsiChar; const aName: PAnsiChar; const aFeatures: PAnsiChar; aArguments: nsISupports_std17; out _retval: nsIDOMWindow_std17): nsresult; extdecl;
    function RegisterNotification(aObserver: nsIObserver_std17): nsresult; extdecl;
    function UnregisterNotification(aObserver: nsIObserver_std17): nsresult; extdecl;
    function GetWindowEnumerator(out _retval: nsISimpleEnumerator_std17): nsresult; extdecl;
    function GetNewPrompter(aParent: nsIDOMWindow_std17; out _retval: nsIPrompt_std17): nsresult; extdecl;
    function GetNewAuthPrompter(aParent: nsIDOMWindow_std17; out _retval: nsIAuthPrompt_std17): nsresult; extdecl;
    function SetWindowCreator(creator: nsIWindowCreator_std17): nsresult; extdecl;
    function GetChromeForWindow(aWindow: nsIDOMWindow_std17; out _retval: nsIWebBrowserChrome_std17): nsresult; extdecl;
    function GetWindowByName(const aTargetName: PWideChar; aCurrentWindow: nsIDOMWindow_std17; out _retval: nsIDOMWindow_std17): nsresult; extdecl;
    function GetActiveWindow(out aActiveWindow: nsIDOMWindow_std17): Longword; extdecl;
    function SetActiveWindow(aActiveWindow: nsIDOMWindow_std17): Longword; extdecl;
  end;

  nsIX509Cert_std17 = interface(nsISupports_std17)
  ['{f0980f60-ee3d-11d4-998b-00b0d02354a0}']
    function GetNickname(aNickname: nsAString): Longword; extdecl;
    function GetEmailAddress(aEmailAddress: nsAString): Longword; extdecl;
    function GetEmailAddresses(out length: PRUint32; out addresses_array): nsresult; extdecl;
    function ContainsEmailAddress(const aEmailAddress: nsAString; out _retval: PRBool): nsresult; extdecl;
    function GetSubjectName(aSubjectName: nsAString): Longword; extdecl;
    function GetCommonName(aCommonName: nsAString): Longword; extdecl;
    function GetOrganization(aOrganization: nsAString): Longword; extdecl;
    function GetOrganizationalUnit(aOrganizationalUnit: nsAString): Longword; extdecl;
    function GetSha1Fingerprint(aSha1Fingerprint: nsAString): Longword; extdecl;
    function GetMd5Fingerprint(aMd5Fingerprint: nsAString): Longword; extdecl;
    function GetTokenName(aTokenName: nsAString): Longword; extdecl;
    function GetIssuerName(aIssuerName: nsAString): Longword; extdecl;
    function GetSerialNumber(aSerialNumber: nsAString): Longword; extdecl;
    function GetIssuerCommonName(aIssuerCommonName: nsAString): Longword; extdecl;
    function GetIssuerOrganization(aIssuerOrganization: nsAString): Longword; extdecl;
    function GetIssuerOrganizationUnit(aIssuerOrganizationUnit: nsAString): Longword; extdecl;
    function GetIssuer(out aIssuer: nsIX509Cert_std17): Longword; extdecl;
    function GetValidity(out aValidity: nsIX509CertValidity_std17): Longword; extdecl;
    function GetDbKey(out aDbKey: PAnsiChar): Longword; extdecl;
    function GetWindowTitle(out aWindowTitle: PAnsiChar): Longword; extdecl;
    function GetChain(out _retval: nsIArray_std17): nsresult; extdecl;
    function GetUsagesArray(ignoreOcsp: PRBool; out verified: PRUint32; out count: PRUint32; out usages_array): nsresult; extdecl;
    function GetUsagesString(ignoreOcsp: PRBool; out verified: PRUint32; usages: nsAString): nsresult; extdecl;
    function VerifyForUsage(usage: PRUint32; out _retval: PRUint32): nsresult; extdecl;
    function GetASN1Structure(out aASN1Structure: nsIASN1Object_std17): Longword; extdecl;
    function GetRawDER(out length: PRUint32; out data_array): nsresult; extdecl;
    function Equals(other: nsIX509Cert_std17; out _retval: PRBool): nsresult; extdecl;
  end;

  nsIX509CertDB_std17 = interface(nsISupports_std17)
  ['{da48b3c0-1284-11d5-ac67-000064657374}']
    function FindCertByNickname(aToken: nsISupports_std17; const aNickname: nsAString; out _retval: nsIX509Cert_std17): nsresult; extdecl;
    function FindCertByDBKey(const aDBkey: PAnsiChar; aToken: nsISupports_std17; out _retval: nsIX509Cert_std17): nsresult; extdecl;
    function FindCertNicknames(aToken: nsISupports_std17; aType: PRUint32; out count: PRUint32; out certNameList_array): nsresult; extdecl;
    function FindEmailEncryptionCert(const aNickname: nsAString; out _retval: nsIX509Cert_std17): nsresult; extdecl;
    function FindEmailSigningCert(const aNickname: nsAString; out _retval: nsIX509Cert_std17): nsresult; extdecl;
    function FindCertByEmailAddress(aToken: nsISupports_std17; const aEmailAddress: PAnsiChar; out _retval: nsIX509Cert_std17): nsresult; extdecl;
    function ImportCertificates(const data_array; length: PRUint32; _type: PRUint32; ctx: nsIInterfaceRequestor_std17): nsresult; extdecl;
    function ImportEmailCertificate(const data_array; length: PRUint32; ctx: nsIInterfaceRequestor_std17): nsresult; extdecl;
    function ImportServerCertificate(const data_array; length: PRUint32; ctx: nsIInterfaceRequestor_std17): nsresult; extdecl;
    function ImportUserCertificate(const data_array; length: PRUint32; ctx: nsIInterfaceRequestor_std17): nsresult; extdecl;
    function DeleteCertificate(aCert: nsIX509Cert_std17): nsresult; extdecl;
    function SetCertTrust(cert: nsIX509Cert_std17; _type: PRUint32; trust: PRUint32): nsresult; extdecl;
    function IsCertTrusted(cert: nsIX509Cert_std17; certType: PRUint32; trustType: PRUint32; out _retval: PRBool): nsresult; extdecl;
    function ImportCertsFromFile(aToken: nsISupports_std17; aFile: nsILocalFile_std17; aType: PRUint32): nsresult; extdecl;
    function ImportPKCS12File(aToken: nsISupports_std17; aFile: nsILocalFile_std17): nsresult; extdecl;
    function ExportPKCS12File(aToken: nsISupports_std17; aFile: nsILocalFile_std17; count: PRUint32; const aCerts_array): nsresult; extdecl;
    function GetOCSPResponders(out _retval: nsIArray_std17): nsresult; extdecl;
    function GetIsOcspOn(out aIsOcspOn: PRBool): Longword; extdecl;
    function ConstructX509FromBase64(const base64: PAnsiChar; out _retval: nsIX509Cert_std17): nsresult; extdecl;
  end;

  nsIX509CertValidity_std17 = interface(nsISupports_std17)
  ['{e701dfd8-1dd1-11b2-a172-ffa6cc6156ad}']
    function GetNotBefore(out aNotBefore: PRTime): Longword; extdecl;
    function GetNotBeforeLocalTime(aNotBeforeLocalTime: nsAString): Longword; extdecl;
    function GetNotBeforeLocalDay(aNotBeforeLocalDay: nsAString): Longword; extdecl;
    function GetNotBeforeGMT(aNotBeforeGMT: nsAString): Longword; extdecl;
    function GetNotAfter(out aNotAfter: PRTime): Longword; extdecl;
    function GetNotAfterLocalTime(aNotAfterLocalTime: nsAString): Longword; extdecl;
    function GetNotAfterLocalDay(aNotAfterLocalDay: nsAString): Longword; extdecl;
    function GetNotAfterGMT(aNotAfterGMT: nsAString): Longword; extdecl;
  end;

implementation

end.
